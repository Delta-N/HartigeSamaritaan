name: Build and Deploy

on:
  push:
    branches:
      - main
      - feature/bicep

permissions:
  id-token: write
  contents: read

env:
  BUILD_CONFIGURATION: Release
  DOTNET_VERSION: 8.0.x
  NODE_VERSION: 20.x
  ANGULAR_VERSION: 18.0.3
  PNPM_VERSION: 8
  AZURE_WEBAPP_PACKAGE_PATH: ./RoosterPlanner.UI/
  AZURE_API_PACKAGE_PATH: ./RoosterPlanner.Api/

jobs:
  build-front-end:
    runs-on: ubuntu-latest
    environment:
      name: dev

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Angular CLI
        run: pnpm add -g @angular/cli@${{ env.ANGULAR_VERSION }}

      - name: Build front-end
        run: |
          pnpm install
          ng build --configuration production --output-path=../staging/web
        working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip output
        run: zip -qq -r ../../web.zip .
        working-directory: ./staging/web

      - uses: actions/upload-artifact@v4
        with:
          name: Web
          path: web.zip

  validate-bicep:
    name: Validate Bicep
    runs-on: ubuntu-latest
    environment:
      name: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Log into Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}

      - name: Validate Bicep
        uses: azure/bicep-deploy@v1
        # this gives an error but the deployment is on resource scope so we can't pass location
        with:
          name: "bicep-validation"
          scope: resourceGroup
          type: deployment
          operation: validate
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION }}
          resource-group-name: ${{ secrets.AZURE_RG_NAME }}
          template-file: ./.infra/fe/main.bicep
          parameters-file: ./.infra/fe/main.dev.bicepparam

  deploy-dev:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    needs:
      - build-front-end
      - validate-bicep
    environment:
      name: ${{ github.ref_name == 'main' && 'prd' || github.ref_name == 'develop' && 'dev' }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: Web
