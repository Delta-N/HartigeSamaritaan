name: Build the project

on:
  push:
    branches:
      - develop

env:
  BUILD_CONFIGURATION: Release
  DOTNET_VERSION: 8.0.x
  NODE_VERSION: 20.x
  ANGULAR_VERSION: 17.1.10
  AZURE_WEBAPP_PACKAGE_PATH: ./RoosterPlanner.UI/
  AZURE_API_PACKAGE_PATH: ./RoosterPlanner.Api/

jobs:
  build-front-end:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Install PNPM
        run: npm install -g pnpm

      - name: Install Angular CLI
        run: pnpm add -g @angular/cli@${{ env.ANGULAR_VERSION }}

      - name: Build front-end
        run: |
          pnpm install
          ng build --configuration production --outputPath=../staging/web
        working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Zip the output
        run: zip -r ../staging/web.zip ../staging/web

      - uses: actions/upload-artifact@v3
        with:
          name: Web
          path: ../staging/web.zip

  build-back-end:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Build API
        run: dotnet build --configuration ${{ env.BUILD_CONFIGURATION }}
        working-directory: ${{ env.AZURE_API_PACKAGE_PATH }}

      - name: Test API
        run: dotnet test --configuration ${{ env.BUILD_CONFIGURATION }} --collect "Code coverage" --logger trx
        working-directory: ${{ env.AZURE_API_PACKAGE_PATH }}

      - name: Publish API
        run: dotnet publish --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --no-restore --output ../staging/api
        working-directory: ${{ env.AZURE_API_PACKAGE_PATH }}

      - name: Zip the output
        run: zip -r ../staging/api.zip ../staging/api

      - uses: actions/upload-artifact@v3
        with:
          name: Api
          path: ../staging/api.zip
