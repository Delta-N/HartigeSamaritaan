### YamlMime:XRefMap
sorted: true
references:
- uid: RoosterPlanner.Api
  name: RoosterPlanner.Api
  href: api/RoosterPlanner.Api.html
  commentId: N:RoosterPlanner.Api
  fullName: RoosterPlanner.Api
  nameWithType: RoosterPlanner.Api
- uid: RoosterPlanner.Api.Controllers
  name: RoosterPlanner.Api.Controllers
  href: api/RoosterPlanner.Api.Controllers.html
  commentId: N:RoosterPlanner.Api.Controllers
  fullName: RoosterPlanner.Api.Controllers
  nameWithType: RoosterPlanner.Api.Controllers
- uid: RoosterPlanner.Api.Controllers.AvailabilityController
  name: AvailabilityController
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html
  commentId: T:RoosterPlanner.Api.Controllers.AvailabilityController
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController
  nameWithType: AvailabilityController
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.#ctor(Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.AvailabilityController},RoosterPlanner.Service.IAvailabilityService,RoosterPlanner.Service.IShiftService,RoosterPlanner.Service.ITaskService,RoosterPlanner.Service.IPersonService)
  name: AvailabilityController(ILogger<AvailabilityController>, IAvailabilityService, IShiftService, ITaskService, IPersonService)
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController__ctor_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Api_Controllers_AvailabilityController__RoosterPlanner_Service_IAvailabilityService_RoosterPlanner_Service_IShiftService_RoosterPlanner_Service_ITaskService_RoosterPlanner_Service_IPersonService_
  commentId: M:RoosterPlanner.Api.Controllers.AvailabilityController.#ctor(Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.AvailabilityController},RoosterPlanner.Service.IAvailabilityService,RoosterPlanner.Service.IShiftService,RoosterPlanner.Service.ITaskService,RoosterPlanner.Service.IPersonService)
  name.vb: AvailabilityController(ILogger(Of AvailabilityController), IAvailabilityService, IShiftService, ITaskService, IPersonService)
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.AvailabilityController(Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Api.Controllers.AvailabilityController>, RoosterPlanner.Service.IAvailabilityService, RoosterPlanner.Service.IShiftService, RoosterPlanner.Service.ITaskService, RoosterPlanner.Service.IPersonService)
  fullName.vb: RoosterPlanner.Api.Controllers.AvailabilityController.AvailabilityController(Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Api.Controllers.AvailabilityController), RoosterPlanner.Service.IAvailabilityService, RoosterPlanner.Service.IShiftService, RoosterPlanner.Service.ITaskService, RoosterPlanner.Service.IPersonService)
  nameWithType: AvailabilityController.AvailabilityController(ILogger<AvailabilityController>, IAvailabilityService, IShiftService, ITaskService, IPersonService)
  nameWithType.vb: AvailabilityController.AvailabilityController(ILogger(Of AvailabilityController), IAvailabilityService, IShiftService, ITaskService, IPersonService)
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.#ctor*
  name: AvailabilityController
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController__ctor_
  commentId: Overload:RoosterPlanner.Api.Controllers.AvailabilityController.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.AvailabilityController
  nameWithType: AvailabilityController.AvailabilityController
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.GetAvailabilityData(System.Guid)
  name: GetAvailabilityData(Guid)
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_GetAvailabilityData_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.AvailabilityController.GetAvailabilityData(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.GetAvailabilityData(System.Guid)
  nameWithType: AvailabilityController.GetAvailabilityData(Guid)
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.GetAvailabilityData(System.Guid,System.Guid)
  name: GetAvailabilityData(Guid, Guid)
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_GetAvailabilityData_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.AvailabilityController.GetAvailabilityData(System.Guid,System.Guid)
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.GetAvailabilityData(System.Guid, System.Guid)
  nameWithType: AvailabilityController.GetAvailabilityData(Guid, Guid)
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.GetAvailabilityData*
  name: GetAvailabilityData
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_GetAvailabilityData_
  commentId: Overload:RoosterPlanner.Api.Controllers.AvailabilityController.GetAvailabilityData
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.GetAvailabilityData
  nameWithType: AvailabilityController.GetAvailabilityData
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.GetScheduledAvailabilities(System.Guid)
  name: GetScheduledAvailabilities(Guid)
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_GetScheduledAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.AvailabilityController.GetScheduledAvailabilities(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.GetScheduledAvailabilities(System.Guid)
  nameWithType: AvailabilityController.GetScheduledAvailabilities(Guid)
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.GetScheduledAvailabilities(System.Guid,System.DateTime)
  name: GetScheduledAvailabilities(Guid, DateTime)
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_GetScheduledAvailabilities_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Api.Controllers.AvailabilityController.GetScheduledAvailabilities(System.Guid,System.DateTime)
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.GetScheduledAvailabilities(System.Guid, System.DateTime)
  nameWithType: AvailabilityController.GetScheduledAvailabilities(Guid, DateTime)
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.GetScheduledAvailabilities*
  name: GetScheduledAvailabilities
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_GetScheduledAvailabilities_
  commentId: Overload:RoosterPlanner.Api.Controllers.AvailabilityController.GetScheduledAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.GetScheduledAvailabilities
  nameWithType: AvailabilityController.GetScheduledAvailabilities
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.SaveAvailabilityAsync(RoosterPlanner.Api.Models.AvailabilityViewModel)
  name: SaveAvailabilityAsync(AvailabilityViewModel)
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_SaveAvailabilityAsync_RoosterPlanner_Api_Models_AvailabilityViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.AvailabilityController.SaveAvailabilityAsync(RoosterPlanner.Api.Models.AvailabilityViewModel)
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.SaveAvailabilityAsync(RoosterPlanner.Api.Models.AvailabilityViewModel)
  nameWithType: AvailabilityController.SaveAvailabilityAsync(AvailabilityViewModel)
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.SaveAvailabilityAsync*
  name: SaveAvailabilityAsync
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_SaveAvailabilityAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.AvailabilityController.SaveAvailabilityAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.SaveAvailabilityAsync
  nameWithType: AvailabilityController.SaveAvailabilityAsync
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilities(System.Collections.Generic.List{RoosterPlanner.Api.Models.ScheduleViewModel})
  name: UpdateAvailabilities(List<ScheduleViewModel>)
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_UpdateAvailabilities_System_Collections_Generic_List_RoosterPlanner_Api_Models_ScheduleViewModel__
  commentId: M:RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilities(System.Collections.Generic.List{RoosterPlanner.Api.Models.ScheduleViewModel})
  name.vb: UpdateAvailabilities(List(Of ScheduleViewModel))
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilities(System.Collections.Generic.List<RoosterPlanner.Api.Models.ScheduleViewModel>)
  fullName.vb: RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilities(System.Collections.Generic.List(Of RoosterPlanner.Api.Models.ScheduleViewModel))
  nameWithType: AvailabilityController.UpdateAvailabilities(List<ScheduleViewModel>)
  nameWithType.vb: AvailabilityController.UpdateAvailabilities(List(Of ScheduleViewModel))
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilities*
  name: UpdateAvailabilities
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_UpdateAvailabilities_
  commentId: Overload:RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilities
  nameWithType: AvailabilityController.UpdateAvailabilities
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilityAsync(RoosterPlanner.Api.Models.AvailabilityViewModel)
  name: UpdateAvailabilityAsync(AvailabilityViewModel)
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_UpdateAvailabilityAsync_RoosterPlanner_Api_Models_AvailabilityViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilityAsync(RoosterPlanner.Api.Models.AvailabilityViewModel)
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilityAsync(RoosterPlanner.Api.Models.AvailabilityViewModel)
  nameWithType: AvailabilityController.UpdateAvailabilityAsync(AvailabilityViewModel)
- uid: RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilityAsync*
  name: UpdateAvailabilityAsync
  href: api/RoosterPlanner.Api.Controllers.AvailabilityController.html#RoosterPlanner_Api_Controllers_AvailabilityController_UpdateAvailabilityAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilityAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.AvailabilityController.UpdateAvailabilityAsync
  nameWithType: AvailabilityController.UpdateAvailabilityAsync
- uid: RoosterPlanner.Api.Controllers.CertificateController
  name: CertificateController
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html
  commentId: T:RoosterPlanner.Api.Controllers.CertificateController
  fullName: RoosterPlanner.Api.Controllers.CertificateController
  nameWithType: CertificateController
- uid: RoosterPlanner.Api.Controllers.CertificateController.#ctor(Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.AvailabilityController},RoosterPlanner.Service.ICertificateService)
  name: CertificateController(ILogger<AvailabilityController>, ICertificateService)
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController__ctor_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Api_Controllers_AvailabilityController__RoosterPlanner_Service_ICertificateService_
  commentId: M:RoosterPlanner.Api.Controllers.CertificateController.#ctor(Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.AvailabilityController},RoosterPlanner.Service.ICertificateService)
  name.vb: CertificateController(ILogger(Of AvailabilityController), ICertificateService)
  fullName: RoosterPlanner.Api.Controllers.CertificateController.CertificateController(Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Api.Controllers.AvailabilityController>, RoosterPlanner.Service.ICertificateService)
  fullName.vb: RoosterPlanner.Api.Controllers.CertificateController.CertificateController(Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Api.Controllers.AvailabilityController), RoosterPlanner.Service.ICertificateService)
  nameWithType: CertificateController.CertificateController(ILogger<AvailabilityController>, ICertificateService)
  nameWithType.vb: CertificateController.CertificateController(ILogger(Of AvailabilityController), ICertificateService)
- uid: RoosterPlanner.Api.Controllers.CertificateController.#ctor*
  name: CertificateController
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController__ctor_
  commentId: Overload:RoosterPlanner.Api.Controllers.CertificateController.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.CertificateController.CertificateController
  nameWithType: CertificateController.CertificateController
- uid: RoosterPlanner.Api.Controllers.CertificateController.GetAllCertificateTypesAsync
  name: GetAllCertificateTypesAsync()
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_GetAllCertificateTypesAsync
  commentId: M:RoosterPlanner.Api.Controllers.CertificateController.GetAllCertificateTypesAsync
  fullName: RoosterPlanner.Api.Controllers.CertificateController.GetAllCertificateTypesAsync()
  nameWithType: CertificateController.GetAllCertificateTypesAsync()
- uid: RoosterPlanner.Api.Controllers.CertificateController.GetAllCertificateTypesAsync*
  name: GetAllCertificateTypesAsync
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_GetAllCertificateTypesAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.CertificateController.GetAllCertificateTypesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.CertificateController.GetAllCertificateTypesAsync
  nameWithType: CertificateController.GetAllCertificateTypesAsync
- uid: RoosterPlanner.Api.Controllers.CertificateController.GetCertificateAsync(System.Guid)
  name: GetCertificateAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_GetCertificateAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.CertificateController.GetCertificateAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.CertificateController.GetCertificateAsync(System.Guid)
  nameWithType: CertificateController.GetCertificateAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.CertificateController.GetCertificateAsync*
  name: GetCertificateAsync
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_GetCertificateAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.CertificateController.GetCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.CertificateController.GetCertificateAsync
  nameWithType: CertificateController.GetCertificateAsync
- uid: RoosterPlanner.Api.Controllers.CertificateController.GetCertificateTypeAsync(System.Guid)
  name: GetCertificateTypeAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_GetCertificateTypeAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.CertificateController.GetCertificateTypeAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.CertificateController.GetCertificateTypeAsync(System.Guid)
  nameWithType: CertificateController.GetCertificateTypeAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.CertificateController.GetCertificateTypeAsync*
  name: GetCertificateTypeAsync
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_GetCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.CertificateController.GetCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.CertificateController.GetCertificateTypeAsync
  nameWithType: CertificateController.GetCertificateTypeAsync
- uid: RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateAsync(System.Guid)
  name: RemoveCertificateAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_RemoveCertificateAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateAsync(System.Guid)
  nameWithType: CertificateController.RemoveCertificateAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateAsync*
  name: RemoveCertificateAsync
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_RemoveCertificateAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateAsync
  nameWithType: CertificateController.RemoveCertificateAsync
- uid: RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateTypeAsync(System.Guid)
  name: RemoveCertificateTypeAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_RemoveCertificateTypeAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateTypeAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateTypeAsync(System.Guid)
  nameWithType: CertificateController.RemoveCertificateTypeAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateTypeAsync*
  name: RemoveCertificateTypeAsync
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_RemoveCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.CertificateController.RemoveCertificateTypeAsync
  nameWithType: CertificateController.RemoveCertificateTypeAsync
- uid: RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateAsync(RoosterPlanner.Api.Models.CertificateViewModel)
  name: SaveCertificateAsync(CertificateViewModel)
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_SaveCertificateAsync_RoosterPlanner_Api_Models_CertificateViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateAsync(RoosterPlanner.Api.Models.CertificateViewModel)
  fullName: RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateAsync(RoosterPlanner.Api.Models.CertificateViewModel)
  nameWithType: CertificateController.SaveCertificateAsync(CertificateViewModel)
- uid: RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateAsync*
  name: SaveCertificateAsync
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_SaveCertificateAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateAsync
  nameWithType: CertificateController.SaveCertificateAsync
- uid: RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateTypeAsync(RoosterPlanner.Api.Models.CertificateTypeViewModel)
  name: SaveCertificateTypeAsync(CertificateTypeViewModel)
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_SaveCertificateTypeAsync_RoosterPlanner_Api_Models_CertificateTypeViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateTypeAsync(RoosterPlanner.Api.Models.CertificateTypeViewModel)
  fullName: RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateTypeAsync(RoosterPlanner.Api.Models.CertificateTypeViewModel)
  nameWithType: CertificateController.SaveCertificateTypeAsync(CertificateTypeViewModel)
- uid: RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateTypeAsync*
  name: SaveCertificateTypeAsync
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_SaveCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.CertificateController.SaveCertificateTypeAsync
  nameWithType: CertificateController.SaveCertificateTypeAsync
- uid: RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateAsync(RoosterPlanner.Api.Models.CertificateViewModel)
  name: UpdateCertificateAsync(CertificateViewModel)
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_UpdateCertificateAsync_RoosterPlanner_Api_Models_CertificateViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateAsync(RoosterPlanner.Api.Models.CertificateViewModel)
  fullName: RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateAsync(RoosterPlanner.Api.Models.CertificateViewModel)
  nameWithType: CertificateController.UpdateCertificateAsync(CertificateViewModel)
- uid: RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateAsync*
  name: UpdateCertificateAsync
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_UpdateCertificateAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateAsync
  nameWithType: CertificateController.UpdateCertificateAsync
- uid: RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateType(RoosterPlanner.Api.Models.CertificateTypeViewModel)
  name: UpdateCertificateType(CertificateTypeViewModel)
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_UpdateCertificateType_RoosterPlanner_Api_Models_CertificateTypeViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateType(RoosterPlanner.Api.Models.CertificateTypeViewModel)
  fullName: RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateType(RoosterPlanner.Api.Models.CertificateTypeViewModel)
  nameWithType: CertificateController.UpdateCertificateType(CertificateTypeViewModel)
- uid: RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateType*
  name: UpdateCertificateType
  href: api/RoosterPlanner.Api.Controllers.CertificateController.html#RoosterPlanner_Api_Controllers_CertificateController_UpdateCertificateType_
  commentId: Overload:RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateType
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.CertificateController.UpdateCertificateType
  nameWithType: CertificateController.UpdateCertificateType
- uid: RoosterPlanner.Api.Controllers.ParticipationsController
  name: ParticipationsController
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html
  commentId: T:RoosterPlanner.Api.Controllers.ParticipationsController
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController
  nameWithType: ParticipationsController
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.#ctor(Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.ParticipationsController},RoosterPlanner.Service.IParticipationService,RoosterPlanner.Service.IAvailabilityService,RoosterPlanner.Service.IPersonService,Microsoft.Extensions.Options.IOptions{RoosterPlanner.Api.Models.Constants.WebUrlConfig})
  name: ParticipationsController(ILogger<ParticipationsController>, IParticipationService, IAvailabilityService, IPersonService, IOptions<WebUrlConfig>)
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController__ctor_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Api_Controllers_ParticipationsController__RoosterPlanner_Service_IParticipationService_RoosterPlanner_Service_IAvailabilityService_RoosterPlanner_Service_IPersonService_Microsoft_Extensions_Options_IOptions_RoosterPlanner_Api_Models_Constants_WebUrlConfig__
  commentId: M:RoosterPlanner.Api.Controllers.ParticipationsController.#ctor(Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.ParticipationsController},RoosterPlanner.Service.IParticipationService,RoosterPlanner.Service.IAvailabilityService,RoosterPlanner.Service.IPersonService,Microsoft.Extensions.Options.IOptions{RoosterPlanner.Api.Models.Constants.WebUrlConfig})
  name.vb: ParticipationsController(ILogger(Of ParticipationsController), IParticipationService, IAvailabilityService, IPersonService, IOptions(Of WebUrlConfig))
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.ParticipationsController(Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Api.Controllers.ParticipationsController>, RoosterPlanner.Service.IParticipationService, RoosterPlanner.Service.IAvailabilityService, RoosterPlanner.Service.IPersonService, Microsoft.Extensions.Options.IOptions<RoosterPlanner.Api.Models.Constants.WebUrlConfig>)
  fullName.vb: RoosterPlanner.Api.Controllers.ParticipationsController.ParticipationsController(Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Api.Controllers.ParticipationsController), RoosterPlanner.Service.IParticipationService, RoosterPlanner.Service.IAvailabilityService, RoosterPlanner.Service.IPersonService, Microsoft.Extensions.Options.IOptions(Of RoosterPlanner.Api.Models.Constants.WebUrlConfig))
  nameWithType: ParticipationsController.ParticipationsController(ILogger<ParticipationsController>, IParticipationService, IAvailabilityService, IPersonService, IOptions<WebUrlConfig>)
  nameWithType.vb: ParticipationsController.ParticipationsController(ILogger(Of ParticipationsController), IParticipationService, IAvailabilityService, IPersonService, IOptions(Of WebUrlConfig))
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.#ctor*
  name: ParticipationsController
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController__ctor_
  commentId: Overload:RoosterPlanner.Api.Controllers.ParticipationsController.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.ParticipationsController
  nameWithType: ParticipationsController.ParticipationsController
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationAsync(System.Guid,System.Guid)
  name: GetParticipationAsync(Guid, Guid)
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_GetParticipationAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationAsync(System.Guid, System.Guid)
  nameWithType: ParticipationsController.GetParticipationAsync(Guid, Guid)
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationAsync*
  name: GetParticipationAsync
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_GetParticipationAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationAsync
  nameWithType: ParticipationsController.GetParticipationAsync
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationsAsync(System.Guid)
  name: GetParticipationsAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_GetParticipationsAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationsAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationsAsync(System.Guid)
  nameWithType: ParticipationsController.GetParticipationsAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationsAsync*
  name: GetParticipationsAsync
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_GetParticipationsAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.GetParticipationsAsync
  nameWithType: ParticipationsController.GetParticipationsAsync
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.GetUserParticipationAsync(System.Guid)
  name: GetUserParticipationAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_GetUserParticipationAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ParticipationsController.GetUserParticipationAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.GetUserParticipationAsync(System.Guid)
  nameWithType: ParticipationsController.GetUserParticipationAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.GetUserParticipationAsync*
  name: GetUserParticipationAsync
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_GetUserParticipationAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ParticipationsController.GetUserParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.GetUserParticipationAsync
  nameWithType: ParticipationsController.GetUserParticipationAsync
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.RemoveParticipationAsync(System.Guid)
  name: RemoveParticipationAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_RemoveParticipationAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ParticipationsController.RemoveParticipationAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.RemoveParticipationAsync(System.Guid)
  nameWithType: ParticipationsController.RemoveParticipationAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.RemoveParticipationAsync*
  name: RemoveParticipationAsync
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_RemoveParticipationAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ParticipationsController.RemoveParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.RemoveParticipationAsync
  nameWithType: ParticipationsController.RemoveParticipationAsync
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.SaveParticipationAsync(RoosterPlanner.Api.Models.ParticipationViewModel)
  name: SaveParticipationAsync(ParticipationViewModel)
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_SaveParticipationAsync_RoosterPlanner_Api_Models_ParticipationViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.ParticipationsController.SaveParticipationAsync(RoosterPlanner.Api.Models.ParticipationViewModel)
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.SaveParticipationAsync(RoosterPlanner.Api.Models.ParticipationViewModel)
  nameWithType: ParticipationsController.SaveParticipationAsync(ParticipationViewModel)
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.SaveParticipationAsync*
  name: SaveParticipationAsync
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_SaveParticipationAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ParticipationsController.SaveParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.SaveParticipationAsync
  nameWithType: ParticipationsController.SaveParticipationAsync
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.SendEmailAsync(System.Guid,RoosterPlanner.Api.Models.MessageViewModel)
  name: SendEmailAsync(Guid, MessageViewModel)
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_SendEmailAsync_System_Guid_RoosterPlanner_Api_Models_MessageViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.ParticipationsController.SendEmailAsync(System.Guid,RoosterPlanner.Api.Models.MessageViewModel)
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.SendEmailAsync(System.Guid, RoosterPlanner.Api.Models.MessageViewModel)
  nameWithType: ParticipationsController.SendEmailAsync(Guid, MessageViewModel)
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.SendEmailAsync*
  name: SendEmailAsync
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_SendEmailAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ParticipationsController.SendEmailAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.SendEmailAsync
  nameWithType: ParticipationsController.SendEmailAsync
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.SendSchedule(System.Guid)
  name: SendSchedule(Guid)
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_SendSchedule_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ParticipationsController.SendSchedule(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.SendSchedule(System.Guid)
  nameWithType: ParticipationsController.SendSchedule(Guid)
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.SendSchedule*
  name: SendSchedule
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_SendSchedule_
  commentId: Overload:RoosterPlanner.Api.Controllers.ParticipationsController.SendSchedule
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.SendSchedule
  nameWithType: ParticipationsController.SendSchedule
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.UpdateParticipationAsync(RoosterPlanner.Api.Models.ParticipationViewModel)
  name: UpdateParticipationAsync(ParticipationViewModel)
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_UpdateParticipationAsync_RoosterPlanner_Api_Models_ParticipationViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.ParticipationsController.UpdateParticipationAsync(RoosterPlanner.Api.Models.ParticipationViewModel)
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.UpdateParticipationAsync(RoosterPlanner.Api.Models.ParticipationViewModel)
  nameWithType: ParticipationsController.UpdateParticipationAsync(ParticipationViewModel)
- uid: RoosterPlanner.Api.Controllers.ParticipationsController.UpdateParticipationAsync*
  name: UpdateParticipationAsync
  href: api/RoosterPlanner.Api.Controllers.ParticipationsController.html#RoosterPlanner_Api_Controllers_ParticipationsController_UpdateParticipationAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ParticipationsController.UpdateParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ParticipationsController.UpdateParticipationAsync
  nameWithType: ParticipationsController.UpdateParticipationAsync
- uid: RoosterPlanner.Api.Controllers.PersonsController
  name: PersonsController
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html
  commentId: T:RoosterPlanner.Api.Controllers.PersonsController
  fullName: RoosterPlanner.Api.Controllers.PersonsController
  nameWithType: PersonsController
- uid: RoosterPlanner.Api.Controllers.PersonsController.#ctor(RoosterPlanner.Service.IPersonService,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.PersonsController},RoosterPlanner.Service.IProjectService,RoosterPlanner.Service.IParticipationService,System.String)
  name: PersonsController(IPersonService, ILogger<PersonsController>, IProjectService, IParticipationService, String)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController__ctor_RoosterPlanner_Service_IPersonService_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Api_Controllers_PersonsController__RoosterPlanner_Service_IProjectService_RoosterPlanner_Service_IParticipationService_System_String_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.#ctor(RoosterPlanner.Service.IPersonService,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.PersonsController},RoosterPlanner.Service.IProjectService,RoosterPlanner.Service.IParticipationService,System.String)
  name.vb: PersonsController(IPersonService, ILogger(Of PersonsController), IProjectService, IParticipationService, String)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.PersonsController(RoosterPlanner.Service.IPersonService, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Api.Controllers.PersonsController>, RoosterPlanner.Service.IProjectService, RoosterPlanner.Service.IParticipationService, System.String)
  fullName.vb: RoosterPlanner.Api.Controllers.PersonsController.PersonsController(RoosterPlanner.Service.IPersonService, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Api.Controllers.PersonsController), RoosterPlanner.Service.IProjectService, RoosterPlanner.Service.IParticipationService, System.String)
  nameWithType: PersonsController.PersonsController(IPersonService, ILogger<PersonsController>, IProjectService, IParticipationService, String)
  nameWithType.vb: PersonsController.PersonsController(IPersonService, ILogger(Of PersonsController), IProjectService, IParticipationService, String)
- uid: RoosterPlanner.Api.Controllers.PersonsController.#ctor*
  name: PersonsController
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController__ctor_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.PersonsController
  nameWithType: PersonsController.PersonsController
- uid: RoosterPlanner.Api.Controllers.PersonsController.GetParticipants(System.Guid)
  name: GetParticipants(Guid)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_GetParticipants_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.GetParticipants(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.GetParticipants(System.Guid)
  nameWithType: PersonsController.GetParticipants(Guid)
- uid: RoosterPlanner.Api.Controllers.PersonsController.GetParticipants*
  name: GetParticipants
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_GetParticipants_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.GetParticipants
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.GetParticipants
  nameWithType: PersonsController.GetParticipants
- uid: RoosterPlanner.Api.Controllers.PersonsController.GetPersonAsync(System.Guid)
  name: GetPersonAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_GetPersonAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.GetPersonAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.GetPersonAsync(System.Guid)
  nameWithType: PersonsController.GetPersonAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.PersonsController.GetPersonAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)
  name: GetPersonAsync(String, String, String, String, String, Int32, Int32)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_GetPersonAsync_System_String_System_String_System_String_System_String_System_String_System_Int32_System_Int32_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.GetPersonAsync(System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.GetPersonAsync(System.String, System.String, System.String, System.String, System.String, System.Int32, System.Int32)
  nameWithType: PersonsController.GetPersonAsync(String, String, String, String, String, Int32, Int32)
- uid: RoosterPlanner.Api.Controllers.PersonsController.GetPersonAsync*
  name: GetPersonAsync
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_GetPersonAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.GetPersonAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.GetPersonAsync
  nameWithType: PersonsController.GetPersonAsync
- uid: RoosterPlanner.Api.Controllers.PersonsController.GetProjectManagersAsync(System.Guid)
  name: GetProjectManagersAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_GetProjectManagersAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.GetProjectManagersAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.GetProjectManagersAsync(System.Guid)
  nameWithType: PersonsController.GetProjectManagersAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.PersonsController.GetProjectManagersAsync*
  name: GetProjectManagersAsync
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_GetProjectManagersAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.GetProjectManagersAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.GetProjectManagersAsync
  nameWithType: PersonsController.GetProjectManagersAsync
- uid: RoosterPlanner.Api.Controllers.PersonsController.GetProjectsManagedByAsync(System.Guid)
  name: GetProjectsManagedByAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_GetProjectsManagedByAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.GetProjectsManagedByAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.GetProjectsManagedByAsync(System.Guid)
  nameWithType: PersonsController.GetProjectsManagedByAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.PersonsController.GetProjectsManagedByAsync*
  name: GetProjectsManagedByAsync
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_GetProjectsManagedByAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.GetProjectsManagedByAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.GetProjectsManagedByAsync
  nameWithType: PersonsController.GetProjectsManagedByAsync
- uid: RoosterPlanner.Api.Controllers.PersonsController.MakeManagerAsync(System.Guid,System.Guid)
  name: MakeManagerAsync(Guid, Guid)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_MakeManagerAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.MakeManagerAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.MakeManagerAsync(System.Guid, System.Guid)
  nameWithType: PersonsController.MakeManagerAsync(Guid, Guid)
- uid: RoosterPlanner.Api.Controllers.PersonsController.MakeManagerAsync*
  name: MakeManagerAsync
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_MakeManagerAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.MakeManagerAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.MakeManagerAsync
  nameWithType: PersonsController.MakeManagerAsync
- uid: RoosterPlanner.Api.Controllers.PersonsController.ModAdminAsync(System.Guid,System.Int32)
  name: ModAdminAsync(Guid, Int32)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_ModAdminAsync_System_Guid_System_Int32_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.ModAdminAsync(System.Guid,System.Int32)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.ModAdminAsync(System.Guid, System.Int32)
  nameWithType: PersonsController.ModAdminAsync(Guid, Int32)
- uid: RoosterPlanner.Api.Controllers.PersonsController.ModAdminAsync*
  name: ModAdminAsync
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_ModAdminAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.ModAdminAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.ModAdminAsync
  nameWithType: PersonsController.ModAdminAsync
- uid: RoosterPlanner.Api.Controllers.PersonsController.RemoveManagerAsync(System.Guid,System.Guid)
  name: RemoveManagerAsync(Guid, Guid)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_RemoveManagerAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.RemoveManagerAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.RemoveManagerAsync(System.Guid, System.Guid)
  nameWithType: PersonsController.RemoveManagerAsync(Guid, Guid)
- uid: RoosterPlanner.Api.Controllers.PersonsController.RemoveManagerAsync*
  name: RemoveManagerAsync
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_RemoveManagerAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.RemoveManagerAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.RemoveManagerAsync
  nameWithType: PersonsController.RemoveManagerAsync
- uid: RoosterPlanner.Api.Controllers.PersonsController.UpdatePerson(RoosterPlanner.Api.Models.PersonViewModel)
  name: UpdatePerson(PersonViewModel)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_UpdatePerson_RoosterPlanner_Api_Models_PersonViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.UpdatePerson(RoosterPlanner.Api.Models.PersonViewModel)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.UpdatePerson(RoosterPlanner.Api.Models.PersonViewModel)
  nameWithType: PersonsController.UpdatePerson(PersonViewModel)
- uid: RoosterPlanner.Api.Controllers.PersonsController.UpdatePerson*
  name: UpdatePerson
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_UpdatePerson_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.UpdatePerson
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.UpdatePerson
  nameWithType: PersonsController.UpdatePerson
- uid: RoosterPlanner.Api.Controllers.PersonsController.UpdateUserAsync(RoosterPlanner.Api.Models.PersonViewModel)
  name: UpdateUserAsync(PersonViewModel)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_UpdateUserAsync_RoosterPlanner_Api_Models_PersonViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.UpdateUserAsync(RoosterPlanner.Api.Models.PersonViewModel)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.UpdateUserAsync(RoosterPlanner.Api.Models.PersonViewModel)
  nameWithType: PersonsController.UpdateUserAsync(PersonViewModel)
- uid: RoosterPlanner.Api.Controllers.PersonsController.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_UpdateUserAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.UpdateUserAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.UpdateUserAsync
  nameWithType: PersonsController.UpdateUserAsync
- uid: RoosterPlanner.Api.Controllers.PersonsController.UserHasRole(RoosterPlanner.Models.Models.Enums.UserRole,System.Security.Claims.ClaimsIdentity)
  name: UserHasRole(UserRole, ClaimsIdentity)
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_UserHasRole_RoosterPlanner_Models_Models_Enums_UserRole_System_Security_Claims_ClaimsIdentity_
  commentId: M:RoosterPlanner.Api.Controllers.PersonsController.UserHasRole(RoosterPlanner.Models.Models.Enums.UserRole,System.Security.Claims.ClaimsIdentity)
  fullName: RoosterPlanner.Api.Controllers.PersonsController.UserHasRole(RoosterPlanner.Models.Models.Enums.UserRole, System.Security.Claims.ClaimsIdentity)
  nameWithType: PersonsController.UserHasRole(UserRole, ClaimsIdentity)
- uid: RoosterPlanner.Api.Controllers.PersonsController.UserHasRole*
  name: UserHasRole
  href: api/RoosterPlanner.Api.Controllers.PersonsController.html#RoosterPlanner_Api_Controllers_PersonsController_UserHasRole_
  commentId: Overload:RoosterPlanner.Api.Controllers.PersonsController.UserHasRole
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.PersonsController.UserHasRole
  nameWithType: PersonsController.UserHasRole
- uid: RoosterPlanner.Api.Controllers.ProjectsController
  name: ProjectsController
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html
  commentId: T:RoosterPlanner.Api.Controllers.ProjectsController
  fullName: RoosterPlanner.Api.Controllers.ProjectsController
  nameWithType: ProjectsController
- uid: RoosterPlanner.Api.Controllers.ProjectsController.#ctor(RoosterPlanner.Service.IProjectService,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.ProjectsController})
  name: ProjectsController(IProjectService, ILogger<ProjectsController>)
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html#RoosterPlanner_Api_Controllers_ProjectsController__ctor_RoosterPlanner_Service_IProjectService_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Api_Controllers_ProjectsController__
  commentId: M:RoosterPlanner.Api.Controllers.ProjectsController.#ctor(RoosterPlanner.Service.IProjectService,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.ProjectsController})
  name.vb: ProjectsController(IProjectService, ILogger(Of ProjectsController))
  fullName: RoosterPlanner.Api.Controllers.ProjectsController.ProjectsController(RoosterPlanner.Service.IProjectService, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Api.Controllers.ProjectsController>)
  fullName.vb: RoosterPlanner.Api.Controllers.ProjectsController.ProjectsController(RoosterPlanner.Service.IProjectService, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Api.Controllers.ProjectsController))
  nameWithType: ProjectsController.ProjectsController(IProjectService, ILogger<ProjectsController>)
  nameWithType.vb: ProjectsController.ProjectsController(IProjectService, ILogger(Of ProjectsController))
- uid: RoosterPlanner.Api.Controllers.ProjectsController.#ctor*
  name: ProjectsController
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html#RoosterPlanner_Api_Controllers_ProjectsController__ctor_
  commentId: Overload:RoosterPlanner.Api.Controllers.ProjectsController.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ProjectsController.ProjectsController
  nameWithType: ProjectsController.ProjectsController
- uid: RoosterPlanner.Api.Controllers.ProjectsController.GetProjectAsync(System.Guid)
  name: GetProjectAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html#RoosterPlanner_Api_Controllers_ProjectsController_GetProjectAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ProjectsController.GetProjectAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ProjectsController.GetProjectAsync(System.Guid)
  nameWithType: ProjectsController.GetProjectAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.ProjectsController.GetProjectAsync*
  name: GetProjectAsync
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html#RoosterPlanner_Api_Controllers_ProjectsController_GetProjectAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ProjectsController.GetProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ProjectsController.GetProjectAsync
  nameWithType: ProjectsController.GetProjectAsync
- uid: RoosterPlanner.Api.Controllers.ProjectsController.SaveProjectAsync(RoosterPlanner.Api.Models.ProjectDetailsViewModel)
  name: SaveProjectAsync(ProjectDetailsViewModel)
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html#RoosterPlanner_Api_Controllers_ProjectsController_SaveProjectAsync_RoosterPlanner_Api_Models_ProjectDetailsViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.ProjectsController.SaveProjectAsync(RoosterPlanner.Api.Models.ProjectDetailsViewModel)
  fullName: RoosterPlanner.Api.Controllers.ProjectsController.SaveProjectAsync(RoosterPlanner.Api.Models.ProjectDetailsViewModel)
  nameWithType: ProjectsController.SaveProjectAsync(ProjectDetailsViewModel)
- uid: RoosterPlanner.Api.Controllers.ProjectsController.SaveProjectAsync*
  name: SaveProjectAsync
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html#RoosterPlanner_Api_Controllers_ProjectsController_SaveProjectAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ProjectsController.SaveProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ProjectsController.SaveProjectAsync
  nameWithType: ProjectsController.SaveProjectAsync
- uid: RoosterPlanner.Api.Controllers.ProjectsController.SearchProjectsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Int32,System.Int32)
  name: SearchProjectsAsync(String, String, Nullable<DateTime>, Nullable<DateTime>, Nullable<Boolean>, Int32, Int32)
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html#RoosterPlanner_Api_Controllers_ProjectsController_SearchProjectsAsync_System_String_System_String_System_Nullable_System_DateTime__System_Nullable_System_DateTime__System_Nullable_System_Boolean__System_Int32_System_Int32_
  commentId: M:RoosterPlanner.Api.Controllers.ProjectsController.SearchProjectsAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Boolean},System.Int32,System.Int32)
  name.vb: SearchProjectsAsync(String, String, Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of Boolean), Int32, Int32)
  fullName: RoosterPlanner.Api.Controllers.ProjectsController.SearchProjectsAsync(System.String, System.String, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Nullable<System.Boolean>, System.Int32, System.Int32)
  fullName.vb: RoosterPlanner.Api.Controllers.ProjectsController.SearchProjectsAsync(System.String, System.String, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Nullable(Of System.Boolean), System.Int32, System.Int32)
  nameWithType: ProjectsController.SearchProjectsAsync(String, String, Nullable<DateTime>, Nullable<DateTime>, Nullable<Boolean>, Int32, Int32)
  nameWithType.vb: ProjectsController.SearchProjectsAsync(String, String, Nullable(Of DateTime), Nullable(Of DateTime), Nullable(Of Boolean), Int32, Int32)
- uid: RoosterPlanner.Api.Controllers.ProjectsController.SearchProjectsAsync*
  name: SearchProjectsAsync
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html#RoosterPlanner_Api_Controllers_ProjectsController_SearchProjectsAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ProjectsController.SearchProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ProjectsController.SearchProjectsAsync
  nameWithType: ProjectsController.SearchProjectsAsync
- uid: RoosterPlanner.Api.Controllers.ProjectsController.UpdateProjectAsync(RoosterPlanner.Api.Models.ProjectDetailsViewModel)
  name: UpdateProjectAsync(ProjectDetailsViewModel)
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html#RoosterPlanner_Api_Controllers_ProjectsController_UpdateProjectAsync_RoosterPlanner_Api_Models_ProjectDetailsViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.ProjectsController.UpdateProjectAsync(RoosterPlanner.Api.Models.ProjectDetailsViewModel)
  fullName: RoosterPlanner.Api.Controllers.ProjectsController.UpdateProjectAsync(RoosterPlanner.Api.Models.ProjectDetailsViewModel)
  nameWithType: ProjectsController.UpdateProjectAsync(ProjectDetailsViewModel)
- uid: RoosterPlanner.Api.Controllers.ProjectsController.UpdateProjectAsync*
  name: UpdateProjectAsync
  href: api/RoosterPlanner.Api.Controllers.ProjectsController.html#RoosterPlanner_Api_Controllers_ProjectsController_UpdateProjectAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ProjectsController.UpdateProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ProjectsController.UpdateProjectAsync
  nameWithType: ProjectsController.UpdateProjectAsync
- uid: RoosterPlanner.Api.Controllers.RequirementsController
  name: RequirementsController
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html
  commentId: T:RoosterPlanner.Api.Controllers.RequirementsController
  fullName: RoosterPlanner.Api.Controllers.RequirementsController
  nameWithType: RequirementsController
- uid: RoosterPlanner.Api.Controllers.RequirementsController.#ctor(Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.ProjectsController},RoosterPlanner.Service.IRequirementService)
  name: RequirementsController(ILogger<ProjectsController>, IRequirementService)
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html#RoosterPlanner_Api_Controllers_RequirementsController__ctor_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Api_Controllers_ProjectsController__RoosterPlanner_Service_IRequirementService_
  commentId: M:RoosterPlanner.Api.Controllers.RequirementsController.#ctor(Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.ProjectsController},RoosterPlanner.Service.IRequirementService)
  name.vb: RequirementsController(ILogger(Of ProjectsController), IRequirementService)
  fullName: RoosterPlanner.Api.Controllers.RequirementsController.RequirementsController(Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Api.Controllers.ProjectsController>, RoosterPlanner.Service.IRequirementService)
  fullName.vb: RoosterPlanner.Api.Controllers.RequirementsController.RequirementsController(Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Api.Controllers.ProjectsController), RoosterPlanner.Service.IRequirementService)
  nameWithType: RequirementsController.RequirementsController(ILogger<ProjectsController>, IRequirementService)
  nameWithType.vb: RequirementsController.RequirementsController(ILogger(Of ProjectsController), IRequirementService)
- uid: RoosterPlanner.Api.Controllers.RequirementsController.#ctor*
  name: RequirementsController
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html#RoosterPlanner_Api_Controllers_RequirementsController__ctor_
  commentId: Overload:RoosterPlanner.Api.Controllers.RequirementsController.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.RequirementsController.RequirementsController
  nameWithType: RequirementsController.RequirementsController
- uid: RoosterPlanner.Api.Controllers.RequirementsController.DeleteRequirementAsync(System.Guid)
  name: DeleteRequirementAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html#RoosterPlanner_Api_Controllers_RequirementsController_DeleteRequirementAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.RequirementsController.DeleteRequirementAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.RequirementsController.DeleteRequirementAsync(System.Guid)
  nameWithType: RequirementsController.DeleteRequirementAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.RequirementsController.DeleteRequirementAsync*
  name: DeleteRequirementAsync
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html#RoosterPlanner_Api_Controllers_RequirementsController_DeleteRequirementAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.RequirementsController.DeleteRequirementAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.RequirementsController.DeleteRequirementAsync
  nameWithType: RequirementsController.DeleteRequirementAsync
- uid: RoosterPlanner.Api.Controllers.RequirementsController.GetRequirementAsync(System.Guid)
  name: GetRequirementAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html#RoosterPlanner_Api_Controllers_RequirementsController_GetRequirementAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.RequirementsController.GetRequirementAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.RequirementsController.GetRequirementAsync(System.Guid)
  nameWithType: RequirementsController.GetRequirementAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.RequirementsController.GetRequirementAsync*
  name: GetRequirementAsync
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html#RoosterPlanner_Api_Controllers_RequirementsController_GetRequirementAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.RequirementsController.GetRequirementAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.RequirementsController.GetRequirementAsync
  nameWithType: RequirementsController.GetRequirementAsync
- uid: RoosterPlanner.Api.Controllers.RequirementsController.SaveRequirementAsync(RoosterPlanner.Api.Models.RequirementViewModel)
  name: SaveRequirementAsync(RequirementViewModel)
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html#RoosterPlanner_Api_Controllers_RequirementsController_SaveRequirementAsync_RoosterPlanner_Api_Models_RequirementViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.RequirementsController.SaveRequirementAsync(RoosterPlanner.Api.Models.RequirementViewModel)
  fullName: RoosterPlanner.Api.Controllers.RequirementsController.SaveRequirementAsync(RoosterPlanner.Api.Models.RequirementViewModel)
  nameWithType: RequirementsController.SaveRequirementAsync(RequirementViewModel)
- uid: RoosterPlanner.Api.Controllers.RequirementsController.SaveRequirementAsync*
  name: SaveRequirementAsync
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html#RoosterPlanner_Api_Controllers_RequirementsController_SaveRequirementAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.RequirementsController.SaveRequirementAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.RequirementsController.SaveRequirementAsync
  nameWithType: RequirementsController.SaveRequirementAsync
- uid: RoosterPlanner.Api.Controllers.RequirementsController.UpdateRequirementAsync(RoosterPlanner.Api.Models.RequirementViewModel)
  name: UpdateRequirementAsync(RequirementViewModel)
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html#RoosterPlanner_Api_Controllers_RequirementsController_UpdateRequirementAsync_RoosterPlanner_Api_Models_RequirementViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.RequirementsController.UpdateRequirementAsync(RoosterPlanner.Api.Models.RequirementViewModel)
  fullName: RoosterPlanner.Api.Controllers.RequirementsController.UpdateRequirementAsync(RoosterPlanner.Api.Models.RequirementViewModel)
  nameWithType: RequirementsController.UpdateRequirementAsync(RequirementViewModel)
- uid: RoosterPlanner.Api.Controllers.RequirementsController.UpdateRequirementAsync*
  name: UpdateRequirementAsync
  href: api/RoosterPlanner.Api.Controllers.RequirementsController.html#RoosterPlanner_Api_Controllers_RequirementsController_UpdateRequirementAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.RequirementsController.UpdateRequirementAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.RequirementsController.UpdateRequirementAsync
  nameWithType: RequirementsController.UpdateRequirementAsync
- uid: RoosterPlanner.Api.Controllers.ShiftController
  name: ShiftController
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html
  commentId: T:RoosterPlanner.Api.Controllers.ShiftController
  fullName: RoosterPlanner.Api.Controllers.ShiftController
  nameWithType: ShiftController
- uid: RoosterPlanner.Api.Controllers.ShiftController.#ctor(Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.ShiftController},RoosterPlanner.Service.IShiftService,RoosterPlanner.Service.IProjectService,RoosterPlanner.Service.ITaskService,RoosterPlanner.Service.IPersonService,RoosterPlanner.Service.IAvailabilityService,System.String)
  name: ShiftController(ILogger<ShiftController>, IShiftService, IProjectService, ITaskService, IPersonService, IAvailabilityService, String)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController__ctor_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Api_Controllers_ShiftController__RoosterPlanner_Service_IShiftService_RoosterPlanner_Service_IProjectService_RoosterPlanner_Service_ITaskService_RoosterPlanner_Service_IPersonService_RoosterPlanner_Service_IAvailabilityService_System_String_
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.#ctor(Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.ShiftController},RoosterPlanner.Service.IShiftService,RoosterPlanner.Service.IProjectService,RoosterPlanner.Service.ITaskService,RoosterPlanner.Service.IPersonService,RoosterPlanner.Service.IAvailabilityService,System.String)
  name.vb: ShiftController(ILogger(Of ShiftController), IShiftService, IProjectService, ITaskService, IPersonService, IAvailabilityService, String)
  fullName: RoosterPlanner.Api.Controllers.ShiftController.ShiftController(Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Api.Controllers.ShiftController>, RoosterPlanner.Service.IShiftService, RoosterPlanner.Service.IProjectService, RoosterPlanner.Service.ITaskService, RoosterPlanner.Service.IPersonService, RoosterPlanner.Service.IAvailabilityService, System.String)
  fullName.vb: RoosterPlanner.Api.Controllers.ShiftController.ShiftController(Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Api.Controllers.ShiftController), RoosterPlanner.Service.IShiftService, RoosterPlanner.Service.IProjectService, RoosterPlanner.Service.ITaskService, RoosterPlanner.Service.IPersonService, RoosterPlanner.Service.IAvailabilityService, System.String)
  nameWithType: ShiftController.ShiftController(ILogger<ShiftController>, IShiftService, IProjectService, ITaskService, IPersonService, IAvailabilityService, String)
  nameWithType.vb: ShiftController.ShiftController(ILogger(Of ShiftController), IShiftService, IProjectService, ITaskService, IPersonService, IAvailabilityService, String)
- uid: RoosterPlanner.Api.Controllers.ShiftController.#ctor*
  name: ShiftController
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController__ctor_
  commentId: Overload:RoosterPlanner.Api.Controllers.ShiftController.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ShiftController.ShiftController
  nameWithType: ShiftController.ShiftController
- uid: RoosterPlanner.Api.Controllers.ShiftController.ExportDataAsync(System.Guid)
  name: ExportDataAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_ExportDataAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.ExportDataAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ShiftController.ExportDataAsync(System.Guid)
  nameWithType: ShiftController.ExportDataAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.ShiftController.ExportDataAsync*
  name: ExportDataAsync
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_ExportDataAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ShiftController.ExportDataAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ShiftController.ExportDataAsync
  nameWithType: ShiftController.ExportDataAsync
- uid: RoosterPlanner.Api.Controllers.ShiftController.GetScheduleAsync(System.Guid)
  name: GetScheduleAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_GetScheduleAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.GetScheduleAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ShiftController.GetScheduleAsync(System.Guid)
  nameWithType: ShiftController.GetScheduleAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.ShiftController.GetScheduleAsync*
  name: GetScheduleAsync
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_GetScheduleAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ShiftController.GetScheduleAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ShiftController.GetScheduleAsync
  nameWithType: ShiftController.GetScheduleAsync
- uid: RoosterPlanner.Api.Controllers.ShiftController.GetShiftAsync(System.Guid)
  name: GetShiftAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_GetShiftAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.GetShiftAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ShiftController.GetShiftAsync(System.Guid)
  nameWithType: ShiftController.GetShiftAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.ShiftController.GetShiftAsync*
  name: GetShiftAsync
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_GetShiftAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ShiftController.GetShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ShiftController.GetShiftAsync
  nameWithType: ShiftController.GetShiftAsync
- uid: RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  name: GetShiftsAsync(ShiftFilter)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_GetShiftsAsync_RoosterPlanner_Models_FilterModels_ShiftFilter_
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  fullName: RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  nameWithType: ShiftController.GetShiftsAsync(ShiftFilter)
- uid: RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync(System.Guid,System.DateTime)
  name: GetShiftsAsync(Guid, DateTime)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_GetShiftsAsync_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync(System.Guid,System.DateTime)
  fullName: RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync(System.Guid, System.DateTime)
  nameWithType: ShiftController.GetShiftsAsync(Guid, DateTime)
- uid: RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync(System.Guid,System.Guid,System.DateTime)
  name: GetShiftsAsync(Guid, Guid, DateTime)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_GetShiftsAsync_System_Guid_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync(System.Guid,System.Guid,System.DateTime)
  fullName: RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync(System.Guid, System.Guid, System.DateTime)
  nameWithType: ShiftController.GetShiftsAsync(Guid, Guid, DateTime)
- uid: RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync*
  name: GetShiftsAsync
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_GetShiftsAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ShiftController.GetShiftsAsync
  nameWithType: ShiftController.GetShiftsAsync
- uid: RoosterPlanner.Api.Controllers.ShiftController.GetUniqueDataAsync(System.Guid)
  name: GetUniqueDataAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_GetUniqueDataAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.GetUniqueDataAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ShiftController.GetUniqueDataAsync(System.Guid)
  nameWithType: ShiftController.GetUniqueDataAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.ShiftController.GetUniqueDataAsync*
  name: GetUniqueDataAsync
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_GetUniqueDataAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ShiftController.GetUniqueDataAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ShiftController.GetUniqueDataAsync
  nameWithType: ShiftController.GetUniqueDataAsync
- uid: RoosterPlanner.Api.Controllers.ShiftController.RemoveShiftAsync(System.Guid)
  name: RemoveShiftAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_RemoveShiftAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.RemoveShiftAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.ShiftController.RemoveShiftAsync(System.Guid)
  nameWithType: ShiftController.RemoveShiftAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.ShiftController.RemoveShiftAsync*
  name: RemoveShiftAsync
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_RemoveShiftAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ShiftController.RemoveShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ShiftController.RemoveShiftAsync
  nameWithType: ShiftController.RemoveShiftAsync
- uid: RoosterPlanner.Api.Controllers.ShiftController.SaveShiftsAsync(System.Collections.Generic.List{RoosterPlanner.Api.Models.ShiftViewModel})
  name: SaveShiftsAsync(List<ShiftViewModel>)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_SaveShiftsAsync_System_Collections_Generic_List_RoosterPlanner_Api_Models_ShiftViewModel__
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.SaveShiftsAsync(System.Collections.Generic.List{RoosterPlanner.Api.Models.ShiftViewModel})
  name.vb: SaveShiftsAsync(List(Of ShiftViewModel))
  fullName: RoosterPlanner.Api.Controllers.ShiftController.SaveShiftsAsync(System.Collections.Generic.List<RoosterPlanner.Api.Models.ShiftViewModel>)
  fullName.vb: RoosterPlanner.Api.Controllers.ShiftController.SaveShiftsAsync(System.Collections.Generic.List(Of RoosterPlanner.Api.Models.ShiftViewModel))
  nameWithType: ShiftController.SaveShiftsAsync(List<ShiftViewModel>)
  nameWithType.vb: ShiftController.SaveShiftsAsync(List(Of ShiftViewModel))
- uid: RoosterPlanner.Api.Controllers.ShiftController.SaveShiftsAsync*
  name: SaveShiftsAsync
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_SaveShiftsAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ShiftController.SaveShiftsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ShiftController.SaveShiftsAsync
  nameWithType: ShiftController.SaveShiftsAsync
- uid: RoosterPlanner.Api.Controllers.ShiftController.UpdateShiftAsync(RoosterPlanner.Api.Models.ShiftViewModel)
  name: UpdateShiftAsync(ShiftViewModel)
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_UpdateShiftAsync_RoosterPlanner_Api_Models_ShiftViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.ShiftController.UpdateShiftAsync(RoosterPlanner.Api.Models.ShiftViewModel)
  fullName: RoosterPlanner.Api.Controllers.ShiftController.UpdateShiftAsync(RoosterPlanner.Api.Models.ShiftViewModel)
  nameWithType: ShiftController.UpdateShiftAsync(ShiftViewModel)
- uid: RoosterPlanner.Api.Controllers.ShiftController.UpdateShiftAsync*
  name: UpdateShiftAsync
  href: api/RoosterPlanner.Api.Controllers.ShiftController.html#RoosterPlanner_Api_Controllers_ShiftController_UpdateShiftAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.ShiftController.UpdateShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.ShiftController.UpdateShiftAsync
  nameWithType: ShiftController.UpdateShiftAsync
- uid: RoosterPlanner.Api.Controllers.TasksController
  name: TasksController
  href: api/RoosterPlanner.Api.Controllers.TasksController.html
  commentId: T:RoosterPlanner.Api.Controllers.TasksController
  fullName: RoosterPlanner.Api.Controllers.TasksController
  nameWithType: TasksController
- uid: RoosterPlanner.Api.Controllers.TasksController.#ctor(RoosterPlanner.Service.ITaskService,RoosterPlanner.Service.IProjectService,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.TasksController},RoosterPlanner.Service.IDocumentService)
  name: TasksController(ITaskService, IProjectService, ILogger<TasksController>, IDocumentService)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController__ctor_RoosterPlanner_Service_ITaskService_RoosterPlanner_Service_IProjectService_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Api_Controllers_TasksController__RoosterPlanner_Service_IDocumentService_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.#ctor(RoosterPlanner.Service.ITaskService,RoosterPlanner.Service.IProjectService,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.TasksController},RoosterPlanner.Service.IDocumentService)
  name.vb: TasksController(ITaskService, IProjectService, ILogger(Of TasksController), IDocumentService)
  fullName: RoosterPlanner.Api.Controllers.TasksController.TasksController(RoosterPlanner.Service.ITaskService, RoosterPlanner.Service.IProjectService, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Api.Controllers.TasksController>, RoosterPlanner.Service.IDocumentService)
  fullName.vb: RoosterPlanner.Api.Controllers.TasksController.TasksController(RoosterPlanner.Service.ITaskService, RoosterPlanner.Service.IProjectService, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Api.Controllers.TasksController), RoosterPlanner.Service.IDocumentService)
  nameWithType: TasksController.TasksController(ITaskService, IProjectService, ILogger<TasksController>, IDocumentService)
  nameWithType.vb: TasksController.TasksController(ITaskService, IProjectService, ILogger(Of TasksController), IDocumentService)
- uid: RoosterPlanner.Api.Controllers.TasksController.#ctor*
  name: TasksController
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController__ctor_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.TasksController
  nameWithType: TasksController.TasksController
- uid: RoosterPlanner.Api.Controllers.TasksController.AddTaskToProjectAsync(RoosterPlanner.Api.Models.ProjectTaskViewModel)
  name: AddTaskToProjectAsync(ProjectTaskViewModel)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_AddTaskToProjectAsync_RoosterPlanner_Api_Models_ProjectTaskViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.AddTaskToProjectAsync(RoosterPlanner.Api.Models.ProjectTaskViewModel)
  fullName: RoosterPlanner.Api.Controllers.TasksController.AddTaskToProjectAsync(RoosterPlanner.Api.Models.ProjectTaskViewModel)
  nameWithType: TasksController.AddTaskToProjectAsync(ProjectTaskViewModel)
- uid: RoosterPlanner.Api.Controllers.TasksController.AddTaskToProjectAsync*
  name: AddTaskToProjectAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_AddTaskToProjectAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.AddTaskToProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.AddTaskToProjectAsync
  nameWithType: TasksController.AddTaskToProjectAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.GetAllCategoriesAsync
  name: GetAllCategoriesAsync()
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_GetAllCategoriesAsync
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.GetAllCategoriesAsync
  fullName: RoosterPlanner.Api.Controllers.TasksController.GetAllCategoriesAsync()
  nameWithType: TasksController.GetAllCategoriesAsync()
- uid: RoosterPlanner.Api.Controllers.TasksController.GetAllCategoriesAsync*
  name: GetAllCategoriesAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_GetAllCategoriesAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.GetAllCategoriesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.GetAllCategoriesAsync
  nameWithType: TasksController.GetAllCategoriesAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.GetAllProjectTasksAsync(System.Guid)
  name: GetAllProjectTasksAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_GetAllProjectTasksAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.GetAllProjectTasksAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.TasksController.GetAllProjectTasksAsync(System.Guid)
  nameWithType: TasksController.GetAllProjectTasksAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.TasksController.GetAllProjectTasksAsync*
  name: GetAllProjectTasksAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_GetAllProjectTasksAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.GetAllProjectTasksAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.GetAllProjectTasksAsync
  nameWithType: TasksController.GetAllProjectTasksAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.GetCategoryAsync(System.Guid)
  name: GetCategoryAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_GetCategoryAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.GetCategoryAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.TasksController.GetCategoryAsync(System.Guid)
  nameWithType: TasksController.GetCategoryAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.TasksController.GetCategoryAsync*
  name: GetCategoryAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_GetCategoryAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.GetCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.GetCategoryAsync
  nameWithType: TasksController.GetCategoryAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.GetProjectTaskAsync(System.Guid)
  name: GetProjectTaskAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_GetProjectTaskAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.GetProjectTaskAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.TasksController.GetProjectTaskAsync(System.Guid)
  nameWithType: TasksController.GetProjectTaskAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.TasksController.GetProjectTaskAsync*
  name: GetProjectTaskAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_GetProjectTaskAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.GetProjectTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.GetProjectTaskAsync
  nameWithType: TasksController.GetProjectTaskAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.GetTaskAsync(System.Guid)
  name: GetTaskAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_GetTaskAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.GetTaskAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.TasksController.GetTaskAsync(System.Guid)
  nameWithType: TasksController.GetTaskAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.TasksController.GetTaskAsync*
  name: GetTaskAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_GetTaskAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.GetTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.GetTaskAsync
  nameWithType: TasksController.GetTaskAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.RemoveCategoryAsync(System.Guid)
  name: RemoveCategoryAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_RemoveCategoryAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.RemoveCategoryAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.TasksController.RemoveCategoryAsync(System.Guid)
  nameWithType: TasksController.RemoveCategoryAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.TasksController.RemoveCategoryAsync*
  name: RemoveCategoryAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_RemoveCategoryAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.RemoveCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.RemoveCategoryAsync
  nameWithType: TasksController.RemoveCategoryAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.RemoveTaskAsync(System.Guid)
  name: RemoveTaskAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_RemoveTaskAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.RemoveTaskAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.TasksController.RemoveTaskAsync(System.Guid)
  nameWithType: TasksController.RemoveTaskAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.TasksController.RemoveTaskAsync*
  name: RemoveTaskAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_RemoveTaskAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.RemoveTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.RemoveTaskAsync
  nameWithType: TasksController.RemoveTaskAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.RemoveTaskFromProjectAsync(System.Guid,System.Guid)
  name: RemoveTaskFromProjectAsync(Guid, Guid)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_RemoveTaskFromProjectAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.RemoveTaskFromProjectAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Api.Controllers.TasksController.RemoveTaskFromProjectAsync(System.Guid, System.Guid)
  nameWithType: TasksController.RemoveTaskFromProjectAsync(Guid, Guid)
- uid: RoosterPlanner.Api.Controllers.TasksController.RemoveTaskFromProjectAsync*
  name: RemoveTaskFromProjectAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_RemoveTaskFromProjectAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.RemoveTaskFromProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.RemoveTaskFromProjectAsync
  nameWithType: TasksController.RemoveTaskFromProjectAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.SaveCategoryAsync(RoosterPlanner.Api.Models.CategoryViewModel)
  name: SaveCategoryAsync(CategoryViewModel)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_SaveCategoryAsync_RoosterPlanner_Api_Models_CategoryViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.SaveCategoryAsync(RoosterPlanner.Api.Models.CategoryViewModel)
  fullName: RoosterPlanner.Api.Controllers.TasksController.SaveCategoryAsync(RoosterPlanner.Api.Models.CategoryViewModel)
  nameWithType: TasksController.SaveCategoryAsync(CategoryViewModel)
- uid: RoosterPlanner.Api.Controllers.TasksController.SaveCategoryAsync*
  name: SaveCategoryAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_SaveCategoryAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.SaveCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.SaveCategoryAsync
  nameWithType: TasksController.SaveCategoryAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.SaveTaskAsync(RoosterPlanner.Api.Models.TaskViewModel)
  name: SaveTaskAsync(TaskViewModel)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_SaveTaskAsync_RoosterPlanner_Api_Models_TaskViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.SaveTaskAsync(RoosterPlanner.Api.Models.TaskViewModel)
  fullName: RoosterPlanner.Api.Controllers.TasksController.SaveTaskAsync(RoosterPlanner.Api.Models.TaskViewModel)
  nameWithType: TasksController.SaveTaskAsync(TaskViewModel)
- uid: RoosterPlanner.Api.Controllers.TasksController.SaveTaskAsync*
  name: SaveTaskAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_SaveTaskAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.SaveTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.SaveTaskAsync
  nameWithType: TasksController.SaveTaskAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.SearchTasksAsync(System.String,System.Int32,System.Int32)
  name: SearchTasksAsync(String, Int32, Int32)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_SearchTasksAsync_System_String_System_Int32_System_Int32_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.SearchTasksAsync(System.String,System.Int32,System.Int32)
  fullName: RoosterPlanner.Api.Controllers.TasksController.SearchTasksAsync(System.String, System.Int32, System.Int32)
  nameWithType: TasksController.SearchTasksAsync(String, Int32, Int32)
- uid: RoosterPlanner.Api.Controllers.TasksController.SearchTasksAsync*
  name: SearchTasksAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_SearchTasksAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.SearchTasksAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.SearchTasksAsync
  nameWithType: TasksController.SearchTasksAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.UpdateCategoryAsync(RoosterPlanner.Api.Models.CategoryViewModel)
  name: UpdateCategoryAsync(CategoryViewModel)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_UpdateCategoryAsync_RoosterPlanner_Api_Models_CategoryViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.UpdateCategoryAsync(RoosterPlanner.Api.Models.CategoryViewModel)
  fullName: RoosterPlanner.Api.Controllers.TasksController.UpdateCategoryAsync(RoosterPlanner.Api.Models.CategoryViewModel)
  nameWithType: TasksController.UpdateCategoryAsync(CategoryViewModel)
- uid: RoosterPlanner.Api.Controllers.TasksController.UpdateCategoryAsync*
  name: UpdateCategoryAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_UpdateCategoryAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.UpdateCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.UpdateCategoryAsync
  nameWithType: TasksController.UpdateCategoryAsync
- uid: RoosterPlanner.Api.Controllers.TasksController.UpdateTaskAsync(RoosterPlanner.Api.Models.TaskViewModel)
  name: UpdateTaskAsync(TaskViewModel)
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_UpdateTaskAsync_RoosterPlanner_Api_Models_TaskViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.TasksController.UpdateTaskAsync(RoosterPlanner.Api.Models.TaskViewModel)
  fullName: RoosterPlanner.Api.Controllers.TasksController.UpdateTaskAsync(RoosterPlanner.Api.Models.TaskViewModel)
  nameWithType: TasksController.UpdateTaskAsync(TaskViewModel)
- uid: RoosterPlanner.Api.Controllers.TasksController.UpdateTaskAsync*
  name: UpdateTaskAsync
  href: api/RoosterPlanner.Api.Controllers.TasksController.html#RoosterPlanner_Api_Controllers_TasksController_UpdateTaskAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.TasksController.UpdateTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.TasksController.UpdateTaskAsync
  nameWithType: TasksController.UpdateTaskAsync
- uid: RoosterPlanner.Api.Controllers.UploadController
  name: UploadController
  href: api/RoosterPlanner.Api.Controllers.UploadController.html
  commentId: T:RoosterPlanner.Api.Controllers.UploadController
  fullName: RoosterPlanner.Api.Controllers.UploadController
  nameWithType: UploadController
- uid: RoosterPlanner.Api.Controllers.UploadController.#ctor(RoosterPlanner.Service.IBlobService,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.UploadController},RoosterPlanner.Service.IDocumentService)
  name: UploadController(IBlobService, ILogger<UploadController>, IDocumentService)
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController__ctor_RoosterPlanner_Service_IBlobService_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Api_Controllers_UploadController__RoosterPlanner_Service_IDocumentService_
  commentId: M:RoosterPlanner.Api.Controllers.UploadController.#ctor(RoosterPlanner.Service.IBlobService,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Api.Controllers.UploadController},RoosterPlanner.Service.IDocumentService)
  name.vb: UploadController(IBlobService, ILogger(Of UploadController), IDocumentService)
  fullName: RoosterPlanner.Api.Controllers.UploadController.UploadController(RoosterPlanner.Service.IBlobService, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Api.Controllers.UploadController>, RoosterPlanner.Service.IDocumentService)
  fullName.vb: RoosterPlanner.Api.Controllers.UploadController.UploadController(RoosterPlanner.Service.IBlobService, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Api.Controllers.UploadController), RoosterPlanner.Service.IDocumentService)
  nameWithType: UploadController.UploadController(IBlobService, ILogger<UploadController>, IDocumentService)
  nameWithType.vb: UploadController.UploadController(IBlobService, ILogger(Of UploadController), IDocumentService)
- uid: RoosterPlanner.Api.Controllers.UploadController.#ctor*
  name: UploadController
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController__ctor_
  commentId: Overload:RoosterPlanner.Api.Controllers.UploadController.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.UploadController.UploadController
  nameWithType: UploadController.UploadController
- uid: RoosterPlanner.Api.Controllers.UploadController.CreateDocument(RoosterPlanner.Api.Models.DocumentViewModel)
  name: CreateDocument(DocumentViewModel)
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_CreateDocument_RoosterPlanner_Api_Models_DocumentViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.UploadController.CreateDocument(RoosterPlanner.Api.Models.DocumentViewModel)
  fullName: RoosterPlanner.Api.Controllers.UploadController.CreateDocument(RoosterPlanner.Api.Models.DocumentViewModel)
  nameWithType: UploadController.CreateDocument(DocumentViewModel)
- uid: RoosterPlanner.Api.Controllers.UploadController.CreateDocument*
  name: CreateDocument
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_CreateDocument_
  commentId: Overload:RoosterPlanner.Api.Controllers.UploadController.CreateDocument
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.UploadController.CreateDocument
  nameWithType: UploadController.CreateDocument
- uid: RoosterPlanner.Api.Controllers.UploadController.DeleteAsync(System.String)
  name: DeleteAsync(String)
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_DeleteAsync_System_String_
  commentId: M:RoosterPlanner.Api.Controllers.UploadController.DeleteAsync(System.String)
  fullName: RoosterPlanner.Api.Controllers.UploadController.DeleteAsync(System.String)
  nameWithType: UploadController.DeleteAsync(String)
- uid: RoosterPlanner.Api.Controllers.UploadController.DeleteAsync*
  name: DeleteAsync
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_DeleteAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.UploadController.DeleteAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.UploadController.DeleteAsync
  nameWithType: UploadController.DeleteAsync
- uid: RoosterPlanner.Api.Controllers.UploadController.DeleteDocumentAsync(System.Guid)
  name: DeleteDocumentAsync(Guid)
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_DeleteDocumentAsync_System_Guid_
  commentId: M:RoosterPlanner.Api.Controllers.UploadController.DeleteDocumentAsync(System.Guid)
  fullName: RoosterPlanner.Api.Controllers.UploadController.DeleteDocumentAsync(System.Guid)
  nameWithType: UploadController.DeleteDocumentAsync(Guid)
- uid: RoosterPlanner.Api.Controllers.UploadController.DeleteDocumentAsync*
  name: DeleteDocumentAsync
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_DeleteDocumentAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.UploadController.DeleteDocumentAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.UploadController.DeleteDocumentAsync
  nameWithType: UploadController.DeleteDocumentAsync
- uid: RoosterPlanner.Api.Controllers.UploadController.GetPP
  name: GetPP()
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_GetPP
  commentId: M:RoosterPlanner.Api.Controllers.UploadController.GetPP
  fullName: RoosterPlanner.Api.Controllers.UploadController.GetPP()
  nameWithType: UploadController.GetPP()
- uid: RoosterPlanner.Api.Controllers.UploadController.GetPP*
  name: GetPP
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_GetPP_
  commentId: Overload:RoosterPlanner.Api.Controllers.UploadController.GetPP
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.UploadController.GetPP
  nameWithType: UploadController.GetPP
- uid: RoosterPlanner.Api.Controllers.UploadController.UpdateDocument(RoosterPlanner.Api.Models.DocumentViewModel)
  name: UpdateDocument(DocumentViewModel)
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_UpdateDocument_RoosterPlanner_Api_Models_DocumentViewModel_
  commentId: M:RoosterPlanner.Api.Controllers.UploadController.UpdateDocument(RoosterPlanner.Api.Models.DocumentViewModel)
  fullName: RoosterPlanner.Api.Controllers.UploadController.UpdateDocument(RoosterPlanner.Api.Models.DocumentViewModel)
  nameWithType: UploadController.UpdateDocument(DocumentViewModel)
- uid: RoosterPlanner.Api.Controllers.UploadController.UpdateDocument*
  name: UpdateDocument
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_UpdateDocument_
  commentId: Overload:RoosterPlanner.Api.Controllers.UploadController.UpdateDocument
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.UploadController.UpdateDocument
  nameWithType: UploadController.UpdateDocument
- uid: RoosterPlanner.Api.Controllers.UploadController.UploadInstructionAsync(System.String)
  name: UploadInstructionAsync(String)
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_UploadInstructionAsync_System_String_
  commentId: M:RoosterPlanner.Api.Controllers.UploadController.UploadInstructionAsync(System.String)
  fullName: RoosterPlanner.Api.Controllers.UploadController.UploadInstructionAsync(System.String)
  nameWithType: UploadController.UploadInstructionAsync(String)
- uid: RoosterPlanner.Api.Controllers.UploadController.UploadInstructionAsync*
  name: UploadInstructionAsync
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_UploadInstructionAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.UploadController.UploadInstructionAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.UploadController.UploadInstructionAsync
  nameWithType: UploadController.UploadInstructionAsync
- uid: RoosterPlanner.Api.Controllers.UploadController.UploadPP
  name: UploadPP()
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_UploadPP
  commentId: M:RoosterPlanner.Api.Controllers.UploadController.UploadPP
  fullName: RoosterPlanner.Api.Controllers.UploadController.UploadPP()
  nameWithType: UploadController.UploadPP()
- uid: RoosterPlanner.Api.Controllers.UploadController.UploadPP*
  name: UploadPP
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_UploadPP_
  commentId: Overload:RoosterPlanner.Api.Controllers.UploadController.UploadPP
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.UploadController.UploadPP
  nameWithType: UploadController.UploadPP
- uid: RoosterPlanner.Api.Controllers.UploadController.UploadProfilePictureAsync
  name: UploadProfilePictureAsync()
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_UploadProfilePictureAsync
  commentId: M:RoosterPlanner.Api.Controllers.UploadController.UploadProfilePictureAsync
  fullName: RoosterPlanner.Api.Controllers.UploadController.UploadProfilePictureAsync()
  nameWithType: UploadController.UploadProfilePictureAsync()
- uid: RoosterPlanner.Api.Controllers.UploadController.UploadProfilePictureAsync*
  name: UploadProfilePictureAsync
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_UploadProfilePictureAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.UploadController.UploadProfilePictureAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.UploadController.UploadProfilePictureAsync
  nameWithType: UploadController.UploadProfilePictureAsync
- uid: RoosterPlanner.Api.Controllers.UploadController.UploadProjectPictureAsync
  name: UploadProjectPictureAsync()
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_UploadProjectPictureAsync
  commentId: M:RoosterPlanner.Api.Controllers.UploadController.UploadProjectPictureAsync
  fullName: RoosterPlanner.Api.Controllers.UploadController.UploadProjectPictureAsync()
  nameWithType: UploadController.UploadProjectPictureAsync()
- uid: RoosterPlanner.Api.Controllers.UploadController.UploadProjectPictureAsync*
  name: UploadProjectPictureAsync
  href: api/RoosterPlanner.Api.Controllers.UploadController.html#RoosterPlanner_Api_Controllers_UploadController_UploadProjectPictureAsync_
  commentId: Overload:RoosterPlanner.Api.Controllers.UploadController.UploadProjectPictureAsync
  isSpec: "True"
  fullName: RoosterPlanner.Api.Controllers.UploadController.UploadProjectPictureAsync
  nameWithType: UploadController.UploadProjectPictureAsync
- uid: RoosterPlanner.Api.Models
  name: RoosterPlanner.Api.Models
  href: api/RoosterPlanner.Api.Models.html
  commentId: N:RoosterPlanner.Api.Models
  fullName: RoosterPlanner.Api.Models
  nameWithType: RoosterPlanner.Api.Models
- uid: RoosterPlanner.Api.Models.AvailabilityDataViewModel
  name: AvailabilityDataViewModel
  href: api/RoosterPlanner.Api.Models.AvailabilityDataViewModel.html
  commentId: T:RoosterPlanner.Api.Models.AvailabilityDataViewModel
  fullName: RoosterPlanner.Api.Models.AvailabilityDataViewModel
  nameWithType: AvailabilityDataViewModel
- uid: RoosterPlanner.Api.Models.AvailabilityDataViewModel.#ctor
  name: AvailabilityDataViewModel()
  href: api/RoosterPlanner.Api.Models.AvailabilityDataViewModel.html#RoosterPlanner_Api_Models_AvailabilityDataViewModel__ctor
  commentId: M:RoosterPlanner.Api.Models.AvailabilityDataViewModel.#ctor
  fullName: RoosterPlanner.Api.Models.AvailabilityDataViewModel.AvailabilityDataViewModel()
  nameWithType: AvailabilityDataViewModel.AvailabilityDataViewModel()
- uid: RoosterPlanner.Api.Models.AvailabilityDataViewModel.#ctor*
  name: AvailabilityDataViewModel
  href: api/RoosterPlanner.Api.Models.AvailabilityDataViewModel.html#RoosterPlanner_Api_Models_AvailabilityDataViewModel__ctor_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityDataViewModel.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityDataViewModel.AvailabilityDataViewModel
  nameWithType: AvailabilityDataViewModel.AvailabilityDataViewModel
- uid: RoosterPlanner.Api.Models.AvailabilityDataViewModel.KnownAvailabilities
  name: KnownAvailabilities
  href: api/RoosterPlanner.Api.Models.AvailabilityDataViewModel.html#RoosterPlanner_Api_Models_AvailabilityDataViewModel_KnownAvailabilities
  commentId: P:RoosterPlanner.Api.Models.AvailabilityDataViewModel.KnownAvailabilities
  fullName: RoosterPlanner.Api.Models.AvailabilityDataViewModel.KnownAvailabilities
  nameWithType: AvailabilityDataViewModel.KnownAvailabilities
- uid: RoosterPlanner.Api.Models.AvailabilityDataViewModel.KnownAvailabilities*
  name: KnownAvailabilities
  href: api/RoosterPlanner.Api.Models.AvailabilityDataViewModel.html#RoosterPlanner_Api_Models_AvailabilityDataViewModel_KnownAvailabilities_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityDataViewModel.KnownAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityDataViewModel.KnownAvailabilities
  nameWithType: AvailabilityDataViewModel.KnownAvailabilities
- uid: RoosterPlanner.Api.Models.AvailabilityDataViewModel.ProjectTasks
  name: ProjectTasks
  href: api/RoosterPlanner.Api.Models.AvailabilityDataViewModel.html#RoosterPlanner_Api_Models_AvailabilityDataViewModel_ProjectTasks
  commentId: P:RoosterPlanner.Api.Models.AvailabilityDataViewModel.ProjectTasks
  fullName: RoosterPlanner.Api.Models.AvailabilityDataViewModel.ProjectTasks
  nameWithType: AvailabilityDataViewModel.ProjectTasks
- uid: RoosterPlanner.Api.Models.AvailabilityDataViewModel.ProjectTasks*
  name: ProjectTasks
  href: api/RoosterPlanner.Api.Models.AvailabilityDataViewModel.html#RoosterPlanner_Api_Models_AvailabilityDataViewModel_ProjectTasks_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityDataViewModel.ProjectTasks
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityDataViewModel.ProjectTasks
  nameWithType: AvailabilityDataViewModel.ProjectTasks
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel
  name: AvailabilityViewModel
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html
  commentId: T:RoosterPlanner.Api.Models.AvailabilityViewModel
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel
  nameWithType: AvailabilityViewModel
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.CreateAvailability(RoosterPlanner.Api.Models.AvailabilityViewModel)
  name: CreateAvailability(AvailabilityViewModel)
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_CreateAvailability_RoosterPlanner_Api_Models_AvailabilityViewModel_
  commentId: M:RoosterPlanner.Api.Models.AvailabilityViewModel.CreateAvailability(RoosterPlanner.Api.Models.AvailabilityViewModel)
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.CreateAvailability(RoosterPlanner.Api.Models.AvailabilityViewModel)
  nameWithType: AvailabilityViewModel.CreateAvailability(AvailabilityViewModel)
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.CreateAvailability*
  name: CreateAvailability
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_CreateAvailability_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityViewModel.CreateAvailability
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.CreateAvailability
  nameWithType: AvailabilityViewModel.CreateAvailability
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.CreateVm(RoosterPlanner.Models.Availability)
  name: CreateVm(Availability)
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_CreateVm_RoosterPlanner_Models_Availability_
  commentId: M:RoosterPlanner.Api.Models.AvailabilityViewModel.CreateVm(RoosterPlanner.Models.Availability)
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.CreateVm(RoosterPlanner.Models.Availability)
  nameWithType: AvailabilityViewModel.CreateVm(Availability)
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.CreateVm
  nameWithType: AvailabilityViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.Participation
  name: Participation
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_Participation
  commentId: P:RoosterPlanner.Api.Models.AvailabilityViewModel.Participation
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.Participation
  nameWithType: AvailabilityViewModel.Participation
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.Participation*
  name: Participation
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_Participation_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityViewModel.Participation
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.Participation
  nameWithType: AvailabilityViewModel.Participation
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.ParticipationId
  name: ParticipationId
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_ParticipationId
  commentId: P:RoosterPlanner.Api.Models.AvailabilityViewModel.ParticipationId
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.ParticipationId
  nameWithType: AvailabilityViewModel.ParticipationId
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.ParticipationId*
  name: ParticipationId
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_ParticipationId_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityViewModel.ParticipationId
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.ParticipationId
  nameWithType: AvailabilityViewModel.ParticipationId
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.Preference
  name: Preference
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_Preference
  commentId: P:RoosterPlanner.Api.Models.AvailabilityViewModel.Preference
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.Preference
  nameWithType: AvailabilityViewModel.Preference
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.Preference*
  name: Preference
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_Preference_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityViewModel.Preference
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.Preference
  nameWithType: AvailabilityViewModel.Preference
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.PushEmailSend
  name: PushEmailSend
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_PushEmailSend
  commentId: P:RoosterPlanner.Api.Models.AvailabilityViewModel.PushEmailSend
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.PushEmailSend
  nameWithType: AvailabilityViewModel.PushEmailSend
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.PushEmailSend*
  name: PushEmailSend
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_PushEmailSend_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityViewModel.PushEmailSend
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.PushEmailSend
  nameWithType: AvailabilityViewModel.PushEmailSend
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.Shift
  name: Shift
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_Shift
  commentId: P:RoosterPlanner.Api.Models.AvailabilityViewModel.Shift
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.Shift
  nameWithType: AvailabilityViewModel.Shift
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.Shift*
  name: Shift
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_Shift_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityViewModel.Shift
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.Shift
  nameWithType: AvailabilityViewModel.Shift
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.ShiftId
  name: ShiftId
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_ShiftId
  commentId: P:RoosterPlanner.Api.Models.AvailabilityViewModel.ShiftId
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.ShiftId
  nameWithType: AvailabilityViewModel.ShiftId
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.ShiftId*
  name: ShiftId
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_ShiftId_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityViewModel.ShiftId
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.ShiftId
  nameWithType: AvailabilityViewModel.ShiftId
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.Type
  name: Type
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_Type
  commentId: P:RoosterPlanner.Api.Models.AvailabilityViewModel.Type
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.Type
  nameWithType: AvailabilityViewModel.Type
- uid: RoosterPlanner.Api.Models.AvailabilityViewModel.Type*
  name: Type
  href: api/RoosterPlanner.Api.Models.AvailabilityViewModel.html#RoosterPlanner_Api_Models_AvailabilityViewModel_Type_
  commentId: Overload:RoosterPlanner.Api.Models.AvailabilityViewModel.Type
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.AvailabilityViewModel.Type
  nameWithType: AvailabilityViewModel.Type
- uid: RoosterPlanner.Api.Models.CategoryViewModel
  name: CategoryViewModel
  href: api/RoosterPlanner.Api.Models.CategoryViewModel.html
  commentId: T:RoosterPlanner.Api.Models.CategoryViewModel
  fullName: RoosterPlanner.Api.Models.CategoryViewModel
  nameWithType: CategoryViewModel
- uid: RoosterPlanner.Api.Models.CategoryViewModel.Code
  name: Code
  href: api/RoosterPlanner.Api.Models.CategoryViewModel.html#RoosterPlanner_Api_Models_CategoryViewModel_Code
  commentId: P:RoosterPlanner.Api.Models.CategoryViewModel.Code
  fullName: RoosterPlanner.Api.Models.CategoryViewModel.Code
  nameWithType: CategoryViewModel.Code
- uid: RoosterPlanner.Api.Models.CategoryViewModel.Code*
  name: Code
  href: api/RoosterPlanner.Api.Models.CategoryViewModel.html#RoosterPlanner_Api_Models_CategoryViewModel_Code_
  commentId: Overload:RoosterPlanner.Api.Models.CategoryViewModel.Code
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CategoryViewModel.Code
  nameWithType: CategoryViewModel.Code
- uid: RoosterPlanner.Api.Models.CategoryViewModel.CreateCategory(RoosterPlanner.Api.Models.CategoryViewModel)
  name: CreateCategory(CategoryViewModel)
  href: api/RoosterPlanner.Api.Models.CategoryViewModel.html#RoosterPlanner_Api_Models_CategoryViewModel_CreateCategory_RoosterPlanner_Api_Models_CategoryViewModel_
  commentId: M:RoosterPlanner.Api.Models.CategoryViewModel.CreateCategory(RoosterPlanner.Api.Models.CategoryViewModel)
  fullName: RoosterPlanner.Api.Models.CategoryViewModel.CreateCategory(RoosterPlanner.Api.Models.CategoryViewModel)
  nameWithType: CategoryViewModel.CreateCategory(CategoryViewModel)
- uid: RoosterPlanner.Api.Models.CategoryViewModel.CreateCategory*
  name: CreateCategory
  href: api/RoosterPlanner.Api.Models.CategoryViewModel.html#RoosterPlanner_Api_Models_CategoryViewModel_CreateCategory_
  commentId: Overload:RoosterPlanner.Api.Models.CategoryViewModel.CreateCategory
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CategoryViewModel.CreateCategory
  nameWithType: CategoryViewModel.CreateCategory
- uid: RoosterPlanner.Api.Models.CategoryViewModel.CreateVm(RoosterPlanner.Models.Category)
  name: CreateVm(Category)
  href: api/RoosterPlanner.Api.Models.CategoryViewModel.html#RoosterPlanner_Api_Models_CategoryViewModel_CreateVm_RoosterPlanner_Models_Category_
  commentId: M:RoosterPlanner.Api.Models.CategoryViewModel.CreateVm(RoosterPlanner.Models.Category)
  fullName: RoosterPlanner.Api.Models.CategoryViewModel.CreateVm(RoosterPlanner.Models.Category)
  nameWithType: CategoryViewModel.CreateVm(Category)
- uid: RoosterPlanner.Api.Models.CategoryViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.CategoryViewModel.html#RoosterPlanner_Api_Models_CategoryViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.CategoryViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CategoryViewModel.CreateVm
  nameWithType: CategoryViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.CategoryViewModel.Name
  name: Name
  href: api/RoosterPlanner.Api.Models.CategoryViewModel.html#RoosterPlanner_Api_Models_CategoryViewModel_Name
  commentId: P:RoosterPlanner.Api.Models.CategoryViewModel.Name
  fullName: RoosterPlanner.Api.Models.CategoryViewModel.Name
  nameWithType: CategoryViewModel.Name
- uid: RoosterPlanner.Api.Models.CategoryViewModel.Name*
  name: Name
  href: api/RoosterPlanner.Api.Models.CategoryViewModel.html#RoosterPlanner_Api_Models_CategoryViewModel_Name_
  commentId: Overload:RoosterPlanner.Api.Models.CategoryViewModel.Name
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CategoryViewModel.Name
  nameWithType: CategoryViewModel.Name
- uid: RoosterPlanner.Api.Models.CertificateTypeViewModel
  name: CertificateTypeViewModel
  href: api/RoosterPlanner.Api.Models.CertificateTypeViewModel.html
  commentId: T:RoosterPlanner.Api.Models.CertificateTypeViewModel
  fullName: RoosterPlanner.Api.Models.CertificateTypeViewModel
  nameWithType: CertificateTypeViewModel
- uid: RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateCertificateType(RoosterPlanner.Api.Models.CertificateTypeViewModel)
  name: CreateCertificateType(CertificateTypeViewModel)
  href: api/RoosterPlanner.Api.Models.CertificateTypeViewModel.html#RoosterPlanner_Api_Models_CertificateTypeViewModel_CreateCertificateType_RoosterPlanner_Api_Models_CertificateTypeViewModel_
  commentId: M:RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateCertificateType(RoosterPlanner.Api.Models.CertificateTypeViewModel)
  fullName: RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateCertificateType(RoosterPlanner.Api.Models.CertificateTypeViewModel)
  nameWithType: CertificateTypeViewModel.CreateCertificateType(CertificateTypeViewModel)
- uid: RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateCertificateType*
  name: CreateCertificateType
  href: api/RoosterPlanner.Api.Models.CertificateTypeViewModel.html#RoosterPlanner_Api_Models_CertificateTypeViewModel_CreateCertificateType_
  commentId: Overload:RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateCertificateType
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateCertificateType
  nameWithType: CertificateTypeViewModel.CreateCertificateType
- uid: RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateVm(RoosterPlanner.Models.CertificateType)
  name: CreateVm(CertificateType)
  href: api/RoosterPlanner.Api.Models.CertificateTypeViewModel.html#RoosterPlanner_Api_Models_CertificateTypeViewModel_CreateVm_RoosterPlanner_Models_CertificateType_
  commentId: M:RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateVm(RoosterPlanner.Models.CertificateType)
  fullName: RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateVm(RoosterPlanner.Models.CertificateType)
  nameWithType: CertificateTypeViewModel.CreateVm(CertificateType)
- uid: RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.CertificateTypeViewModel.html#RoosterPlanner_Api_Models_CertificateTypeViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CertificateTypeViewModel.CreateVm
  nameWithType: CertificateTypeViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.CertificateTypeViewModel.Level
  name: Level
  href: api/RoosterPlanner.Api.Models.CertificateTypeViewModel.html#RoosterPlanner_Api_Models_CertificateTypeViewModel_Level
  commentId: P:RoosterPlanner.Api.Models.CertificateTypeViewModel.Level
  fullName: RoosterPlanner.Api.Models.CertificateTypeViewModel.Level
  nameWithType: CertificateTypeViewModel.Level
- uid: RoosterPlanner.Api.Models.CertificateTypeViewModel.Level*
  name: Level
  href: api/RoosterPlanner.Api.Models.CertificateTypeViewModel.html#RoosterPlanner_Api_Models_CertificateTypeViewModel_Level_
  commentId: Overload:RoosterPlanner.Api.Models.CertificateTypeViewModel.Level
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CertificateTypeViewModel.Level
  nameWithType: CertificateTypeViewModel.Level
- uid: RoosterPlanner.Api.Models.CertificateTypeViewModel.Name
  name: Name
  href: api/RoosterPlanner.Api.Models.CertificateTypeViewModel.html#RoosterPlanner_Api_Models_CertificateTypeViewModel_Name
  commentId: P:RoosterPlanner.Api.Models.CertificateTypeViewModel.Name
  fullName: RoosterPlanner.Api.Models.CertificateTypeViewModel.Name
  nameWithType: CertificateTypeViewModel.Name
- uid: RoosterPlanner.Api.Models.CertificateTypeViewModel.Name*
  name: Name
  href: api/RoosterPlanner.Api.Models.CertificateTypeViewModel.html#RoosterPlanner_Api_Models_CertificateTypeViewModel_Name_
  commentId: Overload:RoosterPlanner.Api.Models.CertificateTypeViewModel.Name
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CertificateTypeViewModel.Name
  nameWithType: CertificateTypeViewModel.Name
- uid: RoosterPlanner.Api.Models.CertificateViewModel
  name: CertificateViewModel
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html
  commentId: T:RoosterPlanner.Api.Models.CertificateViewModel
  fullName: RoosterPlanner.Api.Models.CertificateViewModel
  nameWithType: CertificateViewModel
- uid: RoosterPlanner.Api.Models.CertificateViewModel.CertificateType
  name: CertificateType
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_CertificateType
  commentId: P:RoosterPlanner.Api.Models.CertificateViewModel.CertificateType
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.CertificateType
  nameWithType: CertificateViewModel.CertificateType
- uid: RoosterPlanner.Api.Models.CertificateViewModel.CertificateType*
  name: CertificateType
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_CertificateType_
  commentId: Overload:RoosterPlanner.Api.Models.CertificateViewModel.CertificateType
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.CertificateType
  nameWithType: CertificateViewModel.CertificateType
- uid: RoosterPlanner.Api.Models.CertificateViewModel.CreateCertificate(RoosterPlanner.Api.Models.CertificateViewModel)
  name: CreateCertificate(CertificateViewModel)
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_CreateCertificate_RoosterPlanner_Api_Models_CertificateViewModel_
  commentId: M:RoosterPlanner.Api.Models.CertificateViewModel.CreateCertificate(RoosterPlanner.Api.Models.CertificateViewModel)
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.CreateCertificate(RoosterPlanner.Api.Models.CertificateViewModel)
  nameWithType: CertificateViewModel.CreateCertificate(CertificateViewModel)
- uid: RoosterPlanner.Api.Models.CertificateViewModel.CreateCertificate*
  name: CreateCertificate
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_CreateCertificate_
  commentId: Overload:RoosterPlanner.Api.Models.CertificateViewModel.CreateCertificate
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.CreateCertificate
  nameWithType: CertificateViewModel.CreateCertificate
- uid: RoosterPlanner.Api.Models.CertificateViewModel.CreateVm(RoosterPlanner.Models.Certificate)
  name: CreateVm(Certificate)
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_CreateVm_RoosterPlanner_Models_Certificate_
  commentId: M:RoosterPlanner.Api.Models.CertificateViewModel.CreateVm(RoosterPlanner.Models.Certificate)
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.CreateVm(RoosterPlanner.Models.Certificate)
  nameWithType: CertificateViewModel.CreateVm(Certificate)
- uid: RoosterPlanner.Api.Models.CertificateViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.CertificateViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.CreateVm
  nameWithType: CertificateViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.CertificateViewModel.DateExpired
  name: DateExpired
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_DateExpired
  commentId: P:RoosterPlanner.Api.Models.CertificateViewModel.DateExpired
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.DateExpired
  nameWithType: CertificateViewModel.DateExpired
- uid: RoosterPlanner.Api.Models.CertificateViewModel.DateExpired*
  name: DateExpired
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_DateExpired_
  commentId: Overload:RoosterPlanner.Api.Models.CertificateViewModel.DateExpired
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.DateExpired
  nameWithType: CertificateViewModel.DateExpired
- uid: RoosterPlanner.Api.Models.CertificateViewModel.DateIssued
  name: DateIssued
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_DateIssued
  commentId: P:RoosterPlanner.Api.Models.CertificateViewModel.DateIssued
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.DateIssued
  nameWithType: CertificateViewModel.DateIssued
- uid: RoosterPlanner.Api.Models.CertificateViewModel.DateIssued*
  name: DateIssued
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_DateIssued_
  commentId: Overload:RoosterPlanner.Api.Models.CertificateViewModel.DateIssued
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.DateIssued
  nameWithType: CertificateViewModel.DateIssued
- uid: RoosterPlanner.Api.Models.CertificateViewModel.Person
  name: Person
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_Person
  commentId: P:RoosterPlanner.Api.Models.CertificateViewModel.Person
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.Person
  nameWithType: CertificateViewModel.Person
- uid: RoosterPlanner.Api.Models.CertificateViewModel.Person*
  name: Person
  href: api/RoosterPlanner.Api.Models.CertificateViewModel.html#RoosterPlanner_Api_Models_CertificateViewModel_Person_
  commentId: Overload:RoosterPlanner.Api.Models.CertificateViewModel.Person
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.CertificateViewModel.Person
  nameWithType: CertificateViewModel.Person
- uid: RoosterPlanner.Api.Models.Constants
  name: RoosterPlanner.Api.Models.Constants
  href: api/RoosterPlanner.Api.Models.Constants.html
  commentId: N:RoosterPlanner.Api.Models.Constants
  fullName: RoosterPlanner.Api.Models.Constants
  nameWithType: RoosterPlanner.Api.Models.Constants
- uid: RoosterPlanner.Api.Models.Constants.Extensions
  name: Extensions
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html
  commentId: T:RoosterPlanner.Api.Models.Constants.Extensions
  fullName: RoosterPlanner.Api.Models.Constants.Extensions
  nameWithType: Extensions
- uid: RoosterPlanner.Api.Models.Constants.Extensions.DateOfBirthExtension
  name: DateOfBirthExtension
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_DateOfBirthExtension
  commentId: P:RoosterPlanner.Api.Models.Constants.Extensions.DateOfBirthExtension
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.DateOfBirthExtension
  nameWithType: Extensions.DateOfBirthExtension
- uid: RoosterPlanner.Api.Models.Constants.Extensions.DateOfBirthExtension*
  name: DateOfBirthExtension
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_DateOfBirthExtension_
  commentId: Overload:RoosterPlanner.Api.Models.Constants.Extensions.DateOfBirthExtension
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.DateOfBirthExtension
  nameWithType: Extensions.DateOfBirthExtension
- uid: RoosterPlanner.Api.Models.Constants.Extensions.DutchProficiencyExtention
  name: DutchProficiencyExtention
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_DutchProficiencyExtention
  commentId: P:RoosterPlanner.Api.Models.Constants.Extensions.DutchProficiencyExtention
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.DutchProficiencyExtention
  nameWithType: Extensions.DutchProficiencyExtention
- uid: RoosterPlanner.Api.Models.Constants.Extensions.DutchProficiencyExtention*
  name: DutchProficiencyExtention
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_DutchProficiencyExtention_
  commentId: Overload:RoosterPlanner.Api.Models.Constants.Extensions.DutchProficiencyExtention
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.DutchProficiencyExtention
  nameWithType: Extensions.DutchProficiencyExtention
- uid: RoosterPlanner.Api.Models.Constants.Extensions.GetInstance(System.String)
  name: GetInstance(String)
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_GetInstance_System_String_
  commentId: M:RoosterPlanner.Api.Models.Constants.Extensions.GetInstance(System.String)
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.GetInstance(System.String)
  nameWithType: Extensions.GetInstance(String)
- uid: RoosterPlanner.Api.Models.Constants.Extensions.GetInstance*
  name: GetInstance
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_GetInstance_
  commentId: Overload:RoosterPlanner.Api.Models.Constants.Extensions.GetInstance
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.GetInstance
  nameWithType: Extensions.GetInstance
- uid: RoosterPlanner.Api.Models.Constants.Extensions.NationalityExtension
  name: NationalityExtension
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_NationalityExtension
  commentId: P:RoosterPlanner.Api.Models.Constants.Extensions.NationalityExtension
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.NationalityExtension
  nameWithType: Extensions.NationalityExtension
- uid: RoosterPlanner.Api.Models.Constants.Extensions.NationalityExtension*
  name: NationalityExtension
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_NationalityExtension_
  commentId: Overload:RoosterPlanner.Api.Models.Constants.Extensions.NationalityExtension
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.NationalityExtension
  nameWithType: Extensions.NationalityExtension
- uid: RoosterPlanner.Api.Models.Constants.Extensions.NativeLanguageExtention
  name: NativeLanguageExtention
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_NativeLanguageExtention
  commentId: P:RoosterPlanner.Api.Models.Constants.Extensions.NativeLanguageExtention
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.NativeLanguageExtention
  nameWithType: Extensions.NativeLanguageExtention
- uid: RoosterPlanner.Api.Models.Constants.Extensions.NativeLanguageExtention*
  name: NativeLanguageExtention
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_NativeLanguageExtention_
  commentId: Overload:RoosterPlanner.Api.Models.Constants.Extensions.NativeLanguageExtention
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.NativeLanguageExtention
  nameWithType: Extensions.NativeLanguageExtention
- uid: RoosterPlanner.Api.Models.Constants.Extensions.PhoneNumberExtension
  name: PhoneNumberExtension
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_PhoneNumberExtension
  commentId: P:RoosterPlanner.Api.Models.Constants.Extensions.PhoneNumberExtension
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.PhoneNumberExtension
  nameWithType: Extensions.PhoneNumberExtension
- uid: RoosterPlanner.Api.Models.Constants.Extensions.PhoneNumberExtension*
  name: PhoneNumberExtension
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_PhoneNumberExtension_
  commentId: Overload:RoosterPlanner.Api.Models.Constants.Extensions.PhoneNumberExtension
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.PhoneNumberExtension
  nameWithType: Extensions.PhoneNumberExtension
- uid: RoosterPlanner.Api.Models.Constants.Extensions.TermsOfUseConsentedExtention
  name: TermsOfUseConsentedExtention
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_TermsOfUseConsentedExtention
  commentId: P:RoosterPlanner.Api.Models.Constants.Extensions.TermsOfUseConsentedExtention
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.TermsOfUseConsentedExtention
  nameWithType: Extensions.TermsOfUseConsentedExtention
- uid: RoosterPlanner.Api.Models.Constants.Extensions.TermsOfUseConsentedExtention*
  name: TermsOfUseConsentedExtention
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_TermsOfUseConsentedExtention_
  commentId: Overload:RoosterPlanner.Api.Models.Constants.Extensions.TermsOfUseConsentedExtention
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.TermsOfUseConsentedExtention
  nameWithType: Extensions.TermsOfUseConsentedExtention
- uid: RoosterPlanner.Api.Models.Constants.Extensions.UserRoleExtension
  name: UserRoleExtension
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_UserRoleExtension
  commentId: P:RoosterPlanner.Api.Models.Constants.Extensions.UserRoleExtension
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.UserRoleExtension
  nameWithType: Extensions.UserRoleExtension
- uid: RoosterPlanner.Api.Models.Constants.Extensions.UserRoleExtension*
  name: UserRoleExtension
  href: api/RoosterPlanner.Api.Models.Constants.Extensions.html#RoosterPlanner_Api_Models_Constants_Extensions_UserRoleExtension_
  commentId: Overload:RoosterPlanner.Api.Models.Constants.Extensions.UserRoleExtension
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Constants.Extensions.UserRoleExtension
  nameWithType: Extensions.UserRoleExtension
- uid: RoosterPlanner.Api.Models.Constants.WebUrlConfig
  name: WebUrlConfig
  href: api/RoosterPlanner.Api.Models.Constants.WebUrlConfig.html
  commentId: T:RoosterPlanner.Api.Models.Constants.WebUrlConfig
  fullName: RoosterPlanner.Api.Models.Constants.WebUrlConfig
  nameWithType: WebUrlConfig
- uid: RoosterPlanner.Api.Models.Constants.WebUrlConfig.ConfigSectionName
  name: ConfigSectionName
  href: api/RoosterPlanner.Api.Models.Constants.WebUrlConfig.html#RoosterPlanner_Api_Models_Constants_WebUrlConfig_ConfigSectionName
  commentId: P:RoosterPlanner.Api.Models.Constants.WebUrlConfig.ConfigSectionName
  fullName: RoosterPlanner.Api.Models.Constants.WebUrlConfig.ConfigSectionName
  nameWithType: WebUrlConfig.ConfigSectionName
- uid: RoosterPlanner.Api.Models.Constants.WebUrlConfig.ConfigSectionName*
  name: ConfigSectionName
  href: api/RoosterPlanner.Api.Models.Constants.WebUrlConfig.html#RoosterPlanner_Api_Models_Constants_WebUrlConfig_ConfigSectionName_
  commentId: Overload:RoosterPlanner.Api.Models.Constants.WebUrlConfig.ConfigSectionName
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Constants.WebUrlConfig.ConfigSectionName
  nameWithType: WebUrlConfig.ConfigSectionName
- uid: RoosterPlanner.Api.Models.Constants.WebUrlConfig.Url
  name: Url
  href: api/RoosterPlanner.Api.Models.Constants.WebUrlConfig.html#RoosterPlanner_Api_Models_Constants_WebUrlConfig_Url
  commentId: P:RoosterPlanner.Api.Models.Constants.WebUrlConfig.Url
  fullName: RoosterPlanner.Api.Models.Constants.WebUrlConfig.Url
  nameWithType: WebUrlConfig.Url
- uid: RoosterPlanner.Api.Models.Constants.WebUrlConfig.Url*
  name: Url
  href: api/RoosterPlanner.Api.Models.Constants.WebUrlConfig.html#RoosterPlanner_Api_Models_Constants_WebUrlConfig_Url_
  commentId: Overload:RoosterPlanner.Api.Models.Constants.WebUrlConfig.Url
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Constants.WebUrlConfig.Url
  nameWithType: WebUrlConfig.Url
- uid: RoosterPlanner.Api.Models.DocumentViewModel
  name: DocumentViewModel
  href: api/RoosterPlanner.Api.Models.DocumentViewModel.html
  commentId: T:RoosterPlanner.Api.Models.DocumentViewModel
  fullName: RoosterPlanner.Api.Models.DocumentViewModel
  nameWithType: DocumentViewModel
- uid: RoosterPlanner.Api.Models.DocumentViewModel.CreateDocument(RoosterPlanner.Api.Models.DocumentViewModel)
  name: CreateDocument(DocumentViewModel)
  href: api/RoosterPlanner.Api.Models.DocumentViewModel.html#RoosterPlanner_Api_Models_DocumentViewModel_CreateDocument_RoosterPlanner_Api_Models_DocumentViewModel_
  commentId: M:RoosterPlanner.Api.Models.DocumentViewModel.CreateDocument(RoosterPlanner.Api.Models.DocumentViewModel)
  fullName: RoosterPlanner.Api.Models.DocumentViewModel.CreateDocument(RoosterPlanner.Api.Models.DocumentViewModel)
  nameWithType: DocumentViewModel.CreateDocument(DocumentViewModel)
- uid: RoosterPlanner.Api.Models.DocumentViewModel.CreateDocument*
  name: CreateDocument
  href: api/RoosterPlanner.Api.Models.DocumentViewModel.html#RoosterPlanner_Api_Models_DocumentViewModel_CreateDocument_
  commentId: Overload:RoosterPlanner.Api.Models.DocumentViewModel.CreateDocument
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.DocumentViewModel.CreateDocument
  nameWithType: DocumentViewModel.CreateDocument
- uid: RoosterPlanner.Api.Models.DocumentViewModel.CreateVm(RoosterPlanner.Models.Document)
  name: CreateVm(Document)
  href: api/RoosterPlanner.Api.Models.DocumentViewModel.html#RoosterPlanner_Api_Models_DocumentViewModel_CreateVm_RoosterPlanner_Models_Document_
  commentId: M:RoosterPlanner.Api.Models.DocumentViewModel.CreateVm(RoosterPlanner.Models.Document)
  fullName: RoosterPlanner.Api.Models.DocumentViewModel.CreateVm(RoosterPlanner.Models.Document)
  nameWithType: DocumentViewModel.CreateVm(Document)
- uid: RoosterPlanner.Api.Models.DocumentViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.DocumentViewModel.html#RoosterPlanner_Api_Models_DocumentViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.DocumentViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.DocumentViewModel.CreateVm
  nameWithType: DocumentViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.DocumentViewModel.DocumentUri
  name: DocumentUri
  href: api/RoosterPlanner.Api.Models.DocumentViewModel.html#RoosterPlanner_Api_Models_DocumentViewModel_DocumentUri
  commentId: P:RoosterPlanner.Api.Models.DocumentViewModel.DocumentUri
  fullName: RoosterPlanner.Api.Models.DocumentViewModel.DocumentUri
  nameWithType: DocumentViewModel.DocumentUri
- uid: RoosterPlanner.Api.Models.DocumentViewModel.DocumentUri*
  name: DocumentUri
  href: api/RoosterPlanner.Api.Models.DocumentViewModel.html#RoosterPlanner_Api_Models_DocumentViewModel_DocumentUri_
  commentId: Overload:RoosterPlanner.Api.Models.DocumentViewModel.DocumentUri
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.DocumentViewModel.DocumentUri
  nameWithType: DocumentViewModel.DocumentUri
- uid: RoosterPlanner.Api.Models.DocumentViewModel.Name
  name: Name
  href: api/RoosterPlanner.Api.Models.DocumentViewModel.html#RoosterPlanner_Api_Models_DocumentViewModel_Name
  commentId: P:RoosterPlanner.Api.Models.DocumentViewModel.Name
  fullName: RoosterPlanner.Api.Models.DocumentViewModel.Name
  nameWithType: DocumentViewModel.Name
- uid: RoosterPlanner.Api.Models.DocumentViewModel.Name*
  name: Name
  href: api/RoosterPlanner.Api.Models.DocumentViewModel.html#RoosterPlanner_Api_Models_DocumentViewModel_Name_
  commentId: Overload:RoosterPlanner.Api.Models.DocumentViewModel.Name
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.DocumentViewModel.Name
  nameWithType: DocumentViewModel.Name
- uid: RoosterPlanner.Api.Models.EntityViewModel
  name: EntityViewModel
  href: api/RoosterPlanner.Api.Models.EntityViewModel.html
  commentId: T:RoosterPlanner.Api.Models.EntityViewModel
  fullName: RoosterPlanner.Api.Models.EntityViewModel
  nameWithType: EntityViewModel
- uid: RoosterPlanner.Api.Models.EntityViewModel.Id
  name: Id
  href: api/RoosterPlanner.Api.Models.EntityViewModel.html#RoosterPlanner_Api_Models_EntityViewModel_Id
  commentId: P:RoosterPlanner.Api.Models.EntityViewModel.Id
  fullName: RoosterPlanner.Api.Models.EntityViewModel.Id
  nameWithType: EntityViewModel.Id
- uid: RoosterPlanner.Api.Models.EntityViewModel.Id*
  name: Id
  href: api/RoosterPlanner.Api.Models.EntityViewModel.html#RoosterPlanner_Api_Models_EntityViewModel_Id_
  commentId: Overload:RoosterPlanner.Api.Models.EntityViewModel.Id
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.EntityViewModel.Id
  nameWithType: EntityViewModel.Id
- uid: RoosterPlanner.Api.Models.EntityViewModel.LastEditBy
  name: LastEditBy
  href: api/RoosterPlanner.Api.Models.EntityViewModel.html#RoosterPlanner_Api_Models_EntityViewModel_LastEditBy
  commentId: P:RoosterPlanner.Api.Models.EntityViewModel.LastEditBy
  fullName: RoosterPlanner.Api.Models.EntityViewModel.LastEditBy
  nameWithType: EntityViewModel.LastEditBy
- uid: RoosterPlanner.Api.Models.EntityViewModel.LastEditBy*
  name: LastEditBy
  href: api/RoosterPlanner.Api.Models.EntityViewModel.html#RoosterPlanner_Api_Models_EntityViewModel_LastEditBy_
  commentId: Overload:RoosterPlanner.Api.Models.EntityViewModel.LastEditBy
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.EntityViewModel.LastEditBy
  nameWithType: EntityViewModel.LastEditBy
- uid: RoosterPlanner.Api.Models.EntityViewModel.LastEditDate
  name: LastEditDate
  href: api/RoosterPlanner.Api.Models.EntityViewModel.html#RoosterPlanner_Api_Models_EntityViewModel_LastEditDate
  commentId: P:RoosterPlanner.Api.Models.EntityViewModel.LastEditDate
  fullName: RoosterPlanner.Api.Models.EntityViewModel.LastEditDate
  nameWithType: EntityViewModel.LastEditDate
- uid: RoosterPlanner.Api.Models.EntityViewModel.LastEditDate*
  name: LastEditDate
  href: api/RoosterPlanner.Api.Models.EntityViewModel.html#RoosterPlanner_Api_Models_EntityViewModel_LastEditDate_
  commentId: Overload:RoosterPlanner.Api.Models.EntityViewModel.LastEditDate
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.EntityViewModel.LastEditDate
  nameWithType: EntityViewModel.LastEditDate
- uid: RoosterPlanner.Api.Models.EntityViewModel.RowVersion
  name: RowVersion
  href: api/RoosterPlanner.Api.Models.EntityViewModel.html#RoosterPlanner_Api_Models_EntityViewModel_RowVersion
  commentId: P:RoosterPlanner.Api.Models.EntityViewModel.RowVersion
  fullName: RoosterPlanner.Api.Models.EntityViewModel.RowVersion
  nameWithType: EntityViewModel.RowVersion
- uid: RoosterPlanner.Api.Models.EntityViewModel.RowVersion*
  name: RowVersion
  href: api/RoosterPlanner.Api.Models.EntityViewModel.html#RoosterPlanner_Api_Models_EntityViewModel_RowVersion_
  commentId: Overload:RoosterPlanner.Api.Models.EntityViewModel.RowVersion
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.EntityViewModel.RowVersion
  nameWithType: EntityViewModel.RowVersion
- uid: RoosterPlanner.Api.Models.ErrorViewModel
  name: ErrorViewModel
  href: api/RoosterPlanner.Api.Models.ErrorViewModel.html
  commentId: T:RoosterPlanner.Api.Models.ErrorViewModel
  fullName: RoosterPlanner.Api.Models.ErrorViewModel
  nameWithType: ErrorViewModel
- uid: RoosterPlanner.Api.Models.ErrorViewModel.Message
  name: Message
  href: api/RoosterPlanner.Api.Models.ErrorViewModel.html#RoosterPlanner_Api_Models_ErrorViewModel_Message
  commentId: P:RoosterPlanner.Api.Models.ErrorViewModel.Message
  fullName: RoosterPlanner.Api.Models.ErrorViewModel.Message
  nameWithType: ErrorViewModel.Message
- uid: RoosterPlanner.Api.Models.ErrorViewModel.Message*
  name: Message
  href: api/RoosterPlanner.Api.Models.ErrorViewModel.html#RoosterPlanner_Api_Models_ErrorViewModel_Message_
  commentId: Overload:RoosterPlanner.Api.Models.ErrorViewModel.Message
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ErrorViewModel.Message
  nameWithType: ErrorViewModel.Message
- uid: RoosterPlanner.Api.Models.ErrorViewModel.Type
  name: Type
  href: api/RoosterPlanner.Api.Models.ErrorViewModel.html#RoosterPlanner_Api_Models_ErrorViewModel_Type
  commentId: P:RoosterPlanner.Api.Models.ErrorViewModel.Type
  fullName: RoosterPlanner.Api.Models.ErrorViewModel.Type
  nameWithType: ErrorViewModel.Type
- uid: RoosterPlanner.Api.Models.ErrorViewModel.Type*
  name: Type
  href: api/RoosterPlanner.Api.Models.ErrorViewModel.html#RoosterPlanner_Api_Models_ErrorViewModel_Type_
  commentId: Overload:RoosterPlanner.Api.Models.ErrorViewModel.Type
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ErrorViewModel.Type
  nameWithType: ErrorViewModel.Type
- uid: RoosterPlanner.Api.Models.ManagerViewModel
  name: ManagerViewModel
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html
  commentId: T:RoosterPlanner.Api.Models.ManagerViewModel
  fullName: RoosterPlanner.Api.Models.ManagerViewModel
  nameWithType: ManagerViewModel
- uid: RoosterPlanner.Api.Models.ManagerViewModel.CreateManager(RoosterPlanner.Api.Models.ManagerViewModel)
  name: CreateManager(ManagerViewModel)
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_CreateManager_RoosterPlanner_Api_Models_ManagerViewModel_
  commentId: M:RoosterPlanner.Api.Models.ManagerViewModel.CreateManager(RoosterPlanner.Api.Models.ManagerViewModel)
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.CreateManager(RoosterPlanner.Api.Models.ManagerViewModel)
  nameWithType: ManagerViewModel.CreateManager(ManagerViewModel)
- uid: RoosterPlanner.Api.Models.ManagerViewModel.CreateManager*
  name: CreateManager
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_CreateManager_
  commentId: Overload:RoosterPlanner.Api.Models.ManagerViewModel.CreateManager
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.CreateManager
  nameWithType: ManagerViewModel.CreateManager
- uid: RoosterPlanner.Api.Models.ManagerViewModel.CreateVm(RoosterPlanner.Models.Manager)
  name: CreateVm(Manager)
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_CreateVm_RoosterPlanner_Models_Manager_
  commentId: M:RoosterPlanner.Api.Models.ManagerViewModel.CreateVm(RoosterPlanner.Models.Manager)
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.CreateVm(RoosterPlanner.Models.Manager)
  nameWithType: ManagerViewModel.CreateVm(Manager)
- uid: RoosterPlanner.Api.Models.ManagerViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.ManagerViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.CreateVm
  nameWithType: ManagerViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.ManagerViewModel.Person
  name: Person
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_Person
  commentId: P:RoosterPlanner.Api.Models.ManagerViewModel.Person
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.Person
  nameWithType: ManagerViewModel.Person
- uid: RoosterPlanner.Api.Models.ManagerViewModel.Person*
  name: Person
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_Person_
  commentId: Overload:RoosterPlanner.Api.Models.ManagerViewModel.Person
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.Person
  nameWithType: ManagerViewModel.Person
- uid: RoosterPlanner.Api.Models.ManagerViewModel.PersonId
  name: PersonId
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_PersonId
  commentId: P:RoosterPlanner.Api.Models.ManagerViewModel.PersonId
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.PersonId
  nameWithType: ManagerViewModel.PersonId
- uid: RoosterPlanner.Api.Models.ManagerViewModel.PersonId*
  name: PersonId
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_PersonId_
  commentId: Overload:RoosterPlanner.Api.Models.ManagerViewModel.PersonId
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.PersonId
  nameWithType: ManagerViewModel.PersonId
- uid: RoosterPlanner.Api.Models.ManagerViewModel.Project
  name: Project
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_Project
  commentId: P:RoosterPlanner.Api.Models.ManagerViewModel.Project
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.Project
  nameWithType: ManagerViewModel.Project
- uid: RoosterPlanner.Api.Models.ManagerViewModel.Project*
  name: Project
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_Project_
  commentId: Overload:RoosterPlanner.Api.Models.ManagerViewModel.Project
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.Project
  nameWithType: ManagerViewModel.Project
- uid: RoosterPlanner.Api.Models.ManagerViewModel.ProjectId
  name: ProjectId
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_ProjectId
  commentId: P:RoosterPlanner.Api.Models.ManagerViewModel.ProjectId
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.ProjectId
  nameWithType: ManagerViewModel.ProjectId
- uid: RoosterPlanner.Api.Models.ManagerViewModel.ProjectId*
  name: ProjectId
  href: api/RoosterPlanner.Api.Models.ManagerViewModel.html#RoosterPlanner_Api_Models_ManagerViewModel_ProjectId_
  commentId: Overload:RoosterPlanner.Api.Models.ManagerViewModel.ProjectId
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ManagerViewModel.ProjectId
  nameWithType: ManagerViewModel.ProjectId
- uid: RoosterPlanner.Api.Models.MessageViewModel
  name: MessageViewModel
  href: api/RoosterPlanner.Api.Models.MessageViewModel.html
  commentId: T:RoosterPlanner.Api.Models.MessageViewModel
  fullName: RoosterPlanner.Api.Models.MessageViewModel
  nameWithType: MessageViewModel
- uid: RoosterPlanner.Api.Models.MessageViewModel.Body
  name: Body
  href: api/RoosterPlanner.Api.Models.MessageViewModel.html#RoosterPlanner_Api_Models_MessageViewModel_Body
  commentId: P:RoosterPlanner.Api.Models.MessageViewModel.Body
  fullName: RoosterPlanner.Api.Models.MessageViewModel.Body
  nameWithType: MessageViewModel.Body
- uid: RoosterPlanner.Api.Models.MessageViewModel.Body*
  name: Body
  href: api/RoosterPlanner.Api.Models.MessageViewModel.html#RoosterPlanner_Api_Models_MessageViewModel_Body_
  commentId: Overload:RoosterPlanner.Api.Models.MessageViewModel.Body
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.MessageViewModel.Body
  nameWithType: MessageViewModel.Body
- uid: RoosterPlanner.Api.Models.MessageViewModel.Subject
  name: Subject
  href: api/RoosterPlanner.Api.Models.MessageViewModel.html#RoosterPlanner_Api_Models_MessageViewModel_Subject
  commentId: P:RoosterPlanner.Api.Models.MessageViewModel.Subject
  fullName: RoosterPlanner.Api.Models.MessageViewModel.Subject
  nameWithType: MessageViewModel.Subject
- uid: RoosterPlanner.Api.Models.MessageViewModel.Subject*
  name: Subject
  href: api/RoosterPlanner.Api.Models.MessageViewModel.html#RoosterPlanner_Api_Models_MessageViewModel_Subject_
  commentId: Overload:RoosterPlanner.Api.Models.MessageViewModel.Subject
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.MessageViewModel.Subject
  nameWithType: MessageViewModel.Subject
- uid: RoosterPlanner.Api.Models.ParticipationViewModel
  name: ParticipationViewModel
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html
  commentId: T:RoosterPlanner.Api.Models.ParticipationViewModel
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel
  nameWithType: ParticipationViewModel
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.#ctor
  name: ParticipationViewModel()
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel__ctor
  commentId: M:RoosterPlanner.Api.Models.ParticipationViewModel.#ctor
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.ParticipationViewModel()
  nameWithType: ParticipationViewModel.ParticipationViewModel()
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.#ctor*
  name: ParticipationViewModel
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel__ctor_
  commentId: Overload:RoosterPlanner.Api.Models.ParticipationViewModel.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.ParticipationViewModel
  nameWithType: ParticipationViewModel.ParticipationViewModel
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.Active
  name: Active
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_Active
  commentId: P:RoosterPlanner.Api.Models.ParticipationViewModel.Active
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.Active
  nameWithType: ParticipationViewModel.Active
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.Active*
  name: Active
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_Active_
  commentId: Overload:RoosterPlanner.Api.Models.ParticipationViewModel.Active
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.Active
  nameWithType: ParticipationViewModel.Active
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.Availabilities
  name: Availabilities
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_Availabilities
  commentId: P:RoosterPlanner.Api.Models.ParticipationViewModel.Availabilities
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.Availabilities
  nameWithType: ParticipationViewModel.Availabilities
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.Availabilities*
  name: Availabilities
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_Availabilities_
  commentId: Overload:RoosterPlanner.Api.Models.ParticipationViewModel.Availabilities
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.Availabilities
  nameWithType: ParticipationViewModel.Availabilities
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.CreateParticipation(RoosterPlanner.Api.Models.ParticipationViewModel)
  name: CreateParticipation(ParticipationViewModel)
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_CreateParticipation_RoosterPlanner_Api_Models_ParticipationViewModel_
  commentId: M:RoosterPlanner.Api.Models.ParticipationViewModel.CreateParticipation(RoosterPlanner.Api.Models.ParticipationViewModel)
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.CreateParticipation(RoosterPlanner.Api.Models.ParticipationViewModel)
  nameWithType: ParticipationViewModel.CreateParticipation(ParticipationViewModel)
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.CreateParticipation*
  name: CreateParticipation
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_CreateParticipation_
  commentId: Overload:RoosterPlanner.Api.Models.ParticipationViewModel.CreateParticipation
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.CreateParticipation
  nameWithType: ParticipationViewModel.CreateParticipation
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.CreateVm(RoosterPlanner.Models.Participation)
  name: CreateVm(Participation)
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_CreateVm_RoosterPlanner_Models_Participation_
  commentId: M:RoosterPlanner.Api.Models.ParticipationViewModel.CreateVm(RoosterPlanner.Models.Participation)
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.CreateVm(RoosterPlanner.Models.Participation)
  nameWithType: ParticipationViewModel.CreateVm(Participation)
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.ParticipationViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.CreateVm
  nameWithType: ParticipationViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.MaxWorkingHoursPerWeek
  name: MaxWorkingHoursPerWeek
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_MaxWorkingHoursPerWeek
  commentId: P:RoosterPlanner.Api.Models.ParticipationViewModel.MaxWorkingHoursPerWeek
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.MaxWorkingHoursPerWeek
  nameWithType: ParticipationViewModel.MaxWorkingHoursPerWeek
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.MaxWorkingHoursPerWeek*
  name: MaxWorkingHoursPerWeek
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_MaxWorkingHoursPerWeek_
  commentId: Overload:RoosterPlanner.Api.Models.ParticipationViewModel.MaxWorkingHoursPerWeek
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.MaxWorkingHoursPerWeek
  nameWithType: ParticipationViewModel.MaxWorkingHoursPerWeek
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.Person
  name: Person
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_Person
  commentId: P:RoosterPlanner.Api.Models.ParticipationViewModel.Person
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.Person
  nameWithType: ParticipationViewModel.Person
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.Person*
  name: Person
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_Person_
  commentId: Overload:RoosterPlanner.Api.Models.ParticipationViewModel.Person
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.Person
  nameWithType: ParticipationViewModel.Person
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.Project
  name: Project
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_Project
  commentId: P:RoosterPlanner.Api.Models.ParticipationViewModel.Project
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.Project
  nameWithType: ParticipationViewModel.Project
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.Project*
  name: Project
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_Project_
  commentId: Overload:RoosterPlanner.Api.Models.ParticipationViewModel.Project
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.Project
  nameWithType: ParticipationViewModel.Project
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.Remark
  name: Remark
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_Remark
  commentId: P:RoosterPlanner.Api.Models.ParticipationViewModel.Remark
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.Remark
  nameWithType: ParticipationViewModel.Remark
- uid: RoosterPlanner.Api.Models.ParticipationViewModel.Remark*
  name: Remark
  href: api/RoosterPlanner.Api.Models.ParticipationViewModel.html#RoosterPlanner_Api_Models_ParticipationViewModel_Remark_
  commentId: Overload:RoosterPlanner.Api.Models.ParticipationViewModel.Remark
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ParticipationViewModel.Remark
  nameWithType: ParticipationViewModel.Remark
- uid: RoosterPlanner.Api.Models.PersonViewModel
  name: PersonViewModel
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html
  commentId: T:RoosterPlanner.Api.Models.PersonViewModel
  fullName: RoosterPlanner.Api.Models.PersonViewModel
  nameWithType: PersonViewModel
- uid: RoosterPlanner.Api.Models.PersonViewModel.Certificates
  name: Certificates
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_Certificates
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.Certificates
  fullName: RoosterPlanner.Api.Models.PersonViewModel.Certificates
  nameWithType: PersonViewModel.Certificates
- uid: RoosterPlanner.Api.Models.PersonViewModel.Certificates*
  name: Certificates
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_Certificates_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.Certificates
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.Certificates
  nameWithType: PersonViewModel.Certificates
- uid: RoosterPlanner.Api.Models.PersonViewModel.City
  name: City
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_City
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.City
  fullName: RoosterPlanner.Api.Models.PersonViewModel.City
  nameWithType: PersonViewModel.City
- uid: RoosterPlanner.Api.Models.PersonViewModel.City*
  name: City
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_City_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.City
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.City
  nameWithType: PersonViewModel.City
- uid: RoosterPlanner.Api.Models.PersonViewModel.CreatePerson(RoosterPlanner.Api.Models.PersonViewModel)
  name: CreatePerson(PersonViewModel)
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_CreatePerson_RoosterPlanner_Api_Models_PersonViewModel_
  commentId: M:RoosterPlanner.Api.Models.PersonViewModel.CreatePerson(RoosterPlanner.Api.Models.PersonViewModel)
  fullName: RoosterPlanner.Api.Models.PersonViewModel.CreatePerson(RoosterPlanner.Api.Models.PersonViewModel)
  nameWithType: PersonViewModel.CreatePerson(PersonViewModel)
- uid: RoosterPlanner.Api.Models.PersonViewModel.CreatePerson*
  name: CreatePerson
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_CreatePerson_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.CreatePerson
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.CreatePerson
  nameWithType: PersonViewModel.CreatePerson
- uid: RoosterPlanner.Api.Models.PersonViewModel.CreateUser(RoosterPlanner.Api.Models.PersonViewModel,RoosterPlanner.Api.Models.Constants.Extensions)
  name: CreateUser(PersonViewModel, Extensions)
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_CreateUser_RoosterPlanner_Api_Models_PersonViewModel_RoosterPlanner_Api_Models_Constants_Extensions_
  commentId: M:RoosterPlanner.Api.Models.PersonViewModel.CreateUser(RoosterPlanner.Api.Models.PersonViewModel,RoosterPlanner.Api.Models.Constants.Extensions)
  fullName: RoosterPlanner.Api.Models.PersonViewModel.CreateUser(RoosterPlanner.Api.Models.PersonViewModel, RoosterPlanner.Api.Models.Constants.Extensions)
  nameWithType: PersonViewModel.CreateUser(PersonViewModel, Extensions)
- uid: RoosterPlanner.Api.Models.PersonViewModel.CreateUser*
  name: CreateUser
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_CreateUser_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.CreateUser
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.CreateUser
  nameWithType: PersonViewModel.CreateUser
- uid: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromPerson(RoosterPlanner.Models.Person)
  name: CreateVmFromPerson(Person)
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_CreateVmFromPerson_RoosterPlanner_Models_Person_
  commentId: M:RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromPerson(RoosterPlanner.Models.Person)
  fullName: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromPerson(RoosterPlanner.Models.Person)
  nameWithType: PersonViewModel.CreateVmFromPerson(Person)
- uid: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromPerson*
  name: CreateVmFromPerson
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_CreateVmFromPerson_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromPerson
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromPerson
  nameWithType: PersonViewModel.CreateVmFromPerson
- uid: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUser(Microsoft.Graph.User,RoosterPlanner.Api.Models.Constants.Extensions)
  name: CreateVmFromUser(User, Extensions)
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_CreateVmFromUser_Microsoft_Graph_User_RoosterPlanner_Api_Models_Constants_Extensions_
  commentId: M:RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUser(Microsoft.Graph.User,RoosterPlanner.Api.Models.Constants.Extensions)
  fullName: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUser(Microsoft.Graph.User, RoosterPlanner.Api.Models.Constants.Extensions)
  nameWithType: PersonViewModel.CreateVmFromUser(User, Extensions)
- uid: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUser*
  name: CreateVmFromUser
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_CreateVmFromUser_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUser
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUser
  nameWithType: PersonViewModel.CreateVmFromUser
- uid: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUserAndPerson(Microsoft.Graph.User,RoosterPlanner.Models.Person,RoosterPlanner.Api.Models.Constants.Extensions)
  name: CreateVmFromUserAndPerson(User, Person, Extensions)
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_CreateVmFromUserAndPerson_Microsoft_Graph_User_RoosterPlanner_Models_Person_RoosterPlanner_Api_Models_Constants_Extensions_
  commentId: M:RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUserAndPerson(Microsoft.Graph.User,RoosterPlanner.Models.Person,RoosterPlanner.Api.Models.Constants.Extensions)
  fullName: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUserAndPerson(Microsoft.Graph.User, RoosterPlanner.Models.Person, RoosterPlanner.Api.Models.Constants.Extensions)
  nameWithType: PersonViewModel.CreateVmFromUserAndPerson(User, Person, Extensions)
- uid: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUserAndPerson*
  name: CreateVmFromUserAndPerson
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_CreateVmFromUserAndPerson_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUserAndPerson
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.CreateVmFromUserAndPerson
  nameWithType: PersonViewModel.CreateVmFromUserAndPerson
- uid: RoosterPlanner.Api.Models.PersonViewModel.DateOfBirth
  name: DateOfBirth
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_DateOfBirth
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.DateOfBirth
  fullName: RoosterPlanner.Api.Models.PersonViewModel.DateOfBirth
  nameWithType: PersonViewModel.DateOfBirth
- uid: RoosterPlanner.Api.Models.PersonViewModel.DateOfBirth*
  name: DateOfBirth
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_DateOfBirth_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.DateOfBirth
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.DateOfBirth
  nameWithType: PersonViewModel.DateOfBirth
- uid: RoosterPlanner.Api.Models.PersonViewModel.DutchProficiency
  name: DutchProficiency
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_DutchProficiency
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.DutchProficiency
  fullName: RoosterPlanner.Api.Models.PersonViewModel.DutchProficiency
  nameWithType: PersonViewModel.DutchProficiency
- uid: RoosterPlanner.Api.Models.PersonViewModel.DutchProficiency*
  name: DutchProficiency
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_DutchProficiency_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.DutchProficiency
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.DutchProficiency
  nameWithType: PersonViewModel.DutchProficiency
- uid: RoosterPlanner.Api.Models.PersonViewModel.Email
  name: Email
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_Email
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.Email
  fullName: RoosterPlanner.Api.Models.PersonViewModel.Email
  nameWithType: PersonViewModel.Email
- uid: RoosterPlanner.Api.Models.PersonViewModel.Email*
  name: Email
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_Email_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.Email
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.Email
  nameWithType: PersonViewModel.Email
- uid: RoosterPlanner.Api.Models.PersonViewModel.FirstName
  name: FirstName
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_FirstName
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.FirstName
  fullName: RoosterPlanner.Api.Models.PersonViewModel.FirstName
  nameWithType: PersonViewModel.FirstName
- uid: RoosterPlanner.Api.Models.PersonViewModel.FirstName*
  name: FirstName
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_FirstName_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.FirstName
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.FirstName
  nameWithType: PersonViewModel.FirstName
- uid: RoosterPlanner.Api.Models.PersonViewModel.LastName
  name: LastName
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_LastName
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.LastName
  fullName: RoosterPlanner.Api.Models.PersonViewModel.LastName
  nameWithType: PersonViewModel.LastName
- uid: RoosterPlanner.Api.Models.PersonViewModel.LastName*
  name: LastName
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_LastName_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.LastName
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.LastName
  nameWithType: PersonViewModel.LastName
- uid: RoosterPlanner.Api.Models.PersonViewModel.Nationality
  name: Nationality
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_Nationality
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.Nationality
  fullName: RoosterPlanner.Api.Models.PersonViewModel.Nationality
  nameWithType: PersonViewModel.Nationality
- uid: RoosterPlanner.Api.Models.PersonViewModel.Nationality*
  name: Nationality
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_Nationality_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.Nationality
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.Nationality
  nameWithType: PersonViewModel.Nationality
- uid: RoosterPlanner.Api.Models.PersonViewModel.NativeLanguage
  name: NativeLanguage
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_NativeLanguage
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.NativeLanguage
  fullName: RoosterPlanner.Api.Models.PersonViewModel.NativeLanguage
  nameWithType: PersonViewModel.NativeLanguage
- uid: RoosterPlanner.Api.Models.PersonViewModel.NativeLanguage*
  name: NativeLanguage
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_NativeLanguage_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.NativeLanguage
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.NativeLanguage
  nameWithType: PersonViewModel.NativeLanguage
- uid: RoosterPlanner.Api.Models.PersonViewModel.PersonalRemark
  name: PersonalRemark
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_PersonalRemark
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.PersonalRemark
  fullName: RoosterPlanner.Api.Models.PersonViewModel.PersonalRemark
  nameWithType: PersonViewModel.PersonalRemark
- uid: RoosterPlanner.Api.Models.PersonViewModel.PersonalRemark*
  name: PersonalRemark
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_PersonalRemark_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.PersonalRemark
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.PersonalRemark
  nameWithType: PersonViewModel.PersonalRemark
- uid: RoosterPlanner.Api.Models.PersonViewModel.PhoneNumber
  name: PhoneNumber
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_PhoneNumber
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.PhoneNumber
  fullName: RoosterPlanner.Api.Models.PersonViewModel.PhoneNumber
  nameWithType: PersonViewModel.PhoneNumber
- uid: RoosterPlanner.Api.Models.PersonViewModel.PhoneNumber*
  name: PhoneNumber
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_PhoneNumber_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.PhoneNumber
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.PhoneNumber
  nameWithType: PersonViewModel.PhoneNumber
- uid: RoosterPlanner.Api.Models.PersonViewModel.PostalCode
  name: PostalCode
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_PostalCode
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.PostalCode
  fullName: RoosterPlanner.Api.Models.PersonViewModel.PostalCode
  nameWithType: PersonViewModel.PostalCode
- uid: RoosterPlanner.Api.Models.PersonViewModel.PostalCode*
  name: PostalCode
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_PostalCode_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.PostalCode
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.PostalCode
  nameWithType: PersonViewModel.PostalCode
- uid: RoosterPlanner.Api.Models.PersonViewModel.ProfilePicture
  name: ProfilePicture
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_ProfilePicture
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.ProfilePicture
  fullName: RoosterPlanner.Api.Models.PersonViewModel.ProfilePicture
  nameWithType: PersonViewModel.ProfilePicture
- uid: RoosterPlanner.Api.Models.PersonViewModel.ProfilePicture*
  name: ProfilePicture
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_ProfilePicture_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.ProfilePicture
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.ProfilePicture
  nameWithType: PersonViewModel.ProfilePicture
- uid: RoosterPlanner.Api.Models.PersonViewModel.PushDisabled
  name: PushDisabled
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_PushDisabled
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.PushDisabled
  fullName: RoosterPlanner.Api.Models.PersonViewModel.PushDisabled
  nameWithType: PersonViewModel.PushDisabled
- uid: RoosterPlanner.Api.Models.PersonViewModel.PushDisabled*
  name: PushDisabled
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_PushDisabled_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.PushDisabled
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.PushDisabled
  nameWithType: PersonViewModel.PushDisabled
- uid: RoosterPlanner.Api.Models.PersonViewModel.StaffRemark
  name: StaffRemark
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_StaffRemark
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.StaffRemark
  fullName: RoosterPlanner.Api.Models.PersonViewModel.StaffRemark
  nameWithType: PersonViewModel.StaffRemark
- uid: RoosterPlanner.Api.Models.PersonViewModel.StaffRemark*
  name: StaffRemark
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_StaffRemark_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.StaffRemark
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.StaffRemark
  nameWithType: PersonViewModel.StaffRemark
- uid: RoosterPlanner.Api.Models.PersonViewModel.StreetAddress
  name: StreetAddress
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_StreetAddress
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.StreetAddress
  fullName: RoosterPlanner.Api.Models.PersonViewModel.StreetAddress
  nameWithType: PersonViewModel.StreetAddress
- uid: RoosterPlanner.Api.Models.PersonViewModel.StreetAddress*
  name: StreetAddress
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_StreetAddress_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.StreetAddress
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.StreetAddress
  nameWithType: PersonViewModel.StreetAddress
- uid: RoosterPlanner.Api.Models.PersonViewModel.TermsOfUseConsented
  name: TermsOfUseConsented
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_TermsOfUseConsented
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.TermsOfUseConsented
  fullName: RoosterPlanner.Api.Models.PersonViewModel.TermsOfUseConsented
  nameWithType: PersonViewModel.TermsOfUseConsented
- uid: RoosterPlanner.Api.Models.PersonViewModel.TermsOfUseConsented*
  name: TermsOfUseConsented
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_TermsOfUseConsented_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.TermsOfUseConsented
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.TermsOfUseConsented
  nameWithType: PersonViewModel.TermsOfUseConsented
- uid: RoosterPlanner.Api.Models.PersonViewModel.UserRole
  name: UserRole
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_UserRole
  commentId: P:RoosterPlanner.Api.Models.PersonViewModel.UserRole
  fullName: RoosterPlanner.Api.Models.PersonViewModel.UserRole
  nameWithType: PersonViewModel.UserRole
- uid: RoosterPlanner.Api.Models.PersonViewModel.UserRole*
  name: UserRole
  href: api/RoosterPlanner.Api.Models.PersonViewModel.html#RoosterPlanner_Api_Models_PersonViewModel_UserRole_
  commentId: Overload:RoosterPlanner.Api.Models.PersonViewModel.UserRole
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.PersonViewModel.UserRole
  nameWithType: PersonViewModel.UserRole
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel
  name: ProjectDetailsViewModel
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html
  commentId: T:RoosterPlanner.Api.Models.ProjectDetailsViewModel
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel
  nameWithType: ProjectDetailsViewModel
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.#ctor
  name: ProjectDetailsViewModel()
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel__ctor
  commentId: M:RoosterPlanner.Api.Models.ProjectDetailsViewModel.#ctor
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectDetailsViewModel()
  nameWithType: ProjectDetailsViewModel.ProjectDetailsViewModel()
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.#ctor*
  name: ProjectDetailsViewModel
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel__ctor_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectDetailsViewModel
  nameWithType: ProjectDetailsViewModel.ProjectDetailsViewModel
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Address
  name: Address
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_Address
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.Address
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Address
  nameWithType: ProjectDetailsViewModel.Address
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Address*
  name: Address
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_Address_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.Address
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Address
  nameWithType: ProjectDetailsViewModel.Address
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.City
  name: City
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_City
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.City
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.City
  nameWithType: ProjectDetailsViewModel.City
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.City*
  name: City
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_City_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.City
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.City
  nameWithType: ProjectDetailsViewModel.City
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Closed
  name: Closed
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_Closed
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.Closed
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Closed
  nameWithType: ProjectDetailsViewModel.Closed
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Closed*
  name: Closed
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_Closed_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.Closed
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Closed
  nameWithType: ProjectDetailsViewModel.Closed
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ContactAdres
  name: ContactAdres
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_ContactAdres
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.ContactAdres
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ContactAdres
  nameWithType: ProjectDetailsViewModel.ContactAdres
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ContactAdres*
  name: ContactAdres
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_ContactAdres_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.ContactAdres
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ContactAdres
  nameWithType: ProjectDetailsViewModel.ContactAdres
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateProject(RoosterPlanner.Api.Models.ProjectDetailsViewModel)
  name: CreateProject(ProjectDetailsViewModel)
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_CreateProject_RoosterPlanner_Api_Models_ProjectDetailsViewModel_
  commentId: M:RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateProject(RoosterPlanner.Api.Models.ProjectDetailsViewModel)
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateProject(RoosterPlanner.Api.Models.ProjectDetailsViewModel)
  nameWithType: ProjectDetailsViewModel.CreateProject(ProjectDetailsViewModel)
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateProject*
  name: CreateProject
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_CreateProject_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateProject
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateProject
  nameWithType: ProjectDetailsViewModel.CreateProject
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateVm(RoosterPlanner.Models.Project)
  name: CreateVm(Project)
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_CreateVm_RoosterPlanner_Models_Project_
  commentId: M:RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateVm(RoosterPlanner.Models.Project)
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateVm(RoosterPlanner.Models.Project)
  nameWithType: ProjectDetailsViewModel.CreateVm(Project)
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.CreateVm
  nameWithType: ProjectDetailsViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Description
  name: Description
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_Description
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.Description
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Description
  nameWithType: ProjectDetailsViewModel.Description
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Description*
  name: Description
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_Description_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.Description
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Description
  nameWithType: ProjectDetailsViewModel.Description
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Name
  name: Name
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_Name
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.Name
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Name
  nameWithType: ProjectDetailsViewModel.Name
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Name*
  name: Name
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_Name_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.Name
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Name
  nameWithType: ProjectDetailsViewModel.Name
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationEndDate
  name: ParticipationEndDate
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_ParticipationEndDate
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationEndDate
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationEndDate
  nameWithType: ProjectDetailsViewModel.ParticipationEndDate
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationEndDate*
  name: ParticipationEndDate
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_ParticipationEndDate_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationEndDate
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationEndDate
  nameWithType: ProjectDetailsViewModel.ParticipationEndDate
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationStartDate
  name: ParticipationStartDate
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_ParticipationStartDate
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationStartDate
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationStartDate
  nameWithType: ProjectDetailsViewModel.ParticipationStartDate
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationStartDate*
  name: ParticipationStartDate
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_ParticipationStartDate_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationStartDate
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ParticipationStartDate
  nameWithType: ProjectDetailsViewModel.ParticipationStartDate
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.PictureUri
  name: PictureUri
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_PictureUri
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.PictureUri
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.PictureUri
  nameWithType: ProjectDetailsViewModel.PictureUri
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.PictureUri*
  name: PictureUri
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_PictureUri_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.PictureUri
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.PictureUri
  nameWithType: ProjectDetailsViewModel.PictureUri
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectEndDate
  name: ProjectEndDate
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_ProjectEndDate
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectEndDate
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectEndDate
  nameWithType: ProjectDetailsViewModel.ProjectEndDate
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectEndDate*
  name: ProjectEndDate
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_ProjectEndDate_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectEndDate
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectEndDate
  nameWithType: ProjectDetailsViewModel.ProjectEndDate
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectStartDate
  name: ProjectStartDate
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_ProjectStartDate
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectStartDate
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectStartDate
  nameWithType: ProjectDetailsViewModel.ProjectStartDate
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectStartDate*
  name: ProjectStartDate
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_ProjectStartDate_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectStartDate
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.ProjectStartDate
  nameWithType: ProjectDetailsViewModel.ProjectStartDate
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Tasks
  name: Tasks
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_Tasks
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.Tasks
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Tasks
  nameWithType: ProjectDetailsViewModel.Tasks
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Tasks*
  name: Tasks
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_Tasks_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.Tasks
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.Tasks
  nameWithType: ProjectDetailsViewModel.Tasks
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.WebsiteUrl
  name: WebsiteUrl
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_WebsiteUrl
  commentId: P:RoosterPlanner.Api.Models.ProjectDetailsViewModel.WebsiteUrl
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.WebsiteUrl
  nameWithType: ProjectDetailsViewModel.WebsiteUrl
- uid: RoosterPlanner.Api.Models.ProjectDetailsViewModel.WebsiteUrl*
  name: WebsiteUrl
  href: api/RoosterPlanner.Api.Models.ProjectDetailsViewModel.html#RoosterPlanner_Api_Models_ProjectDetailsViewModel_WebsiteUrl_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectDetailsViewModel.WebsiteUrl
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectDetailsViewModel.WebsiteUrl
  nameWithType: ProjectDetailsViewModel.WebsiteUrl
- uid: RoosterPlanner.Api.Models.ProjectTaskViewModel
  name: ProjectTaskViewModel
  href: api/RoosterPlanner.Api.Models.ProjectTaskViewModel.html
  commentId: T:RoosterPlanner.Api.Models.ProjectTaskViewModel
  fullName: RoosterPlanner.Api.Models.ProjectTaskViewModel
  nameWithType: ProjectTaskViewModel
- uid: RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateProjectTask(RoosterPlanner.Api.Models.ProjectTaskViewModel)
  name: CreateProjectTask(ProjectTaskViewModel)
  href: api/RoosterPlanner.Api.Models.ProjectTaskViewModel.html#RoosterPlanner_Api_Models_ProjectTaskViewModel_CreateProjectTask_RoosterPlanner_Api_Models_ProjectTaskViewModel_
  commentId: M:RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateProjectTask(RoosterPlanner.Api.Models.ProjectTaskViewModel)
  fullName: RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateProjectTask(RoosterPlanner.Api.Models.ProjectTaskViewModel)
  nameWithType: ProjectTaskViewModel.CreateProjectTask(ProjectTaskViewModel)
- uid: RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateProjectTask*
  name: CreateProjectTask
  href: api/RoosterPlanner.Api.Models.ProjectTaskViewModel.html#RoosterPlanner_Api_Models_ProjectTaskViewModel_CreateProjectTask_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateProjectTask
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateProjectTask
  nameWithType: ProjectTaskViewModel.CreateProjectTask
- uid: RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateVm(RoosterPlanner.Models.ProjectTask)
  name: CreateVm(ProjectTask)
  href: api/RoosterPlanner.Api.Models.ProjectTaskViewModel.html#RoosterPlanner_Api_Models_ProjectTaskViewModel_CreateVm_RoosterPlanner_Models_ProjectTask_
  commentId: M:RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateVm(RoosterPlanner.Models.ProjectTask)
  fullName: RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateVm(RoosterPlanner.Models.ProjectTask)
  nameWithType: ProjectTaskViewModel.CreateVm(ProjectTask)
- uid: RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.ProjectTaskViewModel.html#RoosterPlanner_Api_Models_ProjectTaskViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectTaskViewModel.CreateVm
  nameWithType: ProjectTaskViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.ProjectTaskViewModel.ProjectId
  name: ProjectId
  href: api/RoosterPlanner.Api.Models.ProjectTaskViewModel.html#RoosterPlanner_Api_Models_ProjectTaskViewModel_ProjectId
  commentId: P:RoosterPlanner.Api.Models.ProjectTaskViewModel.ProjectId
  fullName: RoosterPlanner.Api.Models.ProjectTaskViewModel.ProjectId
  nameWithType: ProjectTaskViewModel.ProjectId
- uid: RoosterPlanner.Api.Models.ProjectTaskViewModel.ProjectId*
  name: ProjectId
  href: api/RoosterPlanner.Api.Models.ProjectTaskViewModel.html#RoosterPlanner_Api_Models_ProjectTaskViewModel_ProjectId_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectTaskViewModel.ProjectId
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectTaskViewModel.ProjectId
  nameWithType: ProjectTaskViewModel.ProjectId
- uid: RoosterPlanner.Api.Models.ProjectTaskViewModel.TaskId
  name: TaskId
  href: api/RoosterPlanner.Api.Models.ProjectTaskViewModel.html#RoosterPlanner_Api_Models_ProjectTaskViewModel_TaskId
  commentId: P:RoosterPlanner.Api.Models.ProjectTaskViewModel.TaskId
  fullName: RoosterPlanner.Api.Models.ProjectTaskViewModel.TaskId
  nameWithType: ProjectTaskViewModel.TaskId
- uid: RoosterPlanner.Api.Models.ProjectTaskViewModel.TaskId*
  name: TaskId
  href: api/RoosterPlanner.Api.Models.ProjectTaskViewModel.html#RoosterPlanner_Api_Models_ProjectTaskViewModel_TaskId_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectTaskViewModel.TaskId
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectTaskViewModel.TaskId
  nameWithType: ProjectTaskViewModel.TaskId
- uid: RoosterPlanner.Api.Models.ProjectViewModel
  name: ProjectViewModel
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html
  commentId: T:RoosterPlanner.Api.Models.ProjectViewModel
  fullName: RoosterPlanner.Api.Models.ProjectViewModel
  nameWithType: ProjectViewModel
- uid: RoosterPlanner.Api.Models.ProjectViewModel.Closed
  name: Closed
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_Closed
  commentId: P:RoosterPlanner.Api.Models.ProjectViewModel.Closed
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.Closed
  nameWithType: ProjectViewModel.Closed
- uid: RoosterPlanner.Api.Models.ProjectViewModel.Closed*
  name: Closed
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_Closed_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectViewModel.Closed
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.Closed
  nameWithType: ProjectViewModel.Closed
- uid: RoosterPlanner.Api.Models.ProjectViewModel.CreateVm(RoosterPlanner.Models.Project)
  name: CreateVm(Project)
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_CreateVm_RoosterPlanner_Models_Project_
  commentId: M:RoosterPlanner.Api.Models.ProjectViewModel.CreateVm(RoosterPlanner.Models.Project)
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.CreateVm(RoosterPlanner.Models.Project)
  nameWithType: ProjectViewModel.CreateVm(Project)
- uid: RoosterPlanner.Api.Models.ProjectViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.CreateVm
  nameWithType: ProjectViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.ProjectViewModel.Name
  name: Name
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_Name
  commentId: P:RoosterPlanner.Api.Models.ProjectViewModel.Name
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.Name
  nameWithType: ProjectViewModel.Name
- uid: RoosterPlanner.Api.Models.ProjectViewModel.Name*
  name: Name
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_Name_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectViewModel.Name
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.Name
  nameWithType: ProjectViewModel.Name
- uid: RoosterPlanner.Api.Models.ProjectViewModel.ParticipationEndDate
  name: ParticipationEndDate
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_ParticipationEndDate
  commentId: P:RoosterPlanner.Api.Models.ProjectViewModel.ParticipationEndDate
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.ParticipationEndDate
  nameWithType: ProjectViewModel.ParticipationEndDate
- uid: RoosterPlanner.Api.Models.ProjectViewModel.ParticipationEndDate*
  name: ParticipationEndDate
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_ParticipationEndDate_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectViewModel.ParticipationEndDate
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.ParticipationEndDate
  nameWithType: ProjectViewModel.ParticipationEndDate
- uid: RoosterPlanner.Api.Models.ProjectViewModel.ParticipationStartDate
  name: ParticipationStartDate
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_ParticipationStartDate
  commentId: P:RoosterPlanner.Api.Models.ProjectViewModel.ParticipationStartDate
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.ParticipationStartDate
  nameWithType: ProjectViewModel.ParticipationStartDate
- uid: RoosterPlanner.Api.Models.ProjectViewModel.ParticipationStartDate*
  name: ParticipationStartDate
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_ParticipationStartDate_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectViewModel.ParticipationStartDate
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.ParticipationStartDate
  nameWithType: ProjectViewModel.ParticipationStartDate
- uid: RoosterPlanner.Api.Models.ProjectViewModel.ProjectEndDate
  name: ProjectEndDate
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_ProjectEndDate
  commentId: P:RoosterPlanner.Api.Models.ProjectViewModel.ProjectEndDate
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.ProjectEndDate
  nameWithType: ProjectViewModel.ProjectEndDate
- uid: RoosterPlanner.Api.Models.ProjectViewModel.ProjectEndDate*
  name: ProjectEndDate
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_ProjectEndDate_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectViewModel.ProjectEndDate
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.ProjectEndDate
  nameWithType: ProjectViewModel.ProjectEndDate
- uid: RoosterPlanner.Api.Models.ProjectViewModel.ProjectStartDate
  name: ProjectStartDate
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_ProjectStartDate
  commentId: P:RoosterPlanner.Api.Models.ProjectViewModel.ProjectStartDate
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.ProjectStartDate
  nameWithType: ProjectViewModel.ProjectStartDate
- uid: RoosterPlanner.Api.Models.ProjectViewModel.ProjectStartDate*
  name: ProjectStartDate
  href: api/RoosterPlanner.Api.Models.ProjectViewModel.html#RoosterPlanner_Api_Models_ProjectViewModel_ProjectStartDate_
  commentId: Overload:RoosterPlanner.Api.Models.ProjectViewModel.ProjectStartDate
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ProjectViewModel.ProjectStartDate
  nameWithType: ProjectViewModel.ProjectStartDate
- uid: RoosterPlanner.Api.Models.RequirementViewModel
  name: RequirementViewModel
  href: api/RoosterPlanner.Api.Models.RequirementViewModel.html
  commentId: T:RoosterPlanner.Api.Models.RequirementViewModel
  fullName: RoosterPlanner.Api.Models.RequirementViewModel
  nameWithType: RequirementViewModel
- uid: RoosterPlanner.Api.Models.RequirementViewModel.CertificateType
  name: CertificateType
  href: api/RoosterPlanner.Api.Models.RequirementViewModel.html#RoosterPlanner_Api_Models_RequirementViewModel_CertificateType
  commentId: P:RoosterPlanner.Api.Models.RequirementViewModel.CertificateType
  fullName: RoosterPlanner.Api.Models.RequirementViewModel.CertificateType
  nameWithType: RequirementViewModel.CertificateType
- uid: RoosterPlanner.Api.Models.RequirementViewModel.CertificateType*
  name: CertificateType
  href: api/RoosterPlanner.Api.Models.RequirementViewModel.html#RoosterPlanner_Api_Models_RequirementViewModel_CertificateType_
  commentId: Overload:RoosterPlanner.Api.Models.RequirementViewModel.CertificateType
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.RequirementViewModel.CertificateType
  nameWithType: RequirementViewModel.CertificateType
- uid: RoosterPlanner.Api.Models.RequirementViewModel.CreateRequirement(RoosterPlanner.Api.Models.RequirementViewModel)
  name: CreateRequirement(RequirementViewModel)
  href: api/RoosterPlanner.Api.Models.RequirementViewModel.html#RoosterPlanner_Api_Models_RequirementViewModel_CreateRequirement_RoosterPlanner_Api_Models_RequirementViewModel_
  commentId: M:RoosterPlanner.Api.Models.RequirementViewModel.CreateRequirement(RoosterPlanner.Api.Models.RequirementViewModel)
  fullName: RoosterPlanner.Api.Models.RequirementViewModel.CreateRequirement(RoosterPlanner.Api.Models.RequirementViewModel)
  nameWithType: RequirementViewModel.CreateRequirement(RequirementViewModel)
- uid: RoosterPlanner.Api.Models.RequirementViewModel.CreateRequirement*
  name: CreateRequirement
  href: api/RoosterPlanner.Api.Models.RequirementViewModel.html#RoosterPlanner_Api_Models_RequirementViewModel_CreateRequirement_
  commentId: Overload:RoosterPlanner.Api.Models.RequirementViewModel.CreateRequirement
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.RequirementViewModel.CreateRequirement
  nameWithType: RequirementViewModel.CreateRequirement
- uid: RoosterPlanner.Api.Models.RequirementViewModel.CreateVm(RoosterPlanner.Models.Requirement)
  name: CreateVm(Requirement)
  href: api/RoosterPlanner.Api.Models.RequirementViewModel.html#RoosterPlanner_Api_Models_RequirementViewModel_CreateVm_RoosterPlanner_Models_Requirement_
  commentId: M:RoosterPlanner.Api.Models.RequirementViewModel.CreateVm(RoosterPlanner.Models.Requirement)
  fullName: RoosterPlanner.Api.Models.RequirementViewModel.CreateVm(RoosterPlanner.Models.Requirement)
  nameWithType: RequirementViewModel.CreateVm(Requirement)
- uid: RoosterPlanner.Api.Models.RequirementViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.RequirementViewModel.html#RoosterPlanner_Api_Models_RequirementViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.RequirementViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.RequirementViewModel.CreateVm
  nameWithType: RequirementViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.RequirementViewModel.Task
  name: Task
  href: api/RoosterPlanner.Api.Models.RequirementViewModel.html#RoosterPlanner_Api_Models_RequirementViewModel_Task
  commentId: P:RoosterPlanner.Api.Models.RequirementViewModel.Task
  fullName: RoosterPlanner.Api.Models.RequirementViewModel.Task
  nameWithType: RequirementViewModel.Task
- uid: RoosterPlanner.Api.Models.RequirementViewModel.Task*
  name: Task
  href: api/RoosterPlanner.Api.Models.RequirementViewModel.html#RoosterPlanner_Api_Models_RequirementViewModel_Task_
  commentId: Overload:RoosterPlanner.Api.Models.RequirementViewModel.Task
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.RequirementViewModel.Task
  nameWithType: RequirementViewModel.Task
- uid: RoosterPlanner.Api.Models.Schedule
  name: Schedule
  href: api/RoosterPlanner.Api.Models.Schedule.html
  commentId: T:RoosterPlanner.Api.Models.Schedule
  fullName: RoosterPlanner.Api.Models.Schedule
  nameWithType: Schedule
- uid: RoosterPlanner.Api.Models.Schedule.#ctor(System.DateTime,RoosterPlanner.Models.Models.Enums.AvailabilityStatus)
  name: Schedule(DateTime, AvailabilityStatus)
  href: api/RoosterPlanner.Api.Models.Schedule.html#RoosterPlanner_Api_Models_Schedule__ctor_System_DateTime_RoosterPlanner_Models_Models_Enums_AvailabilityStatus_
  commentId: M:RoosterPlanner.Api.Models.Schedule.#ctor(System.DateTime,RoosterPlanner.Models.Models.Enums.AvailabilityStatus)
  fullName: RoosterPlanner.Api.Models.Schedule.Schedule(System.DateTime, RoosterPlanner.Models.Models.Enums.AvailabilityStatus)
  nameWithType: Schedule.Schedule(DateTime, AvailabilityStatus)
- uid: RoosterPlanner.Api.Models.Schedule.#ctor*
  name: Schedule
  href: api/RoosterPlanner.Api.Models.Schedule.html#RoosterPlanner_Api_Models_Schedule__ctor_
  commentId: Overload:RoosterPlanner.Api.Models.Schedule.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Schedule.Schedule
  nameWithType: Schedule.Schedule
- uid: RoosterPlanner.Api.Models.Schedule.Date
  name: Date
  href: api/RoosterPlanner.Api.Models.Schedule.html#RoosterPlanner_Api_Models_Schedule_Date
  commentId: P:RoosterPlanner.Api.Models.Schedule.Date
  fullName: RoosterPlanner.Api.Models.Schedule.Date
  nameWithType: Schedule.Date
- uid: RoosterPlanner.Api.Models.Schedule.Date*
  name: Date
  href: api/RoosterPlanner.Api.Models.Schedule.html#RoosterPlanner_Api_Models_Schedule_Date_
  commentId: Overload:RoosterPlanner.Api.Models.Schedule.Date
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Schedule.Date
  nameWithType: Schedule.Date
- uid: RoosterPlanner.Api.Models.Schedule.Status
  name: Status
  href: api/RoosterPlanner.Api.Models.Schedule.html#RoosterPlanner_Api_Models_Schedule_Status
  commentId: P:RoosterPlanner.Api.Models.Schedule.Status
  fullName: RoosterPlanner.Api.Models.Schedule.Status
  nameWithType: Schedule.Status
- uid: RoosterPlanner.Api.Models.Schedule.Status*
  name: Status
  href: api/RoosterPlanner.Api.Models.Schedule.html#RoosterPlanner_Api_Models_Schedule_Status_
  commentId: Overload:RoosterPlanner.Api.Models.Schedule.Status
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.Schedule.Status
  nameWithType: Schedule.Status
- uid: RoosterPlanner.Api.Models.ScheduleDataViewModel
  name: ScheduleDataViewModel
  href: api/RoosterPlanner.Api.Models.ScheduleDataViewModel.html
  commentId: T:RoosterPlanner.Api.Models.ScheduleDataViewModel
  fullName: RoosterPlanner.Api.Models.ScheduleDataViewModel
  nameWithType: ScheduleDataViewModel
- uid: RoosterPlanner.Api.Models.ScheduleDataViewModel.Schedules
  name: Schedules
  href: api/RoosterPlanner.Api.Models.ScheduleDataViewModel.html#RoosterPlanner_Api_Models_ScheduleDataViewModel_Schedules
  commentId: P:RoosterPlanner.Api.Models.ScheduleDataViewModel.Schedules
  fullName: RoosterPlanner.Api.Models.ScheduleDataViewModel.Schedules
  nameWithType: ScheduleDataViewModel.Schedules
- uid: RoosterPlanner.Api.Models.ScheduleDataViewModel.Schedules*
  name: Schedules
  href: api/RoosterPlanner.Api.Models.ScheduleDataViewModel.html#RoosterPlanner_Api_Models_ScheduleDataViewModel_Schedules_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleDataViewModel.Schedules
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleDataViewModel.Schedules
  nameWithType: ScheduleDataViewModel.Schedules
- uid: RoosterPlanner.Api.Models.ScheduleDataViewModel.Shift
  name: Shift
  href: api/RoosterPlanner.Api.Models.ScheduleDataViewModel.html#RoosterPlanner_Api_Models_ScheduleDataViewModel_Shift
  commentId: P:RoosterPlanner.Api.Models.ScheduleDataViewModel.Shift
  fullName: RoosterPlanner.Api.Models.ScheduleDataViewModel.Shift
  nameWithType: ScheduleDataViewModel.Shift
- uid: RoosterPlanner.Api.Models.ScheduleDataViewModel.Shift*
  name: Shift
  href: api/RoosterPlanner.Api.Models.ScheduleDataViewModel.html#RoosterPlanner_Api_Models_ScheduleDataViewModel_Shift_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleDataViewModel.Shift
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleDataViewModel.Shift
  nameWithType: ScheduleDataViewModel.Shift
- uid: RoosterPlanner.Api.Models.ScheduleViewModel
  name: ScheduleViewModel
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html
  commentId: T:RoosterPlanner.Api.Models.ScheduleViewModel
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel
  nameWithType: ScheduleViewModel
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.Availabilities
  name: Availabilities
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_Availabilities
  commentId: P:RoosterPlanner.Api.Models.ScheduleViewModel.Availabilities
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.Availabilities
  nameWithType: ScheduleViewModel.Availabilities
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.Availabilities*
  name: Availabilities
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_Availabilities_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleViewModel.Availabilities
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.Availabilities
  nameWithType: ScheduleViewModel.Availabilities
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.AvailabilityId
  name: AvailabilityId
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_AvailabilityId
  commentId: P:RoosterPlanner.Api.Models.ScheduleViewModel.AvailabilityId
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.AvailabilityId
  nameWithType: ScheduleViewModel.AvailabilityId
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.AvailabilityId*
  name: AvailabilityId
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_AvailabilityId_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleViewModel.AvailabilityId
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.AvailabilityId
  nameWithType: ScheduleViewModel.AvailabilityId
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.Employability
  name: Employability
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_Employability
  commentId: P:RoosterPlanner.Api.Models.ScheduleViewModel.Employability
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.Employability
  nameWithType: ScheduleViewModel.Employability
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.Employability*
  name: Employability
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_Employability_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleViewModel.Employability
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.Employability
  nameWithType: ScheduleViewModel.Employability
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.HoursScheduledThisWeek
  name: HoursScheduledThisWeek
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_HoursScheduledThisWeek
  commentId: P:RoosterPlanner.Api.Models.ScheduleViewModel.HoursScheduledThisWeek
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.HoursScheduledThisWeek
  nameWithType: ScheduleViewModel.HoursScheduledThisWeek
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.HoursScheduledThisWeek*
  name: HoursScheduledThisWeek
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_HoursScheduledThisWeek_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleViewModel.HoursScheduledThisWeek
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.HoursScheduledThisWeek
  nameWithType: ScheduleViewModel.HoursScheduledThisWeek
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.NumberOfTimesScheduledThisProject
  name: NumberOfTimesScheduledThisProject
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_NumberOfTimesScheduledThisProject
  commentId: P:RoosterPlanner.Api.Models.ScheduleViewModel.NumberOfTimesScheduledThisProject
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.NumberOfTimesScheduledThisProject
  nameWithType: ScheduleViewModel.NumberOfTimesScheduledThisProject
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.NumberOfTimesScheduledThisProject*
  name: NumberOfTimesScheduledThisProject
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_NumberOfTimesScheduledThisProject_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleViewModel.NumberOfTimesScheduledThisProject
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.NumberOfTimesScheduledThisProject
  nameWithType: ScheduleViewModel.NumberOfTimesScheduledThisProject
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.Person
  name: Person
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_Person
  commentId: P:RoosterPlanner.Api.Models.ScheduleViewModel.Person
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.Person
  nameWithType: ScheduleViewModel.Person
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.Person*
  name: Person
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_Person_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleViewModel.Person
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.Person
  nameWithType: ScheduleViewModel.Person
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.Preference
  name: Preference
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_Preference
  commentId: P:RoosterPlanner.Api.Models.ScheduleViewModel.Preference
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.Preference
  nameWithType: ScheduleViewModel.Preference
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.Preference*
  name: Preference
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_Preference_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleViewModel.Preference
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.Preference
  nameWithType: ScheduleViewModel.Preference
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisDay
  name: ScheduledThisDay
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_ScheduledThisDay
  commentId: P:RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisDay
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisDay
  nameWithType: ScheduleViewModel.ScheduledThisDay
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisDay*
  name: ScheduledThisDay
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_ScheduledThisDay_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisDay
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisDay
  nameWithType: ScheduleViewModel.ScheduledThisDay
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisShift
  name: ScheduledThisShift
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_ScheduledThisShift
  commentId: P:RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisShift
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisShift
  nameWithType: ScheduleViewModel.ScheduledThisShift
- uid: RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisShift*
  name: ScheduledThisShift
  href: api/RoosterPlanner.Api.Models.ScheduleViewModel.html#RoosterPlanner_Api_Models_ScheduleViewModel_ScheduledThisShift_
  commentId: Overload:RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisShift
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ScheduleViewModel.ScheduledThisShift
  nameWithType: ScheduleViewModel.ScheduledThisShift
- uid: RoosterPlanner.Api.Models.SearchResultViewModel`1
  name: SearchResultViewModel<T>
  href: api/RoosterPlanner.Api.Models.SearchResultViewModel-1.html
  commentId: T:RoosterPlanner.Api.Models.SearchResultViewModel`1
  name.vb: SearchResultViewModel(Of T)
  fullName: RoosterPlanner.Api.Models.SearchResultViewModel<T>
  fullName.vb: RoosterPlanner.Api.Models.SearchResultViewModel(Of T)
  nameWithType: SearchResultViewModel<T>
  nameWithType.vb: SearchResultViewModel(Of T)
- uid: RoosterPlanner.Api.Models.SearchResultViewModel`1.#ctor(System.Int32,System.Collections.Generic.List{`0})
  name: SearchResultViewModel(Int32, List<T>)
  href: api/RoosterPlanner.Api.Models.SearchResultViewModel-1.html#RoosterPlanner_Api_Models_SearchResultViewModel_1__ctor_System_Int32_System_Collections_Generic_List__0__
  commentId: M:RoosterPlanner.Api.Models.SearchResultViewModel`1.#ctor(System.Int32,System.Collections.Generic.List{`0})
  name.vb: SearchResultViewModel(Int32, List(Of T))
  fullName: RoosterPlanner.Api.Models.SearchResultViewModel<T>.SearchResultViewModel(System.Int32, System.Collections.Generic.List<T>)
  fullName.vb: RoosterPlanner.Api.Models.SearchResultViewModel(Of T).SearchResultViewModel(System.Int32, System.Collections.Generic.List(Of T))
  nameWithType: SearchResultViewModel<T>.SearchResultViewModel(Int32, List<T>)
  nameWithType.vb: SearchResultViewModel(Of T).SearchResultViewModel(Int32, List(Of T))
- uid: RoosterPlanner.Api.Models.SearchResultViewModel`1.#ctor*
  name: SearchResultViewModel
  href: api/RoosterPlanner.Api.Models.SearchResultViewModel-1.html#RoosterPlanner_Api_Models_SearchResultViewModel_1__ctor_
  commentId: Overload:RoosterPlanner.Api.Models.SearchResultViewModel`1.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.SearchResultViewModel<T>.SearchResultViewModel
  fullName.vb: RoosterPlanner.Api.Models.SearchResultViewModel(Of T).SearchResultViewModel
  nameWithType: SearchResultViewModel<T>.SearchResultViewModel
  nameWithType.vb: SearchResultViewModel(Of T).SearchResultViewModel
- uid: RoosterPlanner.Api.Models.SearchResultViewModel`1.ResultList
  name: ResultList
  href: api/RoosterPlanner.Api.Models.SearchResultViewModel-1.html#RoosterPlanner_Api_Models_SearchResultViewModel_1_ResultList
  commentId: P:RoosterPlanner.Api.Models.SearchResultViewModel`1.ResultList
  fullName: RoosterPlanner.Api.Models.SearchResultViewModel<T>.ResultList
  fullName.vb: RoosterPlanner.Api.Models.SearchResultViewModel(Of T).ResultList
  nameWithType: SearchResultViewModel<T>.ResultList
  nameWithType.vb: SearchResultViewModel(Of T).ResultList
- uid: RoosterPlanner.Api.Models.SearchResultViewModel`1.ResultList*
  name: ResultList
  href: api/RoosterPlanner.Api.Models.SearchResultViewModel-1.html#RoosterPlanner_Api_Models_SearchResultViewModel_1_ResultList_
  commentId: Overload:RoosterPlanner.Api.Models.SearchResultViewModel`1.ResultList
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.SearchResultViewModel<T>.ResultList
  fullName.vb: RoosterPlanner.Api.Models.SearchResultViewModel(Of T).ResultList
  nameWithType: SearchResultViewModel<T>.ResultList
  nameWithType.vb: SearchResultViewModel(Of T).ResultList
- uid: RoosterPlanner.Api.Models.SearchResultViewModel`1.Totalcount
  name: Totalcount
  href: api/RoosterPlanner.Api.Models.SearchResultViewModel-1.html#RoosterPlanner_Api_Models_SearchResultViewModel_1_Totalcount
  commentId: P:RoosterPlanner.Api.Models.SearchResultViewModel`1.Totalcount
  fullName: RoosterPlanner.Api.Models.SearchResultViewModel<T>.Totalcount
  fullName.vb: RoosterPlanner.Api.Models.SearchResultViewModel(Of T).Totalcount
  nameWithType: SearchResultViewModel<T>.Totalcount
  nameWithType.vb: SearchResultViewModel(Of T).Totalcount
- uid: RoosterPlanner.Api.Models.SearchResultViewModel`1.Totalcount*
  name: Totalcount
  href: api/RoosterPlanner.Api.Models.SearchResultViewModel-1.html#RoosterPlanner_Api_Models_SearchResultViewModel_1_Totalcount_
  commentId: Overload:RoosterPlanner.Api.Models.SearchResultViewModel`1.Totalcount
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.SearchResultViewModel<T>.Totalcount
  fullName.vb: RoosterPlanner.Api.Models.SearchResultViewModel(Of T).Totalcount
  nameWithType: SearchResultViewModel<T>.Totalcount
  nameWithType.vb: SearchResultViewModel(Of T).Totalcount
- uid: RoosterPlanner.Api.Models.ShiftViewModel
  name: ShiftViewModel
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html
  commentId: T:RoosterPlanner.Api.Models.ShiftViewModel
  fullName: RoosterPlanner.Api.Models.ShiftViewModel
  nameWithType: ShiftViewModel
- uid: RoosterPlanner.Api.Models.ShiftViewModel.Availabilities
  name: Availabilities
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_Availabilities
  commentId: P:RoosterPlanner.Api.Models.ShiftViewModel.Availabilities
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.Availabilities
  nameWithType: ShiftViewModel.Availabilities
- uid: RoosterPlanner.Api.Models.ShiftViewModel.Availabilities*
  name: Availabilities
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_Availabilities_
  commentId: Overload:RoosterPlanner.Api.Models.ShiftViewModel.Availabilities
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.Availabilities
  nameWithType: ShiftViewModel.Availabilities
- uid: RoosterPlanner.Api.Models.ShiftViewModel.CreateShift(RoosterPlanner.Api.Models.ShiftViewModel)
  name: CreateShift(ShiftViewModel)
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_CreateShift_RoosterPlanner_Api_Models_ShiftViewModel_
  commentId: M:RoosterPlanner.Api.Models.ShiftViewModel.CreateShift(RoosterPlanner.Api.Models.ShiftViewModel)
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.CreateShift(RoosterPlanner.Api.Models.ShiftViewModel)
  nameWithType: ShiftViewModel.CreateShift(ShiftViewModel)
- uid: RoosterPlanner.Api.Models.ShiftViewModel.CreateShift*
  name: CreateShift
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_CreateShift_
  commentId: Overload:RoosterPlanner.Api.Models.ShiftViewModel.CreateShift
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.CreateShift
  nameWithType: ShiftViewModel.CreateShift
- uid: RoosterPlanner.Api.Models.ShiftViewModel.CreateVm(RoosterPlanner.Models.Shift)
  name: CreateVm(Shift)
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_CreateVm_RoosterPlanner_Models_Shift_
  commentId: M:RoosterPlanner.Api.Models.ShiftViewModel.CreateVm(RoosterPlanner.Models.Shift)
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.CreateVm(RoosterPlanner.Models.Shift)
  nameWithType: ShiftViewModel.CreateVm(Shift)
- uid: RoosterPlanner.Api.Models.ShiftViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.ShiftViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.CreateVm
  nameWithType: ShiftViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.ShiftViewModel.Date
  name: Date
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_Date
  commentId: P:RoosterPlanner.Api.Models.ShiftViewModel.Date
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.Date
  nameWithType: ShiftViewModel.Date
- uid: RoosterPlanner.Api.Models.ShiftViewModel.Date*
  name: Date
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_Date_
  commentId: Overload:RoosterPlanner.Api.Models.ShiftViewModel.Date
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.Date
  nameWithType: ShiftViewModel.Date
- uid: RoosterPlanner.Api.Models.ShiftViewModel.EndTime
  name: EndTime
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_EndTime
  commentId: P:RoosterPlanner.Api.Models.ShiftViewModel.EndTime
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.EndTime
  nameWithType: ShiftViewModel.EndTime
- uid: RoosterPlanner.Api.Models.ShiftViewModel.EndTime*
  name: EndTime
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_EndTime_
  commentId: Overload:RoosterPlanner.Api.Models.ShiftViewModel.EndTime
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.EndTime
  nameWithType: ShiftViewModel.EndTime
- uid: RoosterPlanner.Api.Models.ShiftViewModel.ParticipantsRequired
  name: ParticipantsRequired
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_ParticipantsRequired
  commentId: P:RoosterPlanner.Api.Models.ShiftViewModel.ParticipantsRequired
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.ParticipantsRequired
  nameWithType: ShiftViewModel.ParticipantsRequired
- uid: RoosterPlanner.Api.Models.ShiftViewModel.ParticipantsRequired*
  name: ParticipantsRequired
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_ParticipantsRequired_
  commentId: Overload:RoosterPlanner.Api.Models.ShiftViewModel.ParticipantsRequired
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.ParticipantsRequired
  nameWithType: ShiftViewModel.ParticipantsRequired
- uid: RoosterPlanner.Api.Models.ShiftViewModel.Project
  name: Project
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_Project
  commentId: P:RoosterPlanner.Api.Models.ShiftViewModel.Project
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.Project
  nameWithType: ShiftViewModel.Project
- uid: RoosterPlanner.Api.Models.ShiftViewModel.Project*
  name: Project
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_Project_
  commentId: Overload:RoosterPlanner.Api.Models.ShiftViewModel.Project
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.Project
  nameWithType: ShiftViewModel.Project
- uid: RoosterPlanner.Api.Models.ShiftViewModel.StartTime
  name: StartTime
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_StartTime
  commentId: P:RoosterPlanner.Api.Models.ShiftViewModel.StartTime
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.StartTime
  nameWithType: ShiftViewModel.StartTime
- uid: RoosterPlanner.Api.Models.ShiftViewModel.StartTime*
  name: StartTime
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_StartTime_
  commentId: Overload:RoosterPlanner.Api.Models.ShiftViewModel.StartTime
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.StartTime
  nameWithType: ShiftViewModel.StartTime
- uid: RoosterPlanner.Api.Models.ShiftViewModel.Task
  name: Task
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_Task
  commentId: P:RoosterPlanner.Api.Models.ShiftViewModel.Task
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.Task
  nameWithType: ShiftViewModel.Task
- uid: RoosterPlanner.Api.Models.ShiftViewModel.Task*
  name: Task
  href: api/RoosterPlanner.Api.Models.ShiftViewModel.html#RoosterPlanner_Api_Models_ShiftViewModel_Task_
  commentId: Overload:RoosterPlanner.Api.Models.ShiftViewModel.Task
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.ShiftViewModel.Task
  nameWithType: ShiftViewModel.Task
- uid: RoosterPlanner.Api.Models.TaskViewModel
  name: TaskViewModel
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html
  commentId: T:RoosterPlanner.Api.Models.TaskViewModel
  fullName: RoosterPlanner.Api.Models.TaskViewModel
  nameWithType: TaskViewModel
- uid: RoosterPlanner.Api.Models.TaskViewModel.Category
  name: Category
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Category
  commentId: P:RoosterPlanner.Api.Models.TaskViewModel.Category
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Category
  nameWithType: TaskViewModel.Category
- uid: RoosterPlanner.Api.Models.TaskViewModel.Category*
  name: Category
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Category_
  commentId: Overload:RoosterPlanner.Api.Models.TaskViewModel.Category
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Category
  nameWithType: TaskViewModel.Category
- uid: RoosterPlanner.Api.Models.TaskViewModel.Color
  name: Color
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Color
  commentId: P:RoosterPlanner.Api.Models.TaskViewModel.Color
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Color
  nameWithType: TaskViewModel.Color
- uid: RoosterPlanner.Api.Models.TaskViewModel.Color*
  name: Color
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Color_
  commentId: Overload:RoosterPlanner.Api.Models.TaskViewModel.Color
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Color
  nameWithType: TaskViewModel.Color
- uid: RoosterPlanner.Api.Models.TaskViewModel.CreateTask(RoosterPlanner.Api.Models.TaskViewModel)
  name: CreateTask(TaskViewModel)
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_CreateTask_RoosterPlanner_Api_Models_TaskViewModel_
  commentId: M:RoosterPlanner.Api.Models.TaskViewModel.CreateTask(RoosterPlanner.Api.Models.TaskViewModel)
  fullName: RoosterPlanner.Api.Models.TaskViewModel.CreateTask(RoosterPlanner.Api.Models.TaskViewModel)
  nameWithType: TaskViewModel.CreateTask(TaskViewModel)
- uid: RoosterPlanner.Api.Models.TaskViewModel.CreateTask*
  name: CreateTask
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_CreateTask_
  commentId: Overload:RoosterPlanner.Api.Models.TaskViewModel.CreateTask
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.TaskViewModel.CreateTask
  nameWithType: TaskViewModel.CreateTask
- uid: RoosterPlanner.Api.Models.TaskViewModel.CreateVm(RoosterPlanner.Models.Task)
  name: CreateVm(Task)
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_CreateVm_RoosterPlanner_Models_Task_
  commentId: M:RoosterPlanner.Api.Models.TaskViewModel.CreateVm(RoosterPlanner.Models.Task)
  fullName: RoosterPlanner.Api.Models.TaskViewModel.CreateVm(RoosterPlanner.Models.Task)
  nameWithType: TaskViewModel.CreateVm(Task)
- uid: RoosterPlanner.Api.Models.TaskViewModel.CreateVm*
  name: CreateVm
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_CreateVm_
  commentId: Overload:RoosterPlanner.Api.Models.TaskViewModel.CreateVm
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.TaskViewModel.CreateVm
  nameWithType: TaskViewModel.CreateVm
- uid: RoosterPlanner.Api.Models.TaskViewModel.Description
  name: Description
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Description
  commentId: P:RoosterPlanner.Api.Models.TaskViewModel.Description
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Description
  nameWithType: TaskViewModel.Description
- uid: RoosterPlanner.Api.Models.TaskViewModel.Description*
  name: Description
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Description_
  commentId: Overload:RoosterPlanner.Api.Models.TaskViewModel.Description
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Description
  nameWithType: TaskViewModel.Description
- uid: RoosterPlanner.Api.Models.TaskViewModel.Instruction
  name: Instruction
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Instruction
  commentId: P:RoosterPlanner.Api.Models.TaskViewModel.Instruction
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Instruction
  nameWithType: TaskViewModel.Instruction
- uid: RoosterPlanner.Api.Models.TaskViewModel.Instruction*
  name: Instruction
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Instruction_
  commentId: Overload:RoosterPlanner.Api.Models.TaskViewModel.Instruction
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Instruction
  nameWithType: TaskViewModel.Instruction
- uid: RoosterPlanner.Api.Models.TaskViewModel.Name
  name: Name
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Name
  commentId: P:RoosterPlanner.Api.Models.TaskViewModel.Name
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Name
  nameWithType: TaskViewModel.Name
- uid: RoosterPlanner.Api.Models.TaskViewModel.Name*
  name: Name
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Name_
  commentId: Overload:RoosterPlanner.Api.Models.TaskViewModel.Name
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Name
  nameWithType: TaskViewModel.Name
- uid: RoosterPlanner.Api.Models.TaskViewModel.Requirements
  name: Requirements
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Requirements
  commentId: P:RoosterPlanner.Api.Models.TaskViewModel.Requirements
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Requirements
  nameWithType: TaskViewModel.Requirements
- uid: RoosterPlanner.Api.Models.TaskViewModel.Requirements*
  name: Requirements
  href: api/RoosterPlanner.Api.Models.TaskViewModel.html#RoosterPlanner_Api_Models_TaskViewModel_Requirements_
  commentId: Overload:RoosterPlanner.Api.Models.TaskViewModel.Requirements
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.TaskViewModel.Requirements
  nameWithType: TaskViewModel.Requirements
- uid: RoosterPlanner.Api.Models.Type
  name: Type
  href: api/RoosterPlanner.Api.Models.Type.html
  commentId: T:RoosterPlanner.Api.Models.Type
  fullName: RoosterPlanner.Api.Models.Type
  nameWithType: Type
- uid: RoosterPlanner.Api.Models.Type.Error
  name: Error
  href: api/RoosterPlanner.Api.Models.Type.html#RoosterPlanner_Api_Models_Type_Error
  commentId: F:RoosterPlanner.Api.Models.Type.Error
  fullName: RoosterPlanner.Api.Models.Type.Error
  nameWithType: Type.Error
- uid: RoosterPlanner.Api.Models.Type.Log
  name: Log
  href: api/RoosterPlanner.Api.Models.Type.html#RoosterPlanner_Api_Models_Type_Log
  commentId: F:RoosterPlanner.Api.Models.Type.Log
  fullName: RoosterPlanner.Api.Models.Type.Log
  nameWithType: Type.Log
- uid: RoosterPlanner.Api.Models.Type.Warning
  name: Warning
  href: api/RoosterPlanner.Api.Models.Type.html#RoosterPlanner_Api_Models_Type_Warning
  commentId: F:RoosterPlanner.Api.Models.Type.Warning
  fullName: RoosterPlanner.Api.Models.Type.Warning
  nameWithType: Type.Warning
- uid: RoosterPlanner.Api.Models.UploadResultViewModel
  name: UploadResultViewModel
  href: api/RoosterPlanner.Api.Models.UploadResultViewModel.html
  commentId: T:RoosterPlanner.Api.Models.UploadResultViewModel
  fullName: RoosterPlanner.Api.Models.UploadResultViewModel
  nameWithType: UploadResultViewModel
- uid: RoosterPlanner.Api.Models.UploadResultViewModel.Path
  name: Path
  href: api/RoosterPlanner.Api.Models.UploadResultViewModel.html#RoosterPlanner_Api_Models_UploadResultViewModel_Path
  commentId: P:RoosterPlanner.Api.Models.UploadResultViewModel.Path
  fullName: RoosterPlanner.Api.Models.UploadResultViewModel.Path
  nameWithType: UploadResultViewModel.Path
- uid: RoosterPlanner.Api.Models.UploadResultViewModel.Path*
  name: Path
  href: api/RoosterPlanner.Api.Models.UploadResultViewModel.html#RoosterPlanner_Api_Models_UploadResultViewModel_Path_
  commentId: Overload:RoosterPlanner.Api.Models.UploadResultViewModel.Path
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.UploadResultViewModel.Path
  nameWithType: UploadResultViewModel.Path
- uid: RoosterPlanner.Api.Models.UploadResultViewModel.Succeeded
  name: Succeeded
  href: api/RoosterPlanner.Api.Models.UploadResultViewModel.html#RoosterPlanner_Api_Models_UploadResultViewModel_Succeeded
  commentId: P:RoosterPlanner.Api.Models.UploadResultViewModel.Succeeded
  fullName: RoosterPlanner.Api.Models.UploadResultViewModel.Succeeded
  nameWithType: UploadResultViewModel.Succeeded
- uid: RoosterPlanner.Api.Models.UploadResultViewModel.Succeeded*
  name: Succeeded
  href: api/RoosterPlanner.Api.Models.UploadResultViewModel.html#RoosterPlanner_Api_Models_UploadResultViewModel_Succeeded_
  commentId: Overload:RoosterPlanner.Api.Models.UploadResultViewModel.Succeeded
  isSpec: "True"
  fullName: RoosterPlanner.Api.Models.UploadResultViewModel.Succeeded
  nameWithType: UploadResultViewModel.Succeeded
- uid: RoosterPlanner.Api.Program
  name: Program
  href: api/RoosterPlanner.Api.Program.html
  commentId: T:RoosterPlanner.Api.Program
  fullName: RoosterPlanner.Api.Program
  nameWithType: Program
- uid: RoosterPlanner.Api.Program.CreateHostBuilder(System.String[])
  name: CreateHostBuilder(String[])
  href: api/RoosterPlanner.Api.Program.html#RoosterPlanner_Api_Program_CreateHostBuilder_System_String___
  commentId: M:RoosterPlanner.Api.Program.CreateHostBuilder(System.String[])
  name.vb: CreateHostBuilder(String())
  fullName: RoosterPlanner.Api.Program.CreateHostBuilder(System.String[])
  fullName.vb: RoosterPlanner.Api.Program.CreateHostBuilder(System.String())
  nameWithType: Program.CreateHostBuilder(String[])
  nameWithType.vb: Program.CreateHostBuilder(String())
- uid: RoosterPlanner.Api.Program.CreateHostBuilder*
  name: CreateHostBuilder
  href: api/RoosterPlanner.Api.Program.html#RoosterPlanner_Api_Program_CreateHostBuilder_
  commentId: Overload:RoosterPlanner.Api.Program.CreateHostBuilder
  isSpec: "True"
  fullName: RoosterPlanner.Api.Program.CreateHostBuilder
  nameWithType: Program.CreateHostBuilder
- uid: RoosterPlanner.Api.Program.Main(System.String[])
  name: Main(String[])
  href: api/RoosterPlanner.Api.Program.html#RoosterPlanner_Api_Program_Main_System_String___
  commentId: M:RoosterPlanner.Api.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: RoosterPlanner.Api.Program.Main(System.String[])
  fullName.vb: RoosterPlanner.Api.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: RoosterPlanner.Api.Program.Main*
  name: Main
  href: api/RoosterPlanner.Api.Program.html#RoosterPlanner_Api_Program_Main_
  commentId: Overload:RoosterPlanner.Api.Program.Main
  isSpec: "True"
  fullName: RoosterPlanner.Api.Program.Main
  nameWithType: Program.Main
- uid: RoosterPlanner.Api.Startup
  name: Startup
  href: api/RoosterPlanner.Api.Startup.html
  commentId: T:RoosterPlanner.Api.Startup
  fullName: RoosterPlanner.Api.Startup
  nameWithType: Startup
- uid: RoosterPlanner.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  name: Startup(IConfiguration)
  href: api/RoosterPlanner.Api.Startup.html#RoosterPlanner_Api_Startup__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:RoosterPlanner.Api.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  fullName: RoosterPlanner.Api.Startup.Startup(Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: Startup.Startup(IConfiguration)
- uid: RoosterPlanner.Api.Startup.#ctor*
  name: Startup
  href: api/RoosterPlanner.Api.Startup.html#RoosterPlanner_Api_Startup__ctor_
  commentId: Overload:RoosterPlanner.Api.Startup.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Api.Startup.Startup
  nameWithType: Startup.Startup
- uid: RoosterPlanner.Api.Startup.Configuration
  name: Configuration
  href: api/RoosterPlanner.Api.Startup.html#RoosterPlanner_Api_Startup_Configuration
  commentId: P:RoosterPlanner.Api.Startup.Configuration
  fullName: RoosterPlanner.Api.Startup.Configuration
  nameWithType: Startup.Configuration
- uid: RoosterPlanner.Api.Startup.Configuration*
  name: Configuration
  href: api/RoosterPlanner.Api.Startup.html#RoosterPlanner_Api_Startup_Configuration_
  commentId: Overload:RoosterPlanner.Api.Startup.Configuration
  isSpec: "True"
  fullName: RoosterPlanner.Api.Startup.Configuration
  nameWithType: Startup.Configuration
- uid: RoosterPlanner.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment)
  name: Configure(IApplicationBuilder, IHostEnvironment)
  href: api/RoosterPlanner.Api.Startup.html#RoosterPlanner_Api_Startup_Configure_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_Extensions_Hosting_IHostEnvironment_
  commentId: M:RoosterPlanner.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.Extensions.Hosting.IHostEnvironment)
  fullName: RoosterPlanner.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.Extensions.Hosting.IHostEnvironment)
  nameWithType: Startup.Configure(IApplicationBuilder, IHostEnvironment)
- uid: RoosterPlanner.Api.Startup.Configure*
  name: Configure
  href: api/RoosterPlanner.Api.Startup.html#RoosterPlanner_Api_Startup_Configure_
  commentId: Overload:RoosterPlanner.Api.Startup.Configure
  isSpec: "True"
  fullName: RoosterPlanner.Api.Startup.Configure
  nameWithType: Startup.Configure
- uid: RoosterPlanner.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: ConfigureServices(IServiceCollection)
  href: api/RoosterPlanner.Api.Startup.html#RoosterPlanner_Api_Startup_ConfigureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:RoosterPlanner.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: RoosterPlanner.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: Startup.ConfigureServices(IServiceCollection)
- uid: RoosterPlanner.Api.Startup.ConfigureServices*
  name: ConfigureServices
  href: api/RoosterPlanner.Api.Startup.html#RoosterPlanner_Api_Startup_ConfigureServices_
  commentId: Overload:RoosterPlanner.Api.Startup.ConfigureServices
  isSpec: "True"
  fullName: RoosterPlanner.Api.Startup.ConfigureServices
  nameWithType: Startup.ConfigureServices
- uid: RoosterPlanner.Data
  name: RoosterPlanner.Data
  href: api/RoosterPlanner.Data.html
  commentId: N:RoosterPlanner.Data
  fullName: RoosterPlanner.Data
  nameWithType: RoosterPlanner.Data
- uid: RoosterPlanner.Data.Common
  name: RoosterPlanner.Data.Common
  href: api/RoosterPlanner.Data.Common.html
  commentId: N:RoosterPlanner.Data.Common
  fullName: RoosterPlanner.Data.Common
  nameWithType: RoosterPlanner.Data.Common
- uid: RoosterPlanner.Data.Common.IRepository`1
  name: IRepository<TEntity>
  href: api/RoosterPlanner.Data.Common.IRepository-1.html
  commentId: T:RoosterPlanner.Data.Common.IRepository`1
  name.vb: IRepository(Of TEntity)
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity)
  nameWithType: IRepository<TEntity>
  nameWithType.vb: IRepository(Of TEntity)
- uid: RoosterPlanner.Data.Common.IRepository`1.Add(`0)
  name: Add(TEntity)
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Add__0_
  commentId: M:RoosterPlanner.Data.Common.IRepository`1.Add(`0)
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Add(TEntity)
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Add(TEntity)
  nameWithType: IRepository<TEntity>.Add(TEntity)
  nameWithType.vb: IRepository(Of TEntity).Add(TEntity)
- uid: RoosterPlanner.Data.Common.IRepository`1.Add*
  name: Add
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Add_
  commentId: Overload:RoosterPlanner.Data.Common.IRepository`1.Add
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Add
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Add
  nameWithType: IRepository<TEntity>.Add
  nameWithType.vb: IRepository(Of TEntity).Add
- uid: RoosterPlanner.Data.Common.IRepository`1.AddOrUpdate(`0)
  name: AddOrUpdate(TEntity)
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_AddOrUpdate__0_
  commentId: M:RoosterPlanner.Data.Common.IRepository`1.AddOrUpdate(`0)
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.AddOrUpdate(TEntity)
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).AddOrUpdate(TEntity)
  nameWithType: IRepository<TEntity>.AddOrUpdate(TEntity)
  nameWithType.vb: IRepository(Of TEntity).AddOrUpdate(TEntity)
- uid: RoosterPlanner.Data.Common.IRepository`1.AddOrUpdate*
  name: AddOrUpdate
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_AddOrUpdate_
  commentId: Overload:RoosterPlanner.Data.Common.IRepository`1.AddOrUpdate
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.AddOrUpdate
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).AddOrUpdate
  nameWithType: IRepository<TEntity>.AddOrUpdate
  nameWithType.vb: IRepository(Of TEntity).AddOrUpdate
- uid: RoosterPlanner.Data.Common.IRepository`1.Delete(System.Guid)
  name: Delete(Guid)
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Delete_System_Guid_
  commentId: M:RoosterPlanner.Data.Common.IRepository`1.Delete(System.Guid)
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Delete(System.Guid)
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Delete(System.Guid)
  nameWithType: IRepository<TEntity>.Delete(Guid)
  nameWithType.vb: IRepository(Of TEntity).Delete(Guid)
- uid: RoosterPlanner.Data.Common.IRepository`1.Delete*
  name: Delete
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Delete_
  commentId: Overload:RoosterPlanner.Data.Common.IRepository`1.Delete
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Delete
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Delete
  nameWithType: IRepository<TEntity>.Delete
  nameWithType.vb: IRepository(Of TEntity).Delete
- uid: RoosterPlanner.Data.Common.IRepository`1.Find(System.Guid[])
  name: Find(Guid[])
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Find_System_Guid___
  commentId: M:RoosterPlanner.Data.Common.IRepository`1.Find(System.Guid[])
  name.vb: Find(Guid())
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Find(System.Guid[])
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Find(System.Guid())
  nameWithType: IRepository<TEntity>.Find(Guid[])
  nameWithType.vb: IRepository(Of TEntity).Find(Guid())
- uid: RoosterPlanner.Data.Common.IRepository`1.Find*
  name: Find
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Find_
  commentId: Overload:RoosterPlanner.Data.Common.IRepository`1.Find
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Find
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Find
  nameWithType: IRepository<TEntity>.Find
  nameWithType.vb: IRepository(Of TEntity).Find
- uid: RoosterPlanner.Data.Common.IRepository`1.FindAsync(System.Guid[])
  name: FindAsync(Guid[])
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_FindAsync_System_Guid___
  commentId: M:RoosterPlanner.Data.Common.IRepository`1.FindAsync(System.Guid[])
  name.vb: FindAsync(Guid())
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.FindAsync(System.Guid[])
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).FindAsync(System.Guid())
  nameWithType: IRepository<TEntity>.FindAsync(Guid[])
  nameWithType.vb: IRepository(Of TEntity).FindAsync(Guid())
- uid: RoosterPlanner.Data.Common.IRepository`1.FindAsync*
  name: FindAsync
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_FindAsync_
  commentId: Overload:RoosterPlanner.Data.Common.IRepository`1.FindAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.FindAsync
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).FindAsync
  nameWithType: IRepository<TEntity>.FindAsync
  nameWithType.vb: IRepository(Of TEntity).FindAsync
- uid: RoosterPlanner.Data.Common.IRepository`1.Get(System.Guid)
  name: Get(Guid)
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Get_System_Guid_
  commentId: M:RoosterPlanner.Data.Common.IRepository`1.Get(System.Guid)
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Get(System.Guid)
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Get(System.Guid)
  nameWithType: IRepository<TEntity>.Get(Guid)
  nameWithType.vb: IRepository(Of TEntity).Get(Guid)
- uid: RoosterPlanner.Data.Common.IRepository`1.Get*
  name: Get
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Get_
  commentId: Overload:RoosterPlanner.Data.Common.IRepository`1.Get
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Get
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Get
  nameWithType: IRepository<TEntity>.Get
  nameWithType.vb: IRepository(Of TEntity).Get
- uid: RoosterPlanner.Data.Common.IRepository`1.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_GetAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Common.IRepository`1.GetAsync(System.Guid)
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.GetAsync(System.Guid)
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).GetAsync(System.Guid)
  nameWithType: IRepository<TEntity>.GetAsync(Guid)
  nameWithType.vb: IRepository(Of TEntity).GetAsync(Guid)
- uid: RoosterPlanner.Data.Common.IRepository`1.GetAsync*
  name: GetAsync
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_GetAsync_
  commentId: Overload:RoosterPlanner.Data.Common.IRepository`1.GetAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.GetAsync
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).GetAsync
  nameWithType: IRepository<TEntity>.GetAsync
  nameWithType.vb: IRepository(Of TEntity).GetAsync
- uid: RoosterPlanner.Data.Common.IRepository`1.Remove(`0)
  name: Remove(TEntity)
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Remove__0_
  commentId: M:RoosterPlanner.Data.Common.IRepository`1.Remove(`0)
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Remove(TEntity)
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Remove(TEntity)
  nameWithType: IRepository<TEntity>.Remove(TEntity)
  nameWithType.vb: IRepository(Of TEntity).Remove(TEntity)
- uid: RoosterPlanner.Data.Common.IRepository`1.Remove(System.Guid,System.Byte[])
  name: Remove(Guid, Byte[])
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Remove_System_Guid_System_Byte___
  commentId: M:RoosterPlanner.Data.Common.IRepository`1.Remove(System.Guid,System.Byte[])
  name.vb: Remove(Guid, Byte())
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Remove(System.Guid, System.Byte[])
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Remove(System.Guid, System.Byte())
  nameWithType: IRepository<TEntity>.Remove(Guid, Byte[])
  nameWithType.vb: IRepository(Of TEntity).Remove(Guid, Byte())
- uid: RoosterPlanner.Data.Common.IRepository`1.Remove*
  name: Remove
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Remove_
  commentId: Overload:RoosterPlanner.Data.Common.IRepository`1.Remove
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Remove
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Remove
  nameWithType: IRepository<TEntity>.Remove
  nameWithType.vb: IRepository(Of TEntity).Remove
- uid: RoosterPlanner.Data.Common.IRepository`1.Update(`0)
  name: Update(TEntity)
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Update__0_
  commentId: M:RoosterPlanner.Data.Common.IRepository`1.Update(`0)
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Update(TEntity)
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Update(TEntity)
  nameWithType: IRepository<TEntity>.Update(TEntity)
  nameWithType.vb: IRepository(Of TEntity).Update(TEntity)
- uid: RoosterPlanner.Data.Common.IRepository`1.Update*
  name: Update
  href: api/RoosterPlanner.Data.Common.IRepository-1.html#RoosterPlanner_Data_Common_IRepository_1_Update_
  commentId: Overload:RoosterPlanner.Data.Common.IRepository`1.Update
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IRepository<TEntity>.Update
  fullName.vb: RoosterPlanner.Data.Common.IRepository(Of TEntity).Update
  nameWithType: IRepository<TEntity>.Update
  nameWithType.vb: IRepository(Of TEntity).Update
- uid: RoosterPlanner.Data.Common.IUnitOfWork
  name: IUnitOfWork
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html
  commentId: T:RoosterPlanner.Data.Common.IUnitOfWork
  fullName: RoosterPlanner.Data.Common.IUnitOfWork
  nameWithType: IUnitOfWork
- uid: RoosterPlanner.Data.Common.IUnitOfWork.AvailabilityRepository
  name: AvailabilityRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_AvailabilityRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.AvailabilityRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.AvailabilityRepository
  nameWithType: IUnitOfWork.AvailabilityRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.AvailabilityRepository*
  name: AvailabilityRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_AvailabilityRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.AvailabilityRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.AvailabilityRepository
  nameWithType: IUnitOfWork.AvailabilityRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.CategoryRepository
  name: CategoryRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_CategoryRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.CategoryRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.CategoryRepository
  nameWithType: IUnitOfWork.CategoryRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.CategoryRepository*
  name: CategoryRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_CategoryRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.CategoryRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.CategoryRepository
  nameWithType: IUnitOfWork.CategoryRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.CertificateRepository
  name: CertificateRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_CertificateRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.CertificateRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.CertificateRepository
  nameWithType: IUnitOfWork.CertificateRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.CertificateRepository*
  name: CertificateRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_CertificateRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.CertificateRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.CertificateRepository
  nameWithType: IUnitOfWork.CertificateRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.CertificateTypeRepository
  name: CertificateTypeRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_CertificateTypeRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.CertificateTypeRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.CertificateTypeRepository
  nameWithType: IUnitOfWork.CertificateTypeRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.CertificateTypeRepository*
  name: CertificateTypeRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_CertificateTypeRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.CertificateTypeRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.CertificateTypeRepository
  nameWithType: IUnitOfWork.CertificateTypeRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.Dispose
  name: Dispose()
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_Dispose
  commentId: M:RoosterPlanner.Data.Common.IUnitOfWork.Dispose
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.Dispose()
  nameWithType: IUnitOfWork.Dispose()
- uid: RoosterPlanner.Data.Common.IUnitOfWork.Dispose*
  name: Dispose
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_Dispose_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.Dispose
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.Dispose
  nameWithType: IUnitOfWork.Dispose
- uid: RoosterPlanner.Data.Common.IUnitOfWork.DocumentRepository
  name: DocumentRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_DocumentRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.DocumentRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.DocumentRepository
  nameWithType: IUnitOfWork.DocumentRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.DocumentRepository*
  name: DocumentRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_DocumentRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.DocumentRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.DocumentRepository
  nameWithType: IUnitOfWork.DocumentRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.ManagerRepository
  name: ManagerRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_ManagerRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.ManagerRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.ManagerRepository
  nameWithType: IUnitOfWork.ManagerRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.ManagerRepository*
  name: ManagerRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_ManagerRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.ManagerRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.ManagerRepository
  nameWithType: IUnitOfWork.ManagerRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.ParticipationRepository
  name: ParticipationRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_ParticipationRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.ParticipationRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.ParticipationRepository
  nameWithType: IUnitOfWork.ParticipationRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.ParticipationRepository*
  name: ParticipationRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_ParticipationRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.ParticipationRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.ParticipationRepository
  nameWithType: IUnitOfWork.ParticipationRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.PersonRepository
  name: PersonRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_PersonRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.PersonRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.PersonRepository
  nameWithType: IUnitOfWork.PersonRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.PersonRepository*
  name: PersonRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_PersonRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.PersonRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.PersonRepository
  nameWithType: IUnitOfWork.PersonRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.ProjectRepository
  name: ProjectRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_ProjectRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.ProjectRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.ProjectRepository
  nameWithType: IUnitOfWork.ProjectRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.ProjectRepository*
  name: ProjectRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_ProjectRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.ProjectRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.ProjectRepository
  nameWithType: IUnitOfWork.ProjectRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.ProjectTaskRepository
  name: ProjectTaskRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_ProjectTaskRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.ProjectTaskRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.ProjectTaskRepository
  nameWithType: IUnitOfWork.ProjectTaskRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.ProjectTaskRepository*
  name: ProjectTaskRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_ProjectTaskRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.ProjectTaskRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.ProjectTaskRepository
  nameWithType: IUnitOfWork.ProjectTaskRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.RequirementRepository
  name: RequirementRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_RequirementRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.RequirementRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.RequirementRepository
  nameWithType: IUnitOfWork.RequirementRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.RequirementRepository*
  name: RequirementRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_RequirementRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.RequirementRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.RequirementRepository
  nameWithType: IUnitOfWork.RequirementRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.SaveChanges
  name: SaveChanges()
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_SaveChanges
  commentId: M:RoosterPlanner.Data.Common.IUnitOfWork.SaveChanges
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.SaveChanges()
  nameWithType: IUnitOfWork.SaveChanges()
- uid: RoosterPlanner.Data.Common.IUnitOfWork.SaveChanges*
  name: SaveChanges
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_SaveChanges_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.SaveChanges
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.SaveChanges
  nameWithType: IUnitOfWork.SaveChanges
- uid: RoosterPlanner.Data.Common.IUnitOfWork.SaveChangesAsync
  name: SaveChangesAsync()
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_SaveChangesAsync
  commentId: M:RoosterPlanner.Data.Common.IUnitOfWork.SaveChangesAsync
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.SaveChangesAsync()
  nameWithType: IUnitOfWork.SaveChangesAsync()
- uid: RoosterPlanner.Data.Common.IUnitOfWork.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_SaveChangesAsync_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.SaveChangesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.SaveChangesAsync
  nameWithType: IUnitOfWork.SaveChangesAsync
- uid: RoosterPlanner.Data.Common.IUnitOfWork.ShiftRepository
  name: ShiftRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_ShiftRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.ShiftRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.ShiftRepository
  nameWithType: IUnitOfWork.ShiftRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.ShiftRepository*
  name: ShiftRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_ShiftRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.ShiftRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.ShiftRepository
  nameWithType: IUnitOfWork.ShiftRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.TaskRepository
  name: TaskRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_TaskRepository
  commentId: P:RoosterPlanner.Data.Common.IUnitOfWork.TaskRepository
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.TaskRepository
  nameWithType: IUnitOfWork.TaskRepository
- uid: RoosterPlanner.Data.Common.IUnitOfWork.TaskRepository*
  name: TaskRepository
  href: api/RoosterPlanner.Data.Common.IUnitOfWork.html#RoosterPlanner_Data_Common_IUnitOfWork_TaskRepository_
  commentId: Overload:RoosterPlanner.Data.Common.IUnitOfWork.TaskRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.IUnitOfWork.TaskRepository
  nameWithType: IUnitOfWork.TaskRepository
- uid: RoosterPlanner.Data.Common.Repository`1
  name: Repository<TEntity>
  href: api/RoosterPlanner.Data.Common.Repository-1.html
  commentId: T:RoosterPlanner.Data.Common.Repository`1
  name.vb: Repository(Of TEntity)
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity)
  nameWithType: Repository<TEntity>
  nameWithType.vb: Repository(Of TEntity)
- uid: RoosterPlanner.Data.Common.Repository`1.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: Repository(DbContext)
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Common.Repository`1.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Repository(Microsoft.EntityFrameworkCore.DbContext)
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Repository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: Repository<TEntity>.Repository(DbContext)
  nameWithType.vb: Repository(Of TEntity).Repository(DbContext)
- uid: RoosterPlanner.Data.Common.Repository`1.#ctor*
  name: Repository
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1__ctor_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Repository
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Repository
  nameWithType: Repository<TEntity>.Repository
  nameWithType.vb: Repository(Of TEntity).Repository
- uid: RoosterPlanner.Data.Common.Repository`1.Add(`0)
  name: Add(TEntity)
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Add__0_
  commentId: M:RoosterPlanner.Data.Common.Repository`1.Add(`0)
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Add(TEntity)
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Add(TEntity)
  nameWithType: Repository<TEntity>.Add(TEntity)
  nameWithType.vb: Repository(Of TEntity).Add(TEntity)
- uid: RoosterPlanner.Data.Common.Repository`1.Add*
  name: Add
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Add_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.Add
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Add
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Add
  nameWithType: Repository<TEntity>.Add
  nameWithType.vb: Repository(Of TEntity).Add
- uid: RoosterPlanner.Data.Common.Repository`1.AddOrUpdate(`0)
  name: AddOrUpdate(TEntity)
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_AddOrUpdate__0_
  commentId: M:RoosterPlanner.Data.Common.Repository`1.AddOrUpdate(`0)
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.AddOrUpdate(TEntity)
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).AddOrUpdate(TEntity)
  nameWithType: Repository<TEntity>.AddOrUpdate(TEntity)
  nameWithType.vb: Repository(Of TEntity).AddOrUpdate(TEntity)
- uid: RoosterPlanner.Data.Common.Repository`1.AddOrUpdate*
  name: AddOrUpdate
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_AddOrUpdate_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.AddOrUpdate
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.AddOrUpdate
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).AddOrUpdate
  nameWithType: Repository<TEntity>.AddOrUpdate
  nameWithType.vb: Repository(Of TEntity).AddOrUpdate
- uid: RoosterPlanner.Data.Common.Repository`1.DataContext
  name: DataContext
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_DataContext
  commentId: P:RoosterPlanner.Data.Common.Repository`1.DataContext
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.DataContext
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).DataContext
  nameWithType: Repository<TEntity>.DataContext
  nameWithType.vb: Repository(Of TEntity).DataContext
- uid: RoosterPlanner.Data.Common.Repository`1.DataContext*
  name: DataContext
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_DataContext_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.DataContext
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.DataContext
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).DataContext
  nameWithType: Repository<TEntity>.DataContext
  nameWithType.vb: Repository(Of TEntity).DataContext
- uid: RoosterPlanner.Data.Common.Repository`1.Delete(System.Guid)
  name: Delete(Guid)
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Delete_System_Guid_
  commentId: M:RoosterPlanner.Data.Common.Repository`1.Delete(System.Guid)
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Delete(System.Guid)
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Delete(System.Guid)
  nameWithType: Repository<TEntity>.Delete(Guid)
  nameWithType.vb: Repository(Of TEntity).Delete(Guid)
- uid: RoosterPlanner.Data.Common.Repository`1.Delete*
  name: Delete
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Delete_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.Delete
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Delete
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Delete
  nameWithType: Repository<TEntity>.Delete
  nameWithType.vb: Repository(Of TEntity).Delete
- uid: RoosterPlanner.Data.Common.Repository`1.EntitySet
  name: EntitySet
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_EntitySet
  commentId: P:RoosterPlanner.Data.Common.Repository`1.EntitySet
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.EntitySet
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).EntitySet
  nameWithType: Repository<TEntity>.EntitySet
  nameWithType.vb: Repository(Of TEntity).EntitySet
- uid: RoosterPlanner.Data.Common.Repository`1.EntitySet*
  name: EntitySet
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_EntitySet_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.EntitySet
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.EntitySet
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).EntitySet
  nameWithType: Repository<TEntity>.EntitySet
  nameWithType.vb: Repository(Of TEntity).EntitySet
- uid: RoosterPlanner.Data.Common.Repository`1.Find(System.Guid[])
  name: Find(Guid[])
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Find_System_Guid___
  commentId: M:RoosterPlanner.Data.Common.Repository`1.Find(System.Guid[])
  name.vb: Find(Guid())
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Find(System.Guid[])
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Find(System.Guid())
  nameWithType: Repository<TEntity>.Find(Guid[])
  nameWithType.vb: Repository(Of TEntity).Find(Guid())
- uid: RoosterPlanner.Data.Common.Repository`1.Find*
  name: Find
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Find_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.Find
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Find
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Find
  nameWithType: Repository<TEntity>.Find
  nameWithType.vb: Repository(Of TEntity).Find
- uid: RoosterPlanner.Data.Common.Repository`1.FindAsync(System.Guid[])
  name: FindAsync(Guid[])
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_FindAsync_System_Guid___
  commentId: M:RoosterPlanner.Data.Common.Repository`1.FindAsync(System.Guid[])
  name.vb: FindAsync(Guid())
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.FindAsync(System.Guid[])
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).FindAsync(System.Guid())
  nameWithType: Repository<TEntity>.FindAsync(Guid[])
  nameWithType.vb: Repository(Of TEntity).FindAsync(Guid())
- uid: RoosterPlanner.Data.Common.Repository`1.FindAsync*
  name: FindAsync
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_FindAsync_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.FindAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.FindAsync
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).FindAsync
  nameWithType: Repository<TEntity>.FindAsync
  nameWithType.vb: Repository(Of TEntity).FindAsync
- uid: RoosterPlanner.Data.Common.Repository`1.Get(System.Guid)
  name: Get(Guid)
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Get_System_Guid_
  commentId: M:RoosterPlanner.Data.Common.Repository`1.Get(System.Guid)
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Get(System.Guid)
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Get(System.Guid)
  nameWithType: Repository<TEntity>.Get(Guid)
  nameWithType.vb: Repository(Of TEntity).Get(Guid)
- uid: RoosterPlanner.Data.Common.Repository`1.Get*
  name: Get
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Get_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.Get
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Get
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Get
  nameWithType: Repository<TEntity>.Get
  nameWithType.vb: Repository(Of TEntity).Get
- uid: RoosterPlanner.Data.Common.Repository`1.GetAsync(System.Guid)
  name: GetAsync(Guid)
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_GetAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Common.Repository`1.GetAsync(System.Guid)
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.GetAsync(System.Guid)
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).GetAsync(System.Guid)
  nameWithType: Repository<TEntity>.GetAsync(Guid)
  nameWithType.vb: Repository(Of TEntity).GetAsync(Guid)
- uid: RoosterPlanner.Data.Common.Repository`1.GetAsync*
  name: GetAsync
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_GetAsync_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.GetAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.GetAsync
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).GetAsync
  nameWithType: Repository<TEntity>.GetAsync
  nameWithType.vb: Repository(Of TEntity).GetAsync
- uid: RoosterPlanner.Data.Common.Repository`1.Remove(`0)
  name: Remove(TEntity)
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Remove__0_
  commentId: M:RoosterPlanner.Data.Common.Repository`1.Remove(`0)
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Remove(TEntity)
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Remove(TEntity)
  nameWithType: Repository<TEntity>.Remove(TEntity)
  nameWithType.vb: Repository(Of TEntity).Remove(TEntity)
- uid: RoosterPlanner.Data.Common.Repository`1.Remove(System.Guid,System.Byte[])
  name: Remove(Guid, Byte[])
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Remove_System_Guid_System_Byte___
  commentId: M:RoosterPlanner.Data.Common.Repository`1.Remove(System.Guid,System.Byte[])
  name.vb: Remove(Guid, Byte())
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Remove(System.Guid, System.Byte[])
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Remove(System.Guid, System.Byte())
  nameWithType: Repository<TEntity>.Remove(Guid, Byte[])
  nameWithType.vb: Repository(Of TEntity).Remove(Guid, Byte())
- uid: RoosterPlanner.Data.Common.Repository`1.Remove*
  name: Remove
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Remove_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.Remove
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Remove
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Remove
  nameWithType: Repository<TEntity>.Remove
  nameWithType.vb: Repository(Of TEntity).Remove
- uid: RoosterPlanner.Data.Common.Repository`1.Update(`0)
  name: Update(TEntity)
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Update__0_
  commentId: M:RoosterPlanner.Data.Common.Repository`1.Update(`0)
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Update(TEntity)
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Update(TEntity)
  nameWithType: Repository<TEntity>.Update(TEntity)
  nameWithType.vb: Repository(Of TEntity).Update(TEntity)
- uid: RoosterPlanner.Data.Common.Repository`1.Update*
  name: Update
  href: api/RoosterPlanner.Data.Common.Repository-1.html#RoosterPlanner_Data_Common_Repository_1_Update_
  commentId: Overload:RoosterPlanner.Data.Common.Repository`1.Update
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.Repository<TEntity>.Update
  fullName.vb: RoosterPlanner.Data.Common.Repository(Of TEntity).Update
  nameWithType: Repository<TEntity>.Update
  nameWithType.vb: Repository(Of TEntity).Update
- uid: RoosterPlanner.Data.Common.UnitOfWork
  name: UnitOfWork
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html
  commentId: T:RoosterPlanner.Data.Common.UnitOfWork
  fullName: RoosterPlanner.Data.Common.UnitOfWork
  nameWithType: UnitOfWork
- uid: RoosterPlanner.Data.Common.UnitOfWork.#ctor(RoosterPlanner.Data.Context.RoosterPlannerContext)
  name: UnitOfWork(RoosterPlannerContext)
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork__ctor_RoosterPlanner_Data_Context_RoosterPlannerContext_
  commentId: M:RoosterPlanner.Data.Common.UnitOfWork.#ctor(RoosterPlanner.Data.Context.RoosterPlannerContext)
  fullName: RoosterPlanner.Data.Common.UnitOfWork.UnitOfWork(RoosterPlanner.Data.Context.RoosterPlannerContext)
  nameWithType: UnitOfWork.UnitOfWork(RoosterPlannerContext)
- uid: RoosterPlanner.Data.Common.UnitOfWork.#ctor*
  name: UnitOfWork
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork__ctor_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.UnitOfWork
  nameWithType: UnitOfWork.UnitOfWork
- uid: RoosterPlanner.Data.Common.UnitOfWork.AvailabilityRepository
  name: AvailabilityRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_AvailabilityRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.AvailabilityRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.AvailabilityRepository
  nameWithType: UnitOfWork.AvailabilityRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.AvailabilityRepository*
  name: AvailabilityRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_AvailabilityRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.AvailabilityRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.AvailabilityRepository
  nameWithType: UnitOfWork.AvailabilityRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.CategoryRepository
  name: CategoryRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_CategoryRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.CategoryRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.CategoryRepository
  nameWithType: UnitOfWork.CategoryRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.CategoryRepository*
  name: CategoryRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_CategoryRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.CategoryRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.CategoryRepository
  nameWithType: UnitOfWork.CategoryRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.CertificateRepository
  name: CertificateRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_CertificateRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.CertificateRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.CertificateRepository
  nameWithType: UnitOfWork.CertificateRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.CertificateRepository*
  name: CertificateRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_CertificateRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.CertificateRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.CertificateRepository
  nameWithType: UnitOfWork.CertificateRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.CertificateTypeRepository
  name: CertificateTypeRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_CertificateTypeRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.CertificateTypeRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.CertificateTypeRepository
  nameWithType: UnitOfWork.CertificateTypeRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.CertificateTypeRepository*
  name: CertificateTypeRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_CertificateTypeRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.CertificateTypeRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.CertificateTypeRepository
  nameWithType: UnitOfWork.CertificateTypeRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.DataContext
  name: DataContext
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_DataContext
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.DataContext
  fullName: RoosterPlanner.Data.Common.UnitOfWork.DataContext
  nameWithType: UnitOfWork.DataContext
- uid: RoosterPlanner.Data.Common.UnitOfWork.DataContext*
  name: DataContext
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_DataContext_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.DataContext
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.DataContext
  nameWithType: UnitOfWork.DataContext
- uid: RoosterPlanner.Data.Common.UnitOfWork.Dispose
  name: Dispose()
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_Dispose
  commentId: M:RoosterPlanner.Data.Common.UnitOfWork.Dispose
  fullName: RoosterPlanner.Data.Common.UnitOfWork.Dispose()
  nameWithType: UnitOfWork.Dispose()
- uid: RoosterPlanner.Data.Common.UnitOfWork.Dispose*
  name: Dispose
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_Dispose_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.Dispose
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.Dispose
  nameWithType: UnitOfWork.Dispose
- uid: RoosterPlanner.Data.Common.UnitOfWork.DocumentRepository
  name: DocumentRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_DocumentRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.DocumentRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.DocumentRepository
  nameWithType: UnitOfWork.DocumentRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.DocumentRepository*
  name: DocumentRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_DocumentRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.DocumentRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.DocumentRepository
  nameWithType: UnitOfWork.DocumentRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.ManagerRepository
  name: ManagerRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_ManagerRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.ManagerRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.ManagerRepository
  nameWithType: UnitOfWork.ManagerRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.ManagerRepository*
  name: ManagerRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_ManagerRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.ManagerRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.ManagerRepository
  nameWithType: UnitOfWork.ManagerRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.ParticipationRepository
  name: ParticipationRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_ParticipationRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.ParticipationRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.ParticipationRepository
  nameWithType: UnitOfWork.ParticipationRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.ParticipationRepository*
  name: ParticipationRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_ParticipationRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.ParticipationRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.ParticipationRepository
  nameWithType: UnitOfWork.ParticipationRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.PersonRepository
  name: PersonRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_PersonRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.PersonRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.PersonRepository
  nameWithType: UnitOfWork.PersonRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.PersonRepository*
  name: PersonRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_PersonRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.PersonRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.PersonRepository
  nameWithType: UnitOfWork.PersonRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.ProjectRepository
  name: ProjectRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_ProjectRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.ProjectRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.ProjectRepository
  nameWithType: UnitOfWork.ProjectRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.ProjectRepository*
  name: ProjectRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_ProjectRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.ProjectRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.ProjectRepository
  nameWithType: UnitOfWork.ProjectRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.ProjectTaskRepository
  name: ProjectTaskRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_ProjectTaskRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.ProjectTaskRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.ProjectTaskRepository
  nameWithType: UnitOfWork.ProjectTaskRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.ProjectTaskRepository*
  name: ProjectTaskRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_ProjectTaskRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.ProjectTaskRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.ProjectTaskRepository
  nameWithType: UnitOfWork.ProjectTaskRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.RequirementRepository
  name: RequirementRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_RequirementRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.RequirementRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.RequirementRepository
  nameWithType: UnitOfWork.RequirementRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.RequirementRepository*
  name: RequirementRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_RequirementRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.RequirementRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.RequirementRepository
  nameWithType: UnitOfWork.RequirementRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.SaveChanges
  name: SaveChanges()
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_SaveChanges
  commentId: M:RoosterPlanner.Data.Common.UnitOfWork.SaveChanges
  fullName: RoosterPlanner.Data.Common.UnitOfWork.SaveChanges()
  nameWithType: UnitOfWork.SaveChanges()
- uid: RoosterPlanner.Data.Common.UnitOfWork.SaveChanges*
  name: SaveChanges
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_SaveChanges_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.SaveChanges
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.SaveChanges
  nameWithType: UnitOfWork.SaveChanges
- uid: RoosterPlanner.Data.Common.UnitOfWork.SaveChangesAsync
  name: SaveChangesAsync()
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_SaveChangesAsync
  commentId: M:RoosterPlanner.Data.Common.UnitOfWork.SaveChangesAsync
  fullName: RoosterPlanner.Data.Common.UnitOfWork.SaveChangesAsync()
  nameWithType: UnitOfWork.SaveChangesAsync()
- uid: RoosterPlanner.Data.Common.UnitOfWork.SaveChangesAsync*
  name: SaveChangesAsync
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_SaveChangesAsync_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.SaveChangesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.SaveChangesAsync
  nameWithType: UnitOfWork.SaveChangesAsync
- uid: RoosterPlanner.Data.Common.UnitOfWork.ShiftRepository
  name: ShiftRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_ShiftRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.ShiftRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.ShiftRepository
  nameWithType: UnitOfWork.ShiftRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.ShiftRepository*
  name: ShiftRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_ShiftRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.ShiftRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.ShiftRepository
  nameWithType: UnitOfWork.ShiftRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.TaskRepository
  name: TaskRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_TaskRepository
  commentId: P:RoosterPlanner.Data.Common.UnitOfWork.TaskRepository
  fullName: RoosterPlanner.Data.Common.UnitOfWork.TaskRepository
  nameWithType: UnitOfWork.TaskRepository
- uid: RoosterPlanner.Data.Common.UnitOfWork.TaskRepository*
  name: TaskRepository
  href: api/RoosterPlanner.Data.Common.UnitOfWork.html#RoosterPlanner_Data_Common_UnitOfWork_TaskRepository_
  commentId: Overload:RoosterPlanner.Data.Common.UnitOfWork.TaskRepository
  isSpec: "True"
  fullName: RoosterPlanner.Data.Common.UnitOfWork.TaskRepository
  nameWithType: UnitOfWork.TaskRepository
- uid: RoosterPlanner.Data.Context
  name: RoosterPlanner.Data.Context
  href: api/RoosterPlanner.Data.Context.html
  commentId: N:RoosterPlanner.Data.Context
  fullName: RoosterPlanner.Data.Context
  nameWithType: RoosterPlanner.Data.Context
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext
  name: RoosterPlannerContext
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html
  commentId: T:RoosterPlanner.Data.Context.RoosterPlannerContext
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext
  nameWithType: RoosterPlannerContext
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{RoosterPlanner.Data.Context.RoosterPlannerContext})
  name: RoosterPlannerContext(DbContextOptions<RoosterPlannerContext>)
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_RoosterPlanner_Data_Context_RoosterPlannerContext__
  commentId: M:RoosterPlanner.Data.Context.RoosterPlannerContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{RoosterPlanner.Data.Context.RoosterPlannerContext})
  name.vb: RoosterPlannerContext(DbContextOptions(Of RoosterPlannerContext))
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.RoosterPlannerContext(Microsoft.EntityFrameworkCore.DbContextOptions<RoosterPlanner.Data.Context.RoosterPlannerContext>)
  fullName.vb: RoosterPlanner.Data.Context.RoosterPlannerContext.RoosterPlannerContext(Microsoft.EntityFrameworkCore.DbContextOptions(Of RoosterPlanner.Data.Context.RoosterPlannerContext))
  nameWithType: RoosterPlannerContext.RoosterPlannerContext(DbContextOptions<RoosterPlannerContext>)
  nameWithType.vb: RoosterPlannerContext.RoosterPlannerContext(DbContextOptions(Of RoosterPlannerContext))
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.#ctor*
  name: RoosterPlannerContext
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext__ctor_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.RoosterPlannerContext
  nameWithType: RoosterPlannerContext.RoosterPlannerContext
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Availabilities
  name: Availabilities
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Availabilities
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Availabilities
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Availabilities
  nameWithType: RoosterPlannerContext.Availabilities
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Availabilities*
  name: Availabilities
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Availabilities_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Availabilities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Availabilities
  nameWithType: RoosterPlannerContext.Availabilities
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Categories
  name: Categories
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Categories
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Categories
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Categories
  nameWithType: RoosterPlannerContext.Categories
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Categories*
  name: Categories
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Categories_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Categories
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Categories
  nameWithType: RoosterPlannerContext.Categories
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Certificates
  name: Certificates
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Certificates
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Certificates
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Certificates
  nameWithType: RoosterPlannerContext.Certificates
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Certificates*
  name: Certificates
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Certificates_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Certificates
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Certificates
  nameWithType: RoosterPlannerContext.Certificates
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.CertificateTypes
  name: CertificateTypes
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_CertificateTypes
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.CertificateTypes
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.CertificateTypes
  nameWithType: RoosterPlannerContext.CertificateTypes
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.CertificateTypes*
  name: CertificateTypes
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_CertificateTypes_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.CertificateTypes
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.CertificateTypes
  nameWithType: RoosterPlannerContext.CertificateTypes
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Documents
  name: Documents
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Documents
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Documents
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Documents
  nameWithType: RoosterPlannerContext.Documents
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Documents*
  name: Documents
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Documents_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Documents
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Documents
  nameWithType: RoosterPlannerContext.Documents
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Managers
  name: Managers
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Managers
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Managers
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Managers
  nameWithType: RoosterPlannerContext.Managers
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Managers*
  name: Managers
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Managers_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Managers
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Managers
  nameWithType: RoosterPlannerContext.Managers
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: OnModelCreating(ModelBuilder)
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_OnModelCreating_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:RoosterPlanner.Data.Context.RoosterPlannerContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: RoosterPlannerContext.OnModelCreating(ModelBuilder)
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.OnModelCreating*
  name: OnModelCreating
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_OnModelCreating_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.OnModelCreating
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.OnModelCreating
  nameWithType: RoosterPlannerContext.OnModelCreating
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Participations
  name: Participations
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Participations
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Participations
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Participations
  nameWithType: RoosterPlannerContext.Participations
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Participations*
  name: Participations
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Participations_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Participations
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Participations
  nameWithType: RoosterPlannerContext.Participations
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Persons
  name: Persons
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Persons
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Persons
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Persons
  nameWithType: RoosterPlannerContext.Persons
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Persons*
  name: Persons
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Persons_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Persons
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Persons
  nameWithType: RoosterPlannerContext.Persons
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Projects
  name: Projects
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Projects
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Projects
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Projects
  nameWithType: RoosterPlannerContext.Projects
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Projects*
  name: Projects
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Projects_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Projects
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Projects
  nameWithType: RoosterPlannerContext.Projects
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.ProjectTasks
  name: ProjectTasks
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_ProjectTasks
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.ProjectTasks
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.ProjectTasks
  nameWithType: RoosterPlannerContext.ProjectTasks
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.ProjectTasks*
  name: ProjectTasks
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_ProjectTasks_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.ProjectTasks
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.ProjectTasks
  nameWithType: RoosterPlannerContext.ProjectTasks
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Requirements
  name: Requirements
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Requirements
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Requirements
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Requirements
  nameWithType: RoosterPlannerContext.Requirements
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Requirements*
  name: Requirements
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Requirements_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Requirements
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Requirements
  nameWithType: RoosterPlannerContext.Requirements
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Shifts
  name: Shifts
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Shifts
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Shifts
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Shifts
  nameWithType: RoosterPlannerContext.Shifts
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Shifts*
  name: Shifts
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Shifts_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Shifts
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Shifts
  nameWithType: RoosterPlannerContext.Shifts
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Tasks
  name: Tasks
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Tasks
  commentId: P:RoosterPlanner.Data.Context.RoosterPlannerContext.Tasks
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Tasks
  nameWithType: RoosterPlannerContext.Tasks
- uid: RoosterPlanner.Data.Context.RoosterPlannerContext.Tasks*
  name: Tasks
  href: api/RoosterPlanner.Data.Context.RoosterPlannerContext.html#RoosterPlanner_Data_Context_RoosterPlannerContext_Tasks_
  commentId: Overload:RoosterPlanner.Data.Context.RoosterPlannerContext.Tasks
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.RoosterPlannerContext.Tasks
  nameWithType: RoosterPlannerContext.Tasks
- uid: RoosterPlanner.Data.Context.Seed
  name: RoosterPlanner.Data.Context.Seed
  href: api/RoosterPlanner.Data.Context.Seed.html
  commentId: N:RoosterPlanner.Data.Context.Seed
  fullName: RoosterPlanner.Data.Context.Seed
  nameWithType: RoosterPlanner.Data.Context.Seed
- uid: RoosterPlanner.Data.Context.Seed.Helper
  name: Helper
  href: api/RoosterPlanner.Data.Context.Seed.Helper.html
  commentId: T:RoosterPlanner.Data.Context.Seed.Helper
  fullName: RoosterPlanner.Data.Context.Seed.Helper
  nameWithType: Helper
- uid: RoosterPlanner.Data.Context.Seed.Helper.ConcatGuid(System.Guid,System.Guid)
  name: ConcatGuid(Guid, Guid)
  href: api/RoosterPlanner.Data.Context.Seed.Helper.html#RoosterPlanner_Data_Context_Seed_Helper_ConcatGuid_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Context.Seed.Helper.ConcatGuid(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Context.Seed.Helper.ConcatGuid(System.Guid, System.Guid)
  nameWithType: Helper.ConcatGuid(Guid, Guid)
- uid: RoosterPlanner.Data.Context.Seed.Helper.ConcatGuid*
  name: ConcatGuid
  href: api/RoosterPlanner.Data.Context.Seed.Helper.html#RoosterPlanner_Data_Context_Seed_Helper_ConcatGuid_
  commentId: Overload:RoosterPlanner.Data.Context.Seed.Helper.ConcatGuid
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.Seed.Helper.ConcatGuid
  nameWithType: Helper.ConcatGuid
- uid: RoosterPlanner.Data.Context.Seed.Helper.RandomNumberFromRange(System.Int32,System.Int32)
  name: RandomNumberFromRange(Int32, Int32)
  href: api/RoosterPlanner.Data.Context.Seed.Helper.html#RoosterPlanner_Data_Context_Seed_Helper_RandomNumberFromRange_System_Int32_System_Int32_
  commentId: M:RoosterPlanner.Data.Context.Seed.Helper.RandomNumberFromRange(System.Int32,System.Int32)
  fullName: RoosterPlanner.Data.Context.Seed.Helper.RandomNumberFromRange(System.Int32, System.Int32)
  nameWithType: Helper.RandomNumberFromRange(Int32, Int32)
- uid: RoosterPlanner.Data.Context.Seed.Helper.RandomNumberFromRange*
  name: RandomNumberFromRange
  href: api/RoosterPlanner.Data.Context.Seed.Helper.html#RoosterPlanner_Data_Context_Seed_Helper_RandomNumberFromRange_
  commentId: Overload:RoosterPlanner.Data.Context.Seed.Helper.RandomNumberFromRange
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.Seed.Helper.RandomNumberFromRange
  nameWithType: Helper.RandomNumberFromRange
- uid: RoosterPlanner.Data.Context.Seed.Helper.RandomType
  name: RandomType()
  href: api/RoosterPlanner.Data.Context.Seed.Helper.html#RoosterPlanner_Data_Context_Seed_Helper_RandomType
  commentId: M:RoosterPlanner.Data.Context.Seed.Helper.RandomType
  fullName: RoosterPlanner.Data.Context.Seed.Helper.RandomType()
  nameWithType: Helper.RandomType()
- uid: RoosterPlanner.Data.Context.Seed.Helper.RandomType*
  name: RandomType
  href: api/RoosterPlanner.Data.Context.Seed.Helper.html#RoosterPlanner_Data_Context_Seed_Helper_RandomType_
  commentId: Overload:RoosterPlanner.Data.Context.Seed.Helper.RandomType
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.Seed.Helper.RandomType
  nameWithType: Helper.RandomType
- uid: RoosterPlanner.Data.Context.Seed.Helper.ReturnRandomEntity*
  name: ReturnRandomEntity
  href: api/RoosterPlanner.Data.Context.Seed.Helper.html#RoosterPlanner_Data_Context_Seed_Helper_ReturnRandomEntity_
  commentId: Overload:RoosterPlanner.Data.Context.Seed.Helper.ReturnRandomEntity
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.Seed.Helper.ReturnRandomEntity
  nameWithType: Helper.ReturnRandomEntity
- uid: RoosterPlanner.Data.Context.Seed.Helper.ReturnRandomEntity``1(System.Collections.Generic.List{``0})
  name: ReturnRandomEntity<T>(List<T>)
  href: api/RoosterPlanner.Data.Context.Seed.Helper.html#RoosterPlanner_Data_Context_Seed_Helper_ReturnRandomEntity__1_System_Collections_Generic_List___0__
  commentId: M:RoosterPlanner.Data.Context.Seed.Helper.ReturnRandomEntity``1(System.Collections.Generic.List{``0})
  name.vb: ReturnRandomEntity(Of T)(List(Of T))
  fullName: RoosterPlanner.Data.Context.Seed.Helper.ReturnRandomEntity<T>(System.Collections.Generic.List<T>)
  fullName.vb: RoosterPlanner.Data.Context.Seed.Helper.ReturnRandomEntity(Of T)(System.Collections.Generic.List(Of T))
  nameWithType: Helper.ReturnRandomEntity<T>(List<T>)
  nameWithType.vb: Helper.ReturnRandomEntity(Of T)(List(Of T))
- uid: RoosterPlanner.Data.Context.Seed.RequirementSeed
  name: RequirementSeed
  href: api/RoosterPlanner.Data.Context.Seed.RequirementSeed.html
  commentId: T:RoosterPlanner.Data.Context.Seed.RequirementSeed
  fullName: RoosterPlanner.Data.Context.Seed.RequirementSeed
  nameWithType: RequirementSeed
- uid: RoosterPlanner.Data.Context.Seed.RequirementSeed.Seed
  name: Seed()
  href: api/RoosterPlanner.Data.Context.Seed.RequirementSeed.html#RoosterPlanner_Data_Context_Seed_RequirementSeed_Seed
  commentId: M:RoosterPlanner.Data.Context.Seed.RequirementSeed.Seed
  fullName: RoosterPlanner.Data.Context.Seed.RequirementSeed.Seed()
  nameWithType: RequirementSeed.Seed()
- uid: RoosterPlanner.Data.Context.Seed.RequirementSeed.Seed*
  name: Seed
  href: api/RoosterPlanner.Data.Context.Seed.RequirementSeed.html#RoosterPlanner_Data_Context_Seed_RequirementSeed_Seed_
  commentId: Overload:RoosterPlanner.Data.Context.Seed.RequirementSeed.Seed
  isSpec: "True"
  fullName: RoosterPlanner.Data.Context.Seed.RequirementSeed.Seed
  nameWithType: RequirementSeed.Seed
- uid: RoosterPlanner.Data.Migrations
  name: RoosterPlanner.Data.Migrations
  href: api/RoosterPlanner.Data.Migrations.html
  commentId: N:RoosterPlanner.Data.Migrations
  fullName: RoosterPlanner.Data.Migrations
  nameWithType: RoosterPlanner.Data.Migrations
- uid: RoosterPlanner.Data.Migrations.deploy2prd
  name: deploy2prd
  href: api/RoosterPlanner.Data.Migrations.deploy2prd.html
  commentId: T:RoosterPlanner.Data.Migrations.deploy2prd
  fullName: RoosterPlanner.Data.Migrations.deploy2prd
  nameWithType: deploy2prd
- uid: RoosterPlanner.Data.Migrations.deploy2prd.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  name: BuildTargetModel(ModelBuilder)
  href: api/RoosterPlanner.Data.Migrations.deploy2prd.html#RoosterPlanner_Data_Migrations_deploy2prd_BuildTargetModel_Microsoft_EntityFrameworkCore_ModelBuilder_
  commentId: M:RoosterPlanner.Data.Migrations.deploy2prd.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  fullName: RoosterPlanner.Data.Migrations.deploy2prd.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)
  nameWithType: deploy2prd.BuildTargetModel(ModelBuilder)
- uid: RoosterPlanner.Data.Migrations.deploy2prd.BuildTargetModel*
  name: BuildTargetModel
  href: api/RoosterPlanner.Data.Migrations.deploy2prd.html#RoosterPlanner_Data_Migrations_deploy2prd_BuildTargetModel_
  commentId: Overload:RoosterPlanner.Data.Migrations.deploy2prd.BuildTargetModel
  isSpec: "True"
  fullName: RoosterPlanner.Data.Migrations.deploy2prd.BuildTargetModel
  nameWithType: deploy2prd.BuildTargetModel
- uid: RoosterPlanner.Data.Migrations.deploy2prd.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Down(MigrationBuilder)
  href: api/RoosterPlanner.Data.Migrations.deploy2prd.html#RoosterPlanner_Data_Migrations_deploy2prd_Down_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:RoosterPlanner.Data.Migrations.deploy2prd.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: RoosterPlanner.Data.Migrations.deploy2prd.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: deploy2prd.Down(MigrationBuilder)
- uid: RoosterPlanner.Data.Migrations.deploy2prd.Down*
  name: Down
  href: api/RoosterPlanner.Data.Migrations.deploy2prd.html#RoosterPlanner_Data_Migrations_deploy2prd_Down_
  commentId: Overload:RoosterPlanner.Data.Migrations.deploy2prd.Down
  isSpec: "True"
  fullName: RoosterPlanner.Data.Migrations.deploy2prd.Down
  nameWithType: deploy2prd.Down
- uid: RoosterPlanner.Data.Migrations.deploy2prd.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  name: Up(MigrationBuilder)
  href: api/RoosterPlanner.Data.Migrations.deploy2prd.html#RoosterPlanner_Data_Migrations_deploy2prd_Up_Microsoft_EntityFrameworkCore_Migrations_MigrationBuilder_
  commentId: M:RoosterPlanner.Data.Migrations.deploy2prd.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  fullName: RoosterPlanner.Data.Migrations.deploy2prd.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)
  nameWithType: deploy2prd.Up(MigrationBuilder)
- uid: RoosterPlanner.Data.Migrations.deploy2prd.Up*
  name: Up
  href: api/RoosterPlanner.Data.Migrations.deploy2prd.html#RoosterPlanner_Data_Migrations_deploy2prd_Up_
  commentId: Overload:RoosterPlanner.Data.Migrations.deploy2prd.Up
  isSpec: "True"
  fullName: RoosterPlanner.Data.Migrations.deploy2prd.Up
  nameWithType: deploy2prd.Up
- uid: RoosterPlanner.Data.Repositories
  name: RoosterPlanner.Data.Repositories
  href: api/RoosterPlanner.Data.Repositories.html
  commentId: N:RoosterPlanner.Data.Repositories
  fullName: RoosterPlanner.Data.Repositories
  nameWithType: RoosterPlanner.Data.Repositories
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository
  name: AvailabilityRepository
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.AvailabilityRepository
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository
  nameWithType: AvailabilityRepository
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: AvailabilityRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.AvailabilityRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: AvailabilityRepository.AvailabilityRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.#ctor*
  name: AvailabilityRepository
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.AvailabilityRepository
  nameWithType: AvailabilityRepository.AvailabilityRepository
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.FindAvailabilitiesAsync(System.Guid,System.Guid)
  name: FindAvailabilitiesAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository_FindAvailabilitiesAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepository.FindAvailabilitiesAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.FindAvailabilitiesAsync(System.Guid, System.Guid)
  nameWithType: AvailabilityRepository.FindAvailabilitiesAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.FindAvailabilitiesAsync*
  name: FindAvailabilitiesAsync
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository_FindAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepository.FindAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.FindAvailabilitiesAsync
  nameWithType: AvailabilityRepository.FindAvailabilitiesAsync
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetActiveAvailabilities(System.Guid)
  name: GetActiveAvailabilities(Guid)
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository_GetActiveAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepository.GetActiveAvailabilities(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetActiveAvailabilities(System.Guid)
  nameWithType: AvailabilityRepository.GetActiveAvailabilities(Guid)
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetActiveAvailabilities*
  name: GetActiveAvailabilities
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository_GetActiveAvailabilities_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepository.GetActiveAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetActiveAvailabilities
  nameWithType: AvailabilityRepository.GetActiveAvailabilities
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetAvailability(System.Guid,System.Guid)
  name: GetAvailability(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository_GetAvailability_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepository.GetAvailability(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetAvailability(System.Guid, System.Guid)
  nameWithType: AvailabilityRepository.GetAvailability(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetAvailability*
  name: GetAvailability
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository_GetAvailability_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepository.GetAvailability
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetAvailability
  nameWithType: AvailabilityRepository.GetAvailability
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetScheduledAvailabilities(System.Guid)
  name: GetScheduledAvailabilities(Guid)
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository_GetScheduledAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepository.GetScheduledAvailabilities(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetScheduledAvailabilities(System.Guid)
  nameWithType: AvailabilityRepository.GetScheduledAvailabilities(Guid)
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetScheduledAvailabilities(System.Guid,System.DateTime)
  name: GetScheduledAvailabilities(Guid, DateTime)
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository_GetScheduledAvailabilities_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepository.GetScheduledAvailabilities(System.Guid,System.DateTime)
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetScheduledAvailabilities(System.Guid, System.DateTime)
  nameWithType: AvailabilityRepository.GetScheduledAvailabilities(Guid, DateTime)
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetScheduledAvailabilities*
  name: GetScheduledAvailabilities
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepository.html#RoosterPlanner_Data_Repositories_AvailabilityRepository_GetScheduledAvailabilities_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepository.GetScheduledAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepository.GetScheduledAvailabilities
  nameWithType: AvailabilityRepository.GetScheduledAvailabilities
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest
  name: AvailabilityRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest
  nameWithType: AvailabilityRepositoryTest
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.#ctor
  name: AvailabilityRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.AvailabilityRepositoryTest()
  nameWithType: AvailabilityRepositoryTest.AvailabilityRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.#ctor*
  name: AvailabilityRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.AvailabilityRepositoryTest
  nameWithType: AvailabilityRepositoryTest.AvailabilityRepositoryTest
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  name: FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
  nameWithType: AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References*
  name: FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  nameWithType: AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS(System.String,System.String)
  name: FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS(String, String)
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS_System_String_System_String_
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS(System.String,System.String)
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS(System.String, System.String)
  nameWithType: AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS(String, String)
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS*
  name: FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  nameWithType: AvailabilityRepositoryTest.FindAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References
  name: GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References()
  nameWithType: AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References*
  name: GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References
  nameWithType: AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Include_Related_Data_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  name: GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
  nameWithType: AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS*
  name: GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  nameWithType: AvailabilityRepositoryTest.GetActiveAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Return_Correct_Entities
  name: GetAvailability_Should_Return_Correct_Entities()
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetAvailability_Should_Return_Correct_Entities
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Return_Correct_Entities
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Return_Correct_Entities()
  nameWithType: AvailabilityRepositoryTest.GetAvailability_Should_Return_Correct_Entities()
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Return_Correct_Entities*
  name: GetAvailability_Should_Return_Correct_Entities
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetAvailability_Should_Return_Correct_Entities_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Return_Correct_Entities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Return_Correct_Entities
  nameWithType: AvailabilityRepositoryTest.GetAvailability_Should_Return_Correct_Entities
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  name: GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
  nameWithType: AvailabilityRepositoryTest.GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS*
  name: GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  nameWithType: AvailabilityRepositoryTest.GetAvailability_Should_Throw_Exception_When_Ids_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  name: GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References()
  nameWithType: AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References*
  name: GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  nameWithType: AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Include_Related_Data_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS
  name: GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS()
  nameWithType: AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS*
  name: GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS
  nameWithType: AvailabilityRepositoryTest.GetScheduledAvailabilities_OVERLOAD_Should_Return_Null_When_Ids_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References
  name: GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References()
  nameWithType: AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References*
  name: GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References
  nameWithType: AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Include_Related_Data_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  name: GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
  nameWithType: AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS*
  name: GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.html#RoosterPlanner_Data_Repositories_AvailabilityRepositoryTest_GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  nameWithType: AvailabilityRepositoryTest.GetScheduledAvailabilities_Should_Throw_Exception_When_Ids_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.BaseUnitTest
  name: BaseUnitTest
  href: api/RoosterPlanner.Data.Repositories.BaseUnitTest.html
  commentId: T:RoosterPlanner.Data.Repositories.BaseUnitTest
  fullName: RoosterPlanner.Data.Repositories.BaseUnitTest
  nameWithType: BaseUnitTest
- uid: RoosterPlanner.Data.Repositories.BaseUnitTest.#ctor
  name: BaseUnitTest()
  href: api/RoosterPlanner.Data.Repositories.BaseUnitTest.html#RoosterPlanner_Data_Repositories_BaseUnitTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.BaseUnitTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.BaseUnitTest.BaseUnitTest()
  nameWithType: BaseUnitTest.BaseUnitTest()
- uid: RoosterPlanner.Data.Repositories.BaseUnitTest.#ctor*
  name: BaseUnitTest
  href: api/RoosterPlanner.Data.Repositories.BaseUnitTest.html#RoosterPlanner_Data_Repositories_BaseUnitTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.BaseUnitTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.BaseUnitTest.BaseUnitTest
  nameWithType: BaseUnitTest.BaseUnitTest
- uid: RoosterPlanner.Data.Repositories.BaseUnitTest.CreateContextMock(System.String)
  name: CreateContextMock(String)
  href: api/RoosterPlanner.Data.Repositories.BaseUnitTest.html#RoosterPlanner_Data_Repositories_BaseUnitTest_CreateContextMock_System_String_
  commentId: M:RoosterPlanner.Data.Repositories.BaseUnitTest.CreateContextMock(System.String)
  fullName: RoosterPlanner.Data.Repositories.BaseUnitTest.CreateContextMock(System.String)
  nameWithType: BaseUnitTest.CreateContextMock(String)
- uid: RoosterPlanner.Data.Repositories.BaseUnitTest.CreateContextMock*
  name: CreateContextMock
  href: api/RoosterPlanner.Data.Repositories.BaseUnitTest.html#RoosterPlanner_Data_Repositories_BaseUnitTest_CreateContextMock_
  commentId: Overload:RoosterPlanner.Data.Repositories.BaseUnitTest.CreateContextMock
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.BaseUnitTest.CreateContextMock
  nameWithType: BaseUnitTest.CreateContextMock
- uid: RoosterPlanner.Data.Repositories.BaseUnitTest.roosterPlannerContextMock
  name: roosterPlannerContextMock
  href: api/RoosterPlanner.Data.Repositories.BaseUnitTest.html#RoosterPlanner_Data_Repositories_BaseUnitTest_roosterPlannerContextMock
  commentId: F:RoosterPlanner.Data.Repositories.BaseUnitTest.roosterPlannerContextMock
  fullName: RoosterPlanner.Data.Repositories.BaseUnitTest.roosterPlannerContextMock
  nameWithType: BaseUnitTest.roosterPlannerContextMock
- uid: RoosterPlanner.Data.Repositories.CategoryRepository
  name: CategoryRepository
  href: api/RoosterPlanner.Data.Repositories.CategoryRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.CategoryRepository
  fullName: RoosterPlanner.Data.Repositories.CategoryRepository
  nameWithType: CategoryRepository
- uid: RoosterPlanner.Data.Repositories.CategoryRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: CategoryRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.CategoryRepository.html#RoosterPlanner_Data_Repositories_CategoryRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.CategoryRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.CategoryRepository.CategoryRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: CategoryRepository.CategoryRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.CategoryRepository.#ctor*
  name: CategoryRepository
  href: api/RoosterPlanner.Data.Repositories.CategoryRepository.html#RoosterPlanner_Data_Repositories_CategoryRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.CategoryRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CategoryRepository.CategoryRepository
  nameWithType: CategoryRepository.CategoryRepository
- uid: RoosterPlanner.Data.Repositories.CategoryRepository.GetAllCategoriesAsync
  name: GetAllCategoriesAsync()
  href: api/RoosterPlanner.Data.Repositories.CategoryRepository.html#RoosterPlanner_Data_Repositories_CategoryRepository_GetAllCategoriesAsync
  commentId: M:RoosterPlanner.Data.Repositories.CategoryRepository.GetAllCategoriesAsync
  fullName: RoosterPlanner.Data.Repositories.CategoryRepository.GetAllCategoriesAsync()
  nameWithType: CategoryRepository.GetAllCategoriesAsync()
- uid: RoosterPlanner.Data.Repositories.CategoryRepository.GetAllCategoriesAsync*
  name: GetAllCategoriesAsync
  href: api/RoosterPlanner.Data.Repositories.CategoryRepository.html#RoosterPlanner_Data_Repositories_CategoryRepository_GetAllCategoriesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.CategoryRepository.GetAllCategoriesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CategoryRepository.GetAllCategoriesAsync
  nameWithType: CategoryRepository.GetAllCategoriesAsync
- uid: RoosterPlanner.Data.Repositories.CategoryTest
  name: CategoryTest
  href: api/RoosterPlanner.Data.Repositories.CategoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.CategoryTest
  fullName: RoosterPlanner.Data.Repositories.CategoryTest
  nameWithType: CategoryTest
- uid: RoosterPlanner.Data.Repositories.CategoryTest.#ctor
  name: CategoryTest()
  href: api/RoosterPlanner.Data.Repositories.CategoryTest.html#RoosterPlanner_Data_Repositories_CategoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.CategoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.CategoryTest.CategoryTest()
  nameWithType: CategoryTest.CategoryTest()
- uid: RoosterPlanner.Data.Repositories.CategoryTest.#ctor*
  name: CategoryTest
  href: api/RoosterPlanner.Data.Repositories.CategoryTest.html#RoosterPlanner_Data_Repositories_CategoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.CategoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CategoryTest.CategoryTest
  nameWithType: CategoryTest.CategoryTest
- uid: RoosterPlanner.Data.Repositories.CategoryTest.GetAllCategoriesAsync_Should_Return_All_Categories
  name: GetAllCategoriesAsync_Should_Return_All_Categories()
  href: api/RoosterPlanner.Data.Repositories.CategoryTest.html#RoosterPlanner_Data_Repositories_CategoryTest_GetAllCategoriesAsync_Should_Return_All_Categories
  commentId: M:RoosterPlanner.Data.Repositories.CategoryTest.GetAllCategoriesAsync_Should_Return_All_Categories
  fullName: RoosterPlanner.Data.Repositories.CategoryTest.GetAllCategoriesAsync_Should_Return_All_Categories()
  nameWithType: CategoryTest.GetAllCategoriesAsync_Should_Return_All_Categories()
- uid: RoosterPlanner.Data.Repositories.CategoryTest.GetAllCategoriesAsync_Should_Return_All_Categories*
  name: GetAllCategoriesAsync_Should_Return_All_Categories
  href: api/RoosterPlanner.Data.Repositories.CategoryTest.html#RoosterPlanner_Data_Repositories_CategoryTest_GetAllCategoriesAsync_Should_Return_All_Categories_
  commentId: Overload:RoosterPlanner.Data.Repositories.CategoryTest.GetAllCategoriesAsync_Should_Return_All_Categories
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CategoryTest.GetAllCategoriesAsync_Should_Return_All_Categories
  nameWithType: CategoryTest.GetAllCategoriesAsync_Should_Return_All_Categories
- uid: RoosterPlanner.Data.Repositories.CertificateRepository
  name: CertificateRepository
  href: api/RoosterPlanner.Data.Repositories.CertificateRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.CertificateRepository
  fullName: RoosterPlanner.Data.Repositories.CertificateRepository
  nameWithType: CertificateRepository
- uid: RoosterPlanner.Data.Repositories.CertificateRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: CertificateRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.CertificateRepository.html#RoosterPlanner_Data_Repositories_CertificateRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.CertificateRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.CertificateRepository.CertificateRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: CertificateRepository.CertificateRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.CertificateRepository.#ctor*
  name: CertificateRepository
  href: api/RoosterPlanner.Data.Repositories.CertificateRepository.html#RoosterPlanner_Data_Repositories_CertificateRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.CertificateRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CertificateRepository.CertificateRepository
  nameWithType: CertificateRepository.CertificateRepository
- uid: RoosterPlanner.Data.Repositories.CertificateRepository.GetCertificateAsync(System.Guid)
  name: GetCertificateAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.CertificateRepository.html#RoosterPlanner_Data_Repositories_CertificateRepository_GetCertificateAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.CertificateRepository.GetCertificateAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.CertificateRepository.GetCertificateAsync(System.Guid)
  nameWithType: CertificateRepository.GetCertificateAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.CertificateRepository.GetCertificateAsync*
  name: GetCertificateAsync
  href: api/RoosterPlanner.Data.Repositories.CertificateRepository.html#RoosterPlanner_Data_Repositories_CertificateRepository_GetCertificateAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.CertificateRepository.GetCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CertificateRepository.GetCertificateAsync
  nameWithType: CertificateRepository.GetCertificateAsync
- uid: RoosterPlanner.Data.Repositories.CertificateRepositoryTest
  name: CertificateRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.CertificateRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.CertificateRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.CertificateRepositoryTest
  nameWithType: CertificateRepositoryTest
- uid: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.#ctor
  name: CertificateRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.CertificateRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.CertificateRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.CertificateRepositoryTest()
  nameWithType: CertificateRepositoryTest.CertificateRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.#ctor*
  name: CertificateRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.CertificateRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.CertificateRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.CertificateRepositoryTest
  nameWithType: CertificateRepositoryTest.CertificateRepositoryTest
- uid: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Include_References
  name: GetCertificateAsync_Should_Include_References()
  href: api/RoosterPlanner.Data.Repositories.CertificateRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateRepositoryTest_GetCertificateAsync_Should_Include_References
  commentId: M:RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Include_References
  fullName: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Include_References()
  nameWithType: CertificateRepositoryTest.GetCertificateAsync_Should_Include_References()
- uid: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Include_References*
  name: GetCertificateAsync_Should_Include_References
  href: api/RoosterPlanner.Data.Repositories.CertificateRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateRepositoryTest_GetCertificateAsync_Should_Include_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Include_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Include_References
  nameWithType: CertificateRepositoryTest.GetCertificateAsync_Should_Include_References
- uid: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_CorrectEntity
  name: GetCertificateAsync_Should_Return_CorrectEntity()
  href: api/RoosterPlanner.Data.Repositories.CertificateRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateRepositoryTest_GetCertificateAsync_Should_Return_CorrectEntity
  commentId: M:RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_CorrectEntity
  fullName: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_CorrectEntity()
  nameWithType: CertificateRepositoryTest.GetCertificateAsync_Should_Return_CorrectEntity()
- uid: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_CorrectEntity*
  name: GetCertificateAsync_Should_Return_CorrectEntity
  href: api/RoosterPlanner.Data.Repositories.CertificateRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateRepositoryTest_GetCertificateAsync_Should_Return_CorrectEntity_
  commentId: Overload:RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_CorrectEntity
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_CorrectEntity
  nameWithType: CertificateRepositoryTest.GetCertificateAsync_Should_Return_CorrectEntity
- uid: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID
  name: GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID()
  href: api/RoosterPlanner.Data.Repositories.CertificateRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateRepositoryTest_GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID
  commentId: M:RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID
  fullName: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID()
  nameWithType: CertificateRepositoryTest.GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID()
- uid: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID*
  name: GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID
  href: api/RoosterPlanner.Data.Repositories.CertificateRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateRepositoryTest_GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID_
  commentId: Overload:RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CertificateRepositoryTest.GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID
  nameWithType: CertificateRepositoryTest.GetCertificateAsync_Should_Return_Exeption_When_EMPTYGUID
- uid: RoosterPlanner.Data.Repositories.CertificateTypeRepository
  name: CertificateTypeRepository
  href: api/RoosterPlanner.Data.Repositories.CertificateTypeRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.CertificateTypeRepository
  fullName: RoosterPlanner.Data.Repositories.CertificateTypeRepository
  nameWithType: CertificateTypeRepository
- uid: RoosterPlanner.Data.Repositories.CertificateTypeRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: CertificateTypeRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.CertificateTypeRepository.html#RoosterPlanner_Data_Repositories_CertificateTypeRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.CertificateTypeRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.CertificateTypeRepository.CertificateTypeRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: CertificateTypeRepository.CertificateTypeRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.CertificateTypeRepository.#ctor*
  name: CertificateTypeRepository
  href: api/RoosterPlanner.Data.Repositories.CertificateTypeRepository.html#RoosterPlanner_Data_Repositories_CertificateTypeRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.CertificateTypeRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CertificateTypeRepository.CertificateTypeRepository
  nameWithType: CertificateTypeRepository.CertificateTypeRepository
- uid: RoosterPlanner.Data.Repositories.CertificateTypeRepository.GetAllCategoriesAsync
  name: GetAllCategoriesAsync()
  href: api/RoosterPlanner.Data.Repositories.CertificateTypeRepository.html#RoosterPlanner_Data_Repositories_CertificateTypeRepository_GetAllCategoriesAsync
  commentId: M:RoosterPlanner.Data.Repositories.CertificateTypeRepository.GetAllCategoriesAsync
  fullName: RoosterPlanner.Data.Repositories.CertificateTypeRepository.GetAllCategoriesAsync()
  nameWithType: CertificateTypeRepository.GetAllCategoriesAsync()
- uid: RoosterPlanner.Data.Repositories.CertificateTypeRepository.GetAllCategoriesAsync*
  name: GetAllCategoriesAsync
  href: api/RoosterPlanner.Data.Repositories.CertificateTypeRepository.html#RoosterPlanner_Data_Repositories_CertificateTypeRepository_GetAllCategoriesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.CertificateTypeRepository.GetAllCategoriesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CertificateTypeRepository.GetAllCategoriesAsync
  nameWithType: CertificateTypeRepository.GetAllCategoriesAsync
- uid: RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest
  name: CertificateTypeRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest
  nameWithType: CertificateTypeRepositoryTest
- uid: RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.#ctor
  name: CertificateTypeRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateTypeRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.CertificateTypeRepositoryTest()
  nameWithType: CertificateTypeRepositoryTest.CertificateTypeRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.#ctor*
  name: CertificateTypeRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateTypeRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.CertificateTypeRepositoryTest
  nameWithType: CertificateTypeRepositoryTest.CertificateTypeRepositoryTest
- uid: RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.GetAllCategoriesAsync_Should_Return_All_Categories
  name: GetAllCategoriesAsync_Should_Return_All_Categories()
  href: api/RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateTypeRepositoryTest_GetAllCategoriesAsync_Should_Return_All_Categories
  commentId: M:RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.GetAllCategoriesAsync_Should_Return_All_Categories
  fullName: RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.GetAllCategoriesAsync_Should_Return_All_Categories()
  nameWithType: CertificateTypeRepositoryTest.GetAllCategoriesAsync_Should_Return_All_Categories()
- uid: RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.GetAllCategoriesAsync_Should_Return_All_Categories*
  name: GetAllCategoriesAsync_Should_Return_All_Categories
  href: api/RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.html#RoosterPlanner_Data_Repositories_CertificateTypeRepositoryTest_GetAllCategoriesAsync_Should_Return_All_Categories_
  commentId: Overload:RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.GetAllCategoriesAsync_Should_Return_All_Categories
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.CertificateTypeRepositoryTest.GetAllCategoriesAsync_Should_Return_All_Categories
  nameWithType: CertificateTypeRepositoryTest.GetAllCategoriesAsync_Should_Return_All_Categories
- uid: RoosterPlanner.Data.Repositories.DocumentRepository
  name: DocumentRepository
  href: api/RoosterPlanner.Data.Repositories.DocumentRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.DocumentRepository
  fullName: RoosterPlanner.Data.Repositories.DocumentRepository
  nameWithType: DocumentRepository
- uid: RoosterPlanner.Data.Repositories.DocumentRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: DocumentRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.DocumentRepository.html#RoosterPlanner_Data_Repositories_DocumentRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.DocumentRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.DocumentRepository.DocumentRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: DocumentRepository.DocumentRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.DocumentRepository.#ctor*
  name: DocumentRepository
  href: api/RoosterPlanner.Data.Repositories.DocumentRepository.html#RoosterPlanner_Data_Repositories_DocumentRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.DocumentRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.DocumentRepository.DocumentRepository
  nameWithType: DocumentRepository.DocumentRepository
- uid: RoosterPlanner.Data.Repositories.DocumentRepository.GetPPAsync
  name: GetPPAsync()
  href: api/RoosterPlanner.Data.Repositories.DocumentRepository.html#RoosterPlanner_Data_Repositories_DocumentRepository_GetPPAsync
  commentId: M:RoosterPlanner.Data.Repositories.DocumentRepository.GetPPAsync
  fullName: RoosterPlanner.Data.Repositories.DocumentRepository.GetPPAsync()
  nameWithType: DocumentRepository.GetPPAsync()
- uid: RoosterPlanner.Data.Repositories.DocumentRepository.GetPPAsync*
  name: GetPPAsync
  href: api/RoosterPlanner.Data.Repositories.DocumentRepository.html#RoosterPlanner_Data_Repositories_DocumentRepository_GetPPAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.DocumentRepository.GetPPAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.DocumentRepository.GetPPAsync
  nameWithType: DocumentRepository.GetPPAsync
- uid: RoosterPlanner.Data.Repositories.DocumentRepositoryTest
  name: DocumentRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.DocumentRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.DocumentRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.DocumentRepositoryTest
  nameWithType: DocumentRepositoryTest
- uid: RoosterPlanner.Data.Repositories.DocumentRepositoryTest.#ctor
  name: DocumentRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.DocumentRepositoryTest.html#RoosterPlanner_Data_Repositories_DocumentRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.DocumentRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.DocumentRepositoryTest.DocumentRepositoryTest()
  nameWithType: DocumentRepositoryTest.DocumentRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.DocumentRepositoryTest.#ctor*
  name: DocumentRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.DocumentRepositoryTest.html#RoosterPlanner_Data_Repositories_DocumentRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.DocumentRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.DocumentRepositoryTest.DocumentRepositoryTest
  nameWithType: DocumentRepositoryTest.DocumentRepositoryTest
- uid: RoosterPlanner.Data.Repositories.DocumentRepositoryTest.GetPPAsync_Should_Return_PP_Document
  name: GetPPAsync_Should_Return_PP_Document()
  href: api/RoosterPlanner.Data.Repositories.DocumentRepositoryTest.html#RoosterPlanner_Data_Repositories_DocumentRepositoryTest_GetPPAsync_Should_Return_PP_Document
  commentId: M:RoosterPlanner.Data.Repositories.DocumentRepositoryTest.GetPPAsync_Should_Return_PP_Document
  fullName: RoosterPlanner.Data.Repositories.DocumentRepositoryTest.GetPPAsync_Should_Return_PP_Document()
  nameWithType: DocumentRepositoryTest.GetPPAsync_Should_Return_PP_Document()
- uid: RoosterPlanner.Data.Repositories.DocumentRepositoryTest.GetPPAsync_Should_Return_PP_Document*
  name: GetPPAsync_Should_Return_PP_Document
  href: api/RoosterPlanner.Data.Repositories.DocumentRepositoryTest.html#RoosterPlanner_Data_Repositories_DocumentRepositoryTest_GetPPAsync_Should_Return_PP_Document_
  commentId: Overload:RoosterPlanner.Data.Repositories.DocumentRepositoryTest.GetPPAsync_Should_Return_PP_Document
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.DocumentRepositoryTest.GetPPAsync_Should_Return_PP_Document
  nameWithType: DocumentRepositoryTest.GetPPAsync_Should_Return_PP_Document
- uid: RoosterPlanner.Data.Repositories.IAvailabilityRepository
  name: IAvailabilityRepository
  href: api/RoosterPlanner.Data.Repositories.IAvailabilityRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.IAvailabilityRepository
  fullName: RoosterPlanner.Data.Repositories.IAvailabilityRepository
  nameWithType: IAvailabilityRepository
- uid: RoosterPlanner.Data.Repositories.IAvailabilityRepository.FindAvailabilitiesAsync(System.Guid,System.Guid)
  name: FindAvailabilitiesAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.IAvailabilityRepository.html#RoosterPlanner_Data_Repositories_IAvailabilityRepository_FindAvailabilitiesAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IAvailabilityRepository.FindAvailabilitiesAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IAvailabilityRepository.FindAvailabilitiesAsync(System.Guid, System.Guid)
  nameWithType: IAvailabilityRepository.FindAvailabilitiesAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.IAvailabilityRepository.FindAvailabilitiesAsync*
  name: FindAvailabilitiesAsync
  href: api/RoosterPlanner.Data.Repositories.IAvailabilityRepository.html#RoosterPlanner_Data_Repositories_IAvailabilityRepository_FindAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IAvailabilityRepository.FindAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IAvailabilityRepository.FindAvailabilitiesAsync
  nameWithType: IAvailabilityRepository.FindAvailabilitiesAsync
- uid: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetActiveAvailabilities(System.Guid)
  name: GetActiveAvailabilities(Guid)
  href: api/RoosterPlanner.Data.Repositories.IAvailabilityRepository.html#RoosterPlanner_Data_Repositories_IAvailabilityRepository_GetActiveAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetActiveAvailabilities(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetActiveAvailabilities(System.Guid)
  nameWithType: IAvailabilityRepository.GetActiveAvailabilities(Guid)
- uid: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetActiveAvailabilities*
  name: GetActiveAvailabilities
  href: api/RoosterPlanner.Data.Repositories.IAvailabilityRepository.html#RoosterPlanner_Data_Repositories_IAvailabilityRepository_GetActiveAvailabilities_
  commentId: Overload:RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetActiveAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetActiveAvailabilities
  nameWithType: IAvailabilityRepository.GetActiveAvailabilities
- uid: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetAvailability(System.Guid,System.Guid)
  name: GetAvailability(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.IAvailabilityRepository.html#RoosterPlanner_Data_Repositories_IAvailabilityRepository_GetAvailability_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetAvailability(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetAvailability(System.Guid, System.Guid)
  nameWithType: IAvailabilityRepository.GetAvailability(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetAvailability*
  name: GetAvailability
  href: api/RoosterPlanner.Data.Repositories.IAvailabilityRepository.html#RoosterPlanner_Data_Repositories_IAvailabilityRepository_GetAvailability_
  commentId: Overload:RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetAvailability
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetAvailability
  nameWithType: IAvailabilityRepository.GetAvailability
- uid: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetScheduledAvailabilities(System.Guid)
  name: GetScheduledAvailabilities(Guid)
  href: api/RoosterPlanner.Data.Repositories.IAvailabilityRepository.html#RoosterPlanner_Data_Repositories_IAvailabilityRepository_GetScheduledAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetScheduledAvailabilities(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetScheduledAvailabilities(System.Guid)
  nameWithType: IAvailabilityRepository.GetScheduledAvailabilities(Guid)
- uid: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetScheduledAvailabilities(System.Guid,System.DateTime)
  name: GetScheduledAvailabilities(Guid, DateTime)
  href: api/RoosterPlanner.Data.Repositories.IAvailabilityRepository.html#RoosterPlanner_Data_Repositories_IAvailabilityRepository_GetScheduledAvailabilities_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetScheduledAvailabilities(System.Guid,System.DateTime)
  fullName: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetScheduledAvailabilities(System.Guid, System.DateTime)
  nameWithType: IAvailabilityRepository.GetScheduledAvailabilities(Guid, DateTime)
- uid: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetScheduledAvailabilities*
  name: GetScheduledAvailabilities
  href: api/RoosterPlanner.Data.Repositories.IAvailabilityRepository.html#RoosterPlanner_Data_Repositories_IAvailabilityRepository_GetScheduledAvailabilities_
  commentId: Overload:RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetScheduledAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IAvailabilityRepository.GetScheduledAvailabilities
  nameWithType: IAvailabilityRepository.GetScheduledAvailabilities
- uid: RoosterPlanner.Data.Repositories.ICategoryRepository
  name: ICategoryRepository
  href: api/RoosterPlanner.Data.Repositories.ICategoryRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.ICategoryRepository
  fullName: RoosterPlanner.Data.Repositories.ICategoryRepository
  nameWithType: ICategoryRepository
- uid: RoosterPlanner.Data.Repositories.ICategoryRepository.GetAllCategoriesAsync
  name: GetAllCategoriesAsync()
  href: api/RoosterPlanner.Data.Repositories.ICategoryRepository.html#RoosterPlanner_Data_Repositories_ICategoryRepository_GetAllCategoriesAsync
  commentId: M:RoosterPlanner.Data.Repositories.ICategoryRepository.GetAllCategoriesAsync
  fullName: RoosterPlanner.Data.Repositories.ICategoryRepository.GetAllCategoriesAsync()
  nameWithType: ICategoryRepository.GetAllCategoriesAsync()
- uid: RoosterPlanner.Data.Repositories.ICategoryRepository.GetAllCategoriesAsync*
  name: GetAllCategoriesAsync
  href: api/RoosterPlanner.Data.Repositories.ICategoryRepository.html#RoosterPlanner_Data_Repositories_ICategoryRepository_GetAllCategoriesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ICategoryRepository.GetAllCategoriesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ICategoryRepository.GetAllCategoriesAsync
  nameWithType: ICategoryRepository.GetAllCategoriesAsync
- uid: RoosterPlanner.Data.Repositories.ICertificateRepository
  name: ICertificateRepository
  href: api/RoosterPlanner.Data.Repositories.ICertificateRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.ICertificateRepository
  fullName: RoosterPlanner.Data.Repositories.ICertificateRepository
  nameWithType: ICertificateRepository
- uid: RoosterPlanner.Data.Repositories.ICertificateRepository.GetCertificateAsync(System.Guid)
  name: GetCertificateAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ICertificateRepository.html#RoosterPlanner_Data_Repositories_ICertificateRepository_GetCertificateAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ICertificateRepository.GetCertificateAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ICertificateRepository.GetCertificateAsync(System.Guid)
  nameWithType: ICertificateRepository.GetCertificateAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ICertificateRepository.GetCertificateAsync*
  name: GetCertificateAsync
  href: api/RoosterPlanner.Data.Repositories.ICertificateRepository.html#RoosterPlanner_Data_Repositories_ICertificateRepository_GetCertificateAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ICertificateRepository.GetCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ICertificateRepository.GetCertificateAsync
  nameWithType: ICertificateRepository.GetCertificateAsync
- uid: RoosterPlanner.Data.Repositories.ICertificateTypeRepository
  name: ICertificateTypeRepository
  href: api/RoosterPlanner.Data.Repositories.ICertificateTypeRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.ICertificateTypeRepository
  fullName: RoosterPlanner.Data.Repositories.ICertificateTypeRepository
  nameWithType: ICertificateTypeRepository
- uid: RoosterPlanner.Data.Repositories.ICertificateTypeRepository.GetAllCategoriesAsync
  name: GetAllCategoriesAsync()
  href: api/RoosterPlanner.Data.Repositories.ICertificateTypeRepository.html#RoosterPlanner_Data_Repositories_ICertificateTypeRepository_GetAllCategoriesAsync
  commentId: M:RoosterPlanner.Data.Repositories.ICertificateTypeRepository.GetAllCategoriesAsync
  fullName: RoosterPlanner.Data.Repositories.ICertificateTypeRepository.GetAllCategoriesAsync()
  nameWithType: ICertificateTypeRepository.GetAllCategoriesAsync()
- uid: RoosterPlanner.Data.Repositories.ICertificateTypeRepository.GetAllCategoriesAsync*
  name: GetAllCategoriesAsync
  href: api/RoosterPlanner.Data.Repositories.ICertificateTypeRepository.html#RoosterPlanner_Data_Repositories_ICertificateTypeRepository_GetAllCategoriesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ICertificateTypeRepository.GetAllCategoriesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ICertificateTypeRepository.GetAllCategoriesAsync
  nameWithType: ICertificateTypeRepository.GetAllCategoriesAsync
- uid: RoosterPlanner.Data.Repositories.IDocumentRepository
  name: IDocumentRepository
  href: api/RoosterPlanner.Data.Repositories.IDocumentRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.IDocumentRepository
  fullName: RoosterPlanner.Data.Repositories.IDocumentRepository
  nameWithType: IDocumentRepository
- uid: RoosterPlanner.Data.Repositories.IDocumentRepository.GetPPAsync
  name: GetPPAsync()
  href: api/RoosterPlanner.Data.Repositories.IDocumentRepository.html#RoosterPlanner_Data_Repositories_IDocumentRepository_GetPPAsync
  commentId: M:RoosterPlanner.Data.Repositories.IDocumentRepository.GetPPAsync
  fullName: RoosterPlanner.Data.Repositories.IDocumentRepository.GetPPAsync()
  nameWithType: IDocumentRepository.GetPPAsync()
- uid: RoosterPlanner.Data.Repositories.IDocumentRepository.GetPPAsync*
  name: GetPPAsync
  href: api/RoosterPlanner.Data.Repositories.IDocumentRepository.html#RoosterPlanner_Data_Repositories_IDocumentRepository_GetPPAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IDocumentRepository.GetPPAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IDocumentRepository.GetPPAsync
  nameWithType: IDocumentRepository.GetPPAsync
- uid: RoosterPlanner.Data.Repositories.IManagerRepository
  name: IManagerRepository
  href: api/RoosterPlanner.Data.Repositories.IManagerRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.IManagerRepository
  fullName: RoosterPlanner.Data.Repositories.IManagerRepository
  nameWithType: IManagerRepository
- uid: RoosterPlanner.Data.Repositories.IManagerRepository.GetManagerAsync(System.Guid,System.Guid)
  name: GetManagerAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.IManagerRepository.html#RoosterPlanner_Data_Repositories_IManagerRepository_GetManagerAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IManagerRepository.GetManagerAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IManagerRepository.GetManagerAsync(System.Guid, System.Guid)
  nameWithType: IManagerRepository.GetManagerAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.IManagerRepository.GetManagerAsync*
  name: GetManagerAsync
  href: api/RoosterPlanner.Data.Repositories.IManagerRepository.html#RoosterPlanner_Data_Repositories_IManagerRepository_GetManagerAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IManagerRepository.GetManagerAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IManagerRepository.GetManagerAsync
  nameWithType: IManagerRepository.GetManagerAsync
- uid: RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectManagersAsync(System.Guid)
  name: GetProjectManagersAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IManagerRepository.html#RoosterPlanner_Data_Repositories_IManagerRepository_GetProjectManagersAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectManagersAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectManagersAsync(System.Guid)
  nameWithType: IManagerRepository.GetProjectManagersAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectManagersAsync*
  name: GetProjectManagersAsync
  href: api/RoosterPlanner.Data.Repositories.IManagerRepository.html#RoosterPlanner_Data_Repositories_IManagerRepository_GetProjectManagersAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectManagersAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectManagersAsync
  nameWithType: IManagerRepository.GetProjectManagersAsync
- uid: RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectsManagedByAsync(System.Guid)
  name: GetProjectsManagedByAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IManagerRepository.html#RoosterPlanner_Data_Repositories_IManagerRepository_GetProjectsManagedByAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectsManagedByAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectsManagedByAsync(System.Guid)
  nameWithType: IManagerRepository.GetProjectsManagedByAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectsManagedByAsync*
  name: GetProjectsManagedByAsync
  href: api/RoosterPlanner.Data.Repositories.IManagerRepository.html#RoosterPlanner_Data_Repositories_IManagerRepository_GetProjectsManagedByAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectsManagedByAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IManagerRepository.GetProjectsManagedByAsync
  nameWithType: IManagerRepository.GetProjectsManagedByAsync
- uid: RoosterPlanner.Data.Repositories.IManagerRepository.UserManagesOtherProjectsAsync(System.Guid)
  name: UserManagesOtherProjectsAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IManagerRepository.html#RoosterPlanner_Data_Repositories_IManagerRepository_UserManagesOtherProjectsAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IManagerRepository.UserManagesOtherProjectsAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IManagerRepository.UserManagesOtherProjectsAsync(System.Guid)
  nameWithType: IManagerRepository.UserManagesOtherProjectsAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IManagerRepository.UserManagesOtherProjectsAsync*
  name: UserManagesOtherProjectsAsync
  href: api/RoosterPlanner.Data.Repositories.IManagerRepository.html#RoosterPlanner_Data_Repositories_IManagerRepository_UserManagesOtherProjectsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IManagerRepository.UserManagesOtherProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IManagerRepository.UserManagesOtherProjectsAsync
  nameWithType: IManagerRepository.UserManagesOtherProjectsAsync
- uid: RoosterPlanner.Data.Repositories.IParticipationRepository
  name: IParticipationRepository
  href: api/RoosterPlanner.Data.Repositories.IParticipationRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.IParticipationRepository
  fullName: RoosterPlanner.Data.Repositories.IParticipationRepository
  nameWithType: IParticipationRepository
- uid: RoosterPlanner.Data.Repositories.IParticipationRepository.GetActiveParticipationsAsync(System.Guid)
  name: GetActiveParticipationsAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IParticipationRepository.html#RoosterPlanner_Data_Repositories_IParticipationRepository_GetActiveParticipationsAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IParticipationRepository.GetActiveParticipationsAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IParticipationRepository.GetActiveParticipationsAsync(System.Guid)
  nameWithType: IParticipationRepository.GetActiveParticipationsAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IParticipationRepository.GetActiveParticipationsAsync*
  name: GetActiveParticipationsAsync
  href: api/RoosterPlanner.Data.Repositories.IParticipationRepository.html#RoosterPlanner_Data_Repositories_IParticipationRepository_GetActiveParticipationsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IParticipationRepository.GetActiveParticipationsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IParticipationRepository.GetActiveParticipationsAsync
  nameWithType: IParticipationRepository.GetActiveParticipationsAsync
- uid: RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipations(System.Guid)
  name: GetParticipations(Guid)
  href: api/RoosterPlanner.Data.Repositories.IParticipationRepository.html#RoosterPlanner_Data_Repositories_IParticipationRepository_GetParticipations_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipations(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipations(System.Guid)
  nameWithType: IParticipationRepository.GetParticipations(Guid)
- uid: RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipations*
  name: GetParticipations
  href: api/RoosterPlanner.Data.Repositories.IParticipationRepository.html#RoosterPlanner_Data_Repositories_IParticipationRepository_GetParticipations_
  commentId: Overload:RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipations
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipations
  nameWithType: IParticipationRepository.GetParticipations
- uid: RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipationsWithAvailabilities(System.Guid)
  name: GetParticipationsWithAvailabilities(Guid)
  href: api/RoosterPlanner.Data.Repositories.IParticipationRepository.html#RoosterPlanner_Data_Repositories_IParticipationRepository_GetParticipationsWithAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipationsWithAvailabilities(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipationsWithAvailabilities(System.Guid)
  nameWithType: IParticipationRepository.GetParticipationsWithAvailabilities(Guid)
- uid: RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipationsWithAvailabilities*
  name: GetParticipationsWithAvailabilities
  href: api/RoosterPlanner.Data.Repositories.IParticipationRepository.html#RoosterPlanner_Data_Repositories_IParticipationRepository_GetParticipationsWithAvailabilities_
  commentId: Overload:RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipationsWithAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IParticipationRepository.GetParticipationsWithAvailabilities
  nameWithType: IParticipationRepository.GetParticipationsWithAvailabilities
- uid: RoosterPlanner.Data.Repositories.IParticipationRepository.GetSpecificParticipationAsync(System.Guid,System.Guid)
  name: GetSpecificParticipationAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.IParticipationRepository.html#RoosterPlanner_Data_Repositories_IParticipationRepository_GetSpecificParticipationAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IParticipationRepository.GetSpecificParticipationAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IParticipationRepository.GetSpecificParticipationAsync(System.Guid, System.Guid)
  nameWithType: IParticipationRepository.GetSpecificParticipationAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.IParticipationRepository.GetSpecificParticipationAsync*
  name: GetSpecificParticipationAsync
  href: api/RoosterPlanner.Data.Repositories.IParticipationRepository.html#RoosterPlanner_Data_Repositories_IParticipationRepository_GetSpecificParticipationAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IParticipationRepository.GetSpecificParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IParticipationRepository.GetSpecificParticipationAsync
  nameWithType: IParticipationRepository.GetSpecificParticipationAsync
- uid: RoosterPlanner.Data.Repositories.IPersonRepository
  name: IPersonRepository
  href: api/RoosterPlanner.Data.Repositories.IPersonRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.IPersonRepository
  fullName: RoosterPlanner.Data.Repositories.IPersonRepository
  nameWithType: IPersonRepository
- uid: RoosterPlanner.Data.Repositories.IPersonRepository.GetPersonByOidAsync(System.Guid)
  name: GetPersonByOidAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IPersonRepository.html#RoosterPlanner_Data_Repositories_IPersonRepository_GetPersonByOidAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IPersonRepository.GetPersonByOidAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IPersonRepository.GetPersonByOidAsync(System.Guid)
  nameWithType: IPersonRepository.GetPersonByOidAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IPersonRepository.GetPersonByOidAsync*
  name: GetPersonByOidAsync
  href: api/RoosterPlanner.Data.Repositories.IPersonRepository.html#RoosterPlanner_Data_Repositories_IPersonRepository_GetPersonByOidAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IPersonRepository.GetPersonByOidAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IPersonRepository.GetPersonByOidAsync
  nameWithType: IPersonRepository.GetPersonByOidAsync
- uid: RoosterPlanner.Data.Repositories.IProjectRepository
  name: IProjectRepository
  href: api/RoosterPlanner.Data.Repositories.IProjectRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.IProjectRepository
  fullName: RoosterPlanner.Data.Repositories.IProjectRepository
  nameWithType: IProjectRepository
- uid: RoosterPlanner.Data.Repositories.IProjectRepository.GetProjectDetailsAsync(System.Guid)
  name: GetProjectDetailsAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IProjectRepository.html#RoosterPlanner_Data_Repositories_IProjectRepository_GetProjectDetailsAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IProjectRepository.GetProjectDetailsAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IProjectRepository.GetProjectDetailsAsync(System.Guid)
  nameWithType: IProjectRepository.GetProjectDetailsAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IProjectRepository.GetProjectDetailsAsync*
  name: GetProjectDetailsAsync
  href: api/RoosterPlanner.Data.Repositories.IProjectRepository.html#RoosterPlanner_Data_Repositories_IProjectRepository_GetProjectDetailsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IProjectRepository.GetProjectDetailsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IProjectRepository.GetProjectDetailsAsync
  nameWithType: IProjectRepository.GetProjectDetailsAsync
- uid: RoosterPlanner.Data.Repositories.IProjectRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  name: SearchProjectsAsync(ProjectFilter)
  href: api/RoosterPlanner.Data.Repositories.IProjectRepository.html#RoosterPlanner_Data_Repositories_IProjectRepository_SearchProjectsAsync_RoosterPlanner_Models_FilterModels_ProjectFilter_
  commentId: M:RoosterPlanner.Data.Repositories.IProjectRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  fullName: RoosterPlanner.Data.Repositories.IProjectRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  nameWithType: IProjectRepository.SearchProjectsAsync(ProjectFilter)
- uid: RoosterPlanner.Data.Repositories.IProjectRepository.SearchProjectsAsync*
  name: SearchProjectsAsync
  href: api/RoosterPlanner.Data.Repositories.IProjectRepository.html#RoosterPlanner_Data_Repositories_IProjectRepository_SearchProjectsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IProjectRepository.SearchProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IProjectRepository.SearchProjectsAsync
  nameWithType: IProjectRepository.SearchProjectsAsync
- uid: RoosterPlanner.Data.Repositories.IProjectTaskRepository
  name: IProjectTaskRepository
  href: api/RoosterPlanner.Data.Repositories.IProjectTaskRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.IProjectTaskRepository
  fullName: RoosterPlanner.Data.Repositories.IProjectTaskRepository
  nameWithType: IProjectTaskRepository
- uid: RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetAllFromProjectAsync(System.Guid)
  name: GetAllFromProjectAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IProjectTaskRepository.html#RoosterPlanner_Data_Repositories_IProjectTaskRepository_GetAllFromProjectAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetAllFromProjectAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetAllFromProjectAsync(System.Guid)
  nameWithType: IProjectTaskRepository.GetAllFromProjectAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetAllFromProjectAsync*
  name: GetAllFromProjectAsync
  href: api/RoosterPlanner.Data.Repositories.IProjectTaskRepository.html#RoosterPlanner_Data_Repositories_IProjectTaskRepository_GetAllFromProjectAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetAllFromProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetAllFromProjectAsync
  nameWithType: IProjectTaskRepository.GetAllFromProjectAsync
- uid: RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetProjectTaskAsync(System.Guid,System.Guid)
  name: GetProjectTaskAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.IProjectTaskRepository.html#RoosterPlanner_Data_Repositories_IProjectTaskRepository_GetProjectTaskAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetProjectTaskAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetProjectTaskAsync(System.Guid, System.Guid)
  nameWithType: IProjectTaskRepository.GetProjectTaskAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetProjectTaskAsync*
  name: GetProjectTaskAsync
  href: api/RoosterPlanner.Data.Repositories.IProjectTaskRepository.html#RoosterPlanner_Data_Repositories_IProjectTaskRepository_GetProjectTaskAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetProjectTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IProjectTaskRepository.GetProjectTaskAsync
  nameWithType: IProjectTaskRepository.GetProjectTaskAsync
- uid: RoosterPlanner.Data.Repositories.IRequirementRepository
  name: IRequirementRepository
  href: api/RoosterPlanner.Data.Repositories.IRequirementRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.IRequirementRepository
  fullName: RoosterPlanner.Data.Repositories.IRequirementRepository
  nameWithType: IRequirementRepository
- uid: RoosterPlanner.Data.Repositories.IRequirementRepository.GetRequirementAsync(System.Guid)
  name: GetRequirementAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IRequirementRepository.html#RoosterPlanner_Data_Repositories_IRequirementRepository_GetRequirementAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IRequirementRepository.GetRequirementAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IRequirementRepository.GetRequirementAsync(System.Guid)
  nameWithType: IRequirementRepository.GetRequirementAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IRequirementRepository.GetRequirementAsync(System.Guid,System.Guid)
  name: GetRequirementAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.IRequirementRepository.html#RoosterPlanner_Data_Repositories_IRequirementRepository_GetRequirementAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IRequirementRepository.GetRequirementAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IRequirementRepository.GetRequirementAsync(System.Guid, System.Guid)
  nameWithType: IRequirementRepository.GetRequirementAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.IRequirementRepository.GetRequirementAsync*
  name: GetRequirementAsync
  href: api/RoosterPlanner.Data.Repositories.IRequirementRepository.html#RoosterPlanner_Data_Repositories_IRequirementRepository_GetRequirementAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IRequirementRepository.GetRequirementAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IRequirementRepository.GetRequirementAsync
  nameWithType: IRequirementRepository.GetRequirementAsync
- uid: RoosterPlanner.Data.Repositories.IShiftRepository
  name: IShiftRepository
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.IShiftRepository
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository
  nameWithType: IShiftRepository
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.AddShiftsAsync(System.Collections.Generic.List{RoosterPlanner.Models.Shift})
  name: AddShiftsAsync(List<Shift>)
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_AddShiftsAsync_System_Collections_Generic_List_RoosterPlanner_Models_Shift__
  commentId: M:RoosterPlanner.Data.Repositories.IShiftRepository.AddShiftsAsync(System.Collections.Generic.List{RoosterPlanner.Models.Shift})
  name.vb: AddShiftsAsync(List(Of Shift))
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.AddShiftsAsync(System.Collections.Generic.List<RoosterPlanner.Models.Shift>)
  fullName.vb: RoosterPlanner.Data.Repositories.IShiftRepository.AddShiftsAsync(System.Collections.Generic.List(Of RoosterPlanner.Models.Shift))
  nameWithType: IShiftRepository.AddShiftsAsync(List<Shift>)
  nameWithType.vb: IShiftRepository.AddShiftsAsync(List(Of Shift))
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.AddShiftsAsync*
  name: AddShiftsAsync
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_AddShiftsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IShiftRepository.AddShiftsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.AddShiftsAsync
  nameWithType: IShiftRepository.AddShiftsAsync
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.ExportDataAsync(System.Guid)
  name: ExportDataAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_ExportDataAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IShiftRepository.ExportDataAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.ExportDataAsync(System.Guid)
  nameWithType: IShiftRepository.ExportDataAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.ExportDataAsync*
  name: ExportDataAsync
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_ExportDataAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IShiftRepository.ExportDataAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.ExportDataAsync
  nameWithType: IShiftRepository.ExportDataAsync
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync(System.Guid,System.DateTime)
  name: GetByProjectAndDateWithAvailabilitiesAsync(Guid, DateTime)
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetByProjectAndDateWithAvailabilitiesAsync_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync(System.Guid,System.DateTime)
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync(System.Guid, System.DateTime)
  nameWithType: IShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync(Guid, DateTime)
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync*
  name: GetByProjectAndDateWithAvailabilitiesAsync
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetByProjectAndDateWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync
  nameWithType: IShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectUserAndDateAsync(System.Guid,System.Guid,System.DateTime)
  name: GetByProjectUserAndDateAsync(Guid, Guid, DateTime)
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetByProjectUserAndDateAsync_System_Guid_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectUserAndDateAsync(System.Guid,System.Guid,System.DateTime)
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectUserAndDateAsync(System.Guid, System.Guid, System.DateTime)
  nameWithType: IShiftRepository.GetByProjectUserAndDateAsync(Guid, Guid, DateTime)
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectUserAndDateAsync*
  name: GetByProjectUserAndDateAsync
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetByProjectUserAndDateAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectUserAndDateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectUserAndDateAsync
  nameWithType: IShiftRepository.GetByProjectUserAndDateAsync
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid)
  name: GetByProjectWithAvailabilitiesAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetByProjectWithAvailabilitiesAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid)
  nameWithType: IShiftRepository.GetByProjectWithAvailabilitiesAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid,System.Guid)
  name: GetByProjectWithAvailabilitiesAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetByProjectWithAvailabilitiesAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid, System.Guid)
  nameWithType: IShiftRepository.GetByProjectWithAvailabilitiesAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectWithAvailabilitiesAsync*
  name: GetByProjectWithAvailabilitiesAsync
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetByProjectWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetByProjectWithAvailabilitiesAsync
  nameWithType: IShiftRepository.GetByProjectWithAvailabilitiesAsync
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftAsync(System.Guid)
  name: GetShiftAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetShiftAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftAsync(System.Guid)
  nameWithType: IShiftRepository.GetShiftAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftAsync*
  name: GetShiftAsync
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetShiftAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftAsync
  nameWithType: IShiftRepository.GetShiftAsync
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftWithAvailabilitiesAsync(System.Guid)
  name: GetShiftWithAvailabilitiesAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetShiftWithAvailabilitiesAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftWithAvailabilitiesAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftWithAvailabilitiesAsync(System.Guid)
  nameWithType: IShiftRepository.GetShiftWithAvailabilitiesAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftWithAvailabilitiesAsync*
  name: GetShiftWithAvailabilitiesAsync
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetShiftWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetShiftWithAvailabilitiesAsync
  nameWithType: IShiftRepository.GetShiftWithAvailabilitiesAsync
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetUniqueDataAsync(System.Guid)
  name: GetUniqueDataAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetUniqueDataAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.IShiftRepository.GetUniqueDataAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetUniqueDataAsync(System.Guid)
  nameWithType: IShiftRepository.GetUniqueDataAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.GetUniqueDataAsync*
  name: GetUniqueDataAsync
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_GetUniqueDataAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IShiftRepository.GetUniqueDataAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.GetUniqueDataAsync
  nameWithType: IShiftRepository.GetUniqueDataAsync
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  name: SearchProjectsAsync(ShiftFilter)
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_SearchProjectsAsync_RoosterPlanner_Models_FilterModels_ShiftFilter_
  commentId: M:RoosterPlanner.Data.Repositories.IShiftRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  nameWithType: IShiftRepository.SearchProjectsAsync(ShiftFilter)
- uid: RoosterPlanner.Data.Repositories.IShiftRepository.SearchProjectsAsync*
  name: SearchProjectsAsync
  href: api/RoosterPlanner.Data.Repositories.IShiftRepository.html#RoosterPlanner_Data_Repositories_IShiftRepository_SearchProjectsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.IShiftRepository.SearchProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.IShiftRepository.SearchProjectsAsync
  nameWithType: IShiftRepository.SearchProjectsAsync
- uid: RoosterPlanner.Data.Repositories.ITaskRepository
  name: ITaskRepository
  href: api/RoosterPlanner.Data.Repositories.ITaskRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.ITaskRepository
  fullName: RoosterPlanner.Data.Repositories.ITaskRepository
  nameWithType: ITaskRepository
- uid: RoosterPlanner.Data.Repositories.ITaskRepository.GetTaskAsync(System.Guid)
  name: GetTaskAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ITaskRepository.html#RoosterPlanner_Data_Repositories_ITaskRepository_GetTaskAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ITaskRepository.GetTaskAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ITaskRepository.GetTaskAsync(System.Guid)
  nameWithType: ITaskRepository.GetTaskAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ITaskRepository.GetTaskAsync*
  name: GetTaskAsync
  href: api/RoosterPlanner.Data.Repositories.ITaskRepository.html#RoosterPlanner_Data_Repositories_ITaskRepository_GetTaskAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ITaskRepository.GetTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ITaskRepository.GetTaskAsync
  nameWithType: ITaskRepository.GetTaskAsync
- uid: RoosterPlanner.Data.Repositories.ITaskRepository.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  name: SearchTasksAsync(TaskFilter)
  href: api/RoosterPlanner.Data.Repositories.ITaskRepository.html#RoosterPlanner_Data_Repositories_ITaskRepository_SearchTasksAsync_RoosterPlanner_Models_FilterModels_TaskFilter_
  commentId: M:RoosterPlanner.Data.Repositories.ITaskRepository.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  fullName: RoosterPlanner.Data.Repositories.ITaskRepository.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  nameWithType: ITaskRepository.SearchTasksAsync(TaskFilter)
- uid: RoosterPlanner.Data.Repositories.ITaskRepository.SearchTasksAsync*
  name: SearchTasksAsync
  href: api/RoosterPlanner.Data.Repositories.ITaskRepository.html#RoosterPlanner_Data_Repositories_ITaskRepository_SearchTasksAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ITaskRepository.SearchTasksAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ITaskRepository.SearchTasksAsync
  nameWithType: ITaskRepository.SearchTasksAsync
- uid: RoosterPlanner.Data.Repositories.ManagerRepository
  name: ManagerRepository
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.ManagerRepository
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository
  nameWithType: ManagerRepository
- uid: RoosterPlanner.Data.Repositories.ManagerRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: ManagerRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html#RoosterPlanner_Data_Repositories_ManagerRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository.ManagerRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: ManagerRepository.ManagerRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.ManagerRepository.#ctor*
  name: ManagerRepository
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html#RoosterPlanner_Data_Repositories_ManagerRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository.ManagerRepository
  nameWithType: ManagerRepository.ManagerRepository
- uid: RoosterPlanner.Data.Repositories.ManagerRepository.GetManagerAsync(System.Guid,System.Guid)
  name: GetManagerAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html#RoosterPlanner_Data_Repositories_ManagerRepository_GetManagerAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepository.GetManagerAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository.GetManagerAsync(System.Guid, System.Guid)
  nameWithType: ManagerRepository.GetManagerAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.ManagerRepository.GetManagerAsync*
  name: GetManagerAsync
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html#RoosterPlanner_Data_Repositories_ManagerRepository_GetManagerAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepository.GetManagerAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository.GetManagerAsync
  nameWithType: ManagerRepository.GetManagerAsync
- uid: RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectManagersAsync(System.Guid)
  name: GetProjectManagersAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html#RoosterPlanner_Data_Repositories_ManagerRepository_GetProjectManagersAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectManagersAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectManagersAsync(System.Guid)
  nameWithType: ManagerRepository.GetProjectManagersAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectManagersAsync*
  name: GetProjectManagersAsync
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html#RoosterPlanner_Data_Repositories_ManagerRepository_GetProjectManagersAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectManagersAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectManagersAsync
  nameWithType: ManagerRepository.GetProjectManagersAsync
- uid: RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectsManagedByAsync(System.Guid)
  name: GetProjectsManagedByAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html#RoosterPlanner_Data_Repositories_ManagerRepository_GetProjectsManagedByAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectsManagedByAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectsManagedByAsync(System.Guid)
  nameWithType: ManagerRepository.GetProjectsManagedByAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectsManagedByAsync*
  name: GetProjectsManagedByAsync
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html#RoosterPlanner_Data_Repositories_ManagerRepository_GetProjectsManagedByAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectsManagedByAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository.GetProjectsManagedByAsync
  nameWithType: ManagerRepository.GetProjectsManagedByAsync
- uid: RoosterPlanner.Data.Repositories.ManagerRepository.UserManagesOtherProjectsAsync(System.Guid)
  name: UserManagesOtherProjectsAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html#RoosterPlanner_Data_Repositories_ManagerRepository_UserManagesOtherProjectsAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepository.UserManagesOtherProjectsAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository.UserManagesOtherProjectsAsync(System.Guid)
  nameWithType: ManagerRepository.UserManagesOtherProjectsAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ManagerRepository.UserManagesOtherProjectsAsync*
  name: UserManagesOtherProjectsAsync
  href: api/RoosterPlanner.Data.Repositories.ManagerRepository.html#RoosterPlanner_Data_Repositories_ManagerRepository_UserManagesOtherProjectsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepository.UserManagesOtherProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepository.UserManagesOtherProjectsAsync
  nameWithType: ManagerRepository.UserManagesOtherProjectsAsync
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest
  name: ManagerRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.ManagerRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest
  nameWithType: ManagerRepositoryTest
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.#ctor
  name: ManagerRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.ManagerRepositoryTest()
  nameWithType: ManagerRepositoryTest.ManagerRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.#ctor*
  name: ManagerRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.ManagerRepositoryTest
  nameWithType: ManagerRepositoryTest.ManagerRepositoryTest
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Include_Related_Data
  name: GetManagerAsync_Should_Include_Related_Data()
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetManagerAsync_Should_Include_Related_Data
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Include_Related_Data
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Include_Related_Data()
  nameWithType: ManagerRepositoryTest.GetManagerAsync_Should_Include_Related_Data()
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Include_Related_Data*
  name: GetManagerAsync_Should_Include_Related_Data
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetManagerAsync_Should_Include_Related_Data_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Include_Related_Data
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Include_Related_Data
  nameWithType: ManagerRepositoryTest.GetManagerAsync_Should_Include_Related_Data
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS(System.String,System.String)
  name: GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS(String, String)
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS_System_String_System_String_
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS(System.String,System.String)
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS(System.String, System.String)
  nameWithType: ManagerRepositoryTest.GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS(String, String)
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS*
  name: GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  nameWithType: ManagerRepositoryTest.GetManagerAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Include_Related_Data
  name: GetProjectManagersAsync_Should_Include_Related_Data()
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetProjectManagersAsync_Should_Include_Related_Data
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Include_Related_Data
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Include_Related_Data()
  nameWithType: ManagerRepositoryTest.GetProjectManagersAsync_Should_Include_Related_Data()
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Include_Related_Data*
  name: GetProjectManagersAsync_Should_Include_Related_Data
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetProjectManagersAsync_Should_Include_Related_Data_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Include_Related_Data
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Include_Related_Data
  nameWithType: ManagerRepositoryTest.GetProjectManagersAsync_Should_Include_Related_Data
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  name: GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
  nameWithType: ManagerRepositoryTest.GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS*
  name: GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  nameWithType: ManagerRepositoryTest.GetProjectManagersAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Include_Related_Data
  name: GetProjectsManagedByAsync_Should_Include_Related_Data()
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetProjectsManagedByAsync_Should_Include_Related_Data
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Include_Related_Data
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Include_Related_Data()
  nameWithType: ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Include_Related_Data()
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Include_Related_Data*
  name: GetProjectsManagedByAsync_Should_Include_Related_Data
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetProjectsManagedByAsync_Should_Include_Related_Data_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Include_Related_Data
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Include_Related_Data
  nameWithType: ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Include_Related_Data
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  name: GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
  nameWithType: ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS*
  name: GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  nameWithType: ManagerRepositoryTest.GetProjectsManagedByAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Return_Correct_Entities
  name: UserManagesOtherProjectsAsync_Should_Return_Correct_Entities()
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_UserManagesOtherProjectsAsync_Should_Return_Correct_Entities
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Return_Correct_Entities
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Return_Correct_Entities()
  nameWithType: ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Return_Correct_Entities()
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Return_Correct_Entities*
  name: UserManagesOtherProjectsAsync_Should_Return_Correct_Entities
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_UserManagesOtherProjectsAsync_Should_Return_Correct_Entities_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Return_Correct_Entities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Return_Correct_Entities
  nameWithType: ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Return_Correct_Entities
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  name: UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID()
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  commentId: M:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID()
  nameWithType: ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID()
- uid: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID*
  name: UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  href: api/RoosterPlanner.Data.Repositories.ManagerRepositoryTest.html#RoosterPlanner_Data_Repositories_ManagerRepositoryTest_UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID_
  commentId: Overload:RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  nameWithType: ManagerRepositoryTest.UserManagesOtherProjectsAsync_Should_Throw_Exception_When_Id_EMPTYGUID
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository
  name: ParticipationRepository
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.ParticipationRepository
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository
  nameWithType: ParticipationRepository
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: ParticipationRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html#RoosterPlanner_Data_Repositories_ParticipationRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository.ParticipationRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: ParticipationRepository.ParticipationRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository.#ctor*
  name: ParticipationRepository
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html#RoosterPlanner_Data_Repositories_ParticipationRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository.ParticipationRepository
  nameWithType: ParticipationRepository.ParticipationRepository
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository.GetActiveParticipationsAsync(System.Guid)
  name: GetActiveParticipationsAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html#RoosterPlanner_Data_Repositories_ParticipationRepository_GetActiveParticipationsAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepository.GetActiveParticipationsAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository.GetActiveParticipationsAsync(System.Guid)
  nameWithType: ParticipationRepository.GetActiveParticipationsAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository.GetActiveParticipationsAsync*
  name: GetActiveParticipationsAsync
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html#RoosterPlanner_Data_Repositories_ParticipationRepository_GetActiveParticipationsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepository.GetActiveParticipationsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository.GetActiveParticipationsAsync
  nameWithType: ParticipationRepository.GetActiveParticipationsAsync
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipations(System.Guid)
  name: GetParticipations(Guid)
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html#RoosterPlanner_Data_Repositories_ParticipationRepository_GetParticipations_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipations(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipations(System.Guid)
  nameWithType: ParticipationRepository.GetParticipations(Guid)
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipations*
  name: GetParticipations
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html#RoosterPlanner_Data_Repositories_ParticipationRepository_GetParticipations_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipations
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipations
  nameWithType: ParticipationRepository.GetParticipations
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipationsWithAvailabilities(System.Guid)
  name: GetParticipationsWithAvailabilities(Guid)
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html#RoosterPlanner_Data_Repositories_ParticipationRepository_GetParticipationsWithAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipationsWithAvailabilities(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipationsWithAvailabilities(System.Guid)
  nameWithType: ParticipationRepository.GetParticipationsWithAvailabilities(Guid)
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipationsWithAvailabilities*
  name: GetParticipationsWithAvailabilities
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html#RoosterPlanner_Data_Repositories_ParticipationRepository_GetParticipationsWithAvailabilities_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipationsWithAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository.GetParticipationsWithAvailabilities
  nameWithType: ParticipationRepository.GetParticipationsWithAvailabilities
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository.GetSpecificParticipationAsync(System.Guid,System.Guid)
  name: GetSpecificParticipationAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html#RoosterPlanner_Data_Repositories_ParticipationRepository_GetSpecificParticipationAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepository.GetSpecificParticipationAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository.GetSpecificParticipationAsync(System.Guid, System.Guid)
  nameWithType: ParticipationRepository.GetSpecificParticipationAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.ParticipationRepository.GetSpecificParticipationAsync*
  name: GetSpecificParticipationAsync
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepository.html#RoosterPlanner_Data_Repositories_ParticipationRepository_GetSpecificParticipationAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepository.GetSpecificParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepository.GetSpecificParticipationAsync
  nameWithType: ParticipationRepository.GetSpecificParticipationAsync
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest
  name: ParticipationRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest
  nameWithType: ParticipationRepositoryTest
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.#ctor
  name: ParticipationRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.ParticipationRepositoryTest()
  nameWithType: ParticipationRepositoryTest.ParticipationRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.#ctor*
  name: ParticipationRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.ParticipationRepositoryTest
  nameWithType: ParticipationRepositoryTest.ParticipationRepositoryTest
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Closed_Projects
  name: GetActiveParticipationsAsync_Should_Filter_Closed_Projects()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Filter_Closed_Projects
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Closed_Projects
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Closed_Projects()
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Closed_Projects()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Closed_Projects*
  name: GetActiveParticipationsAsync_Should_Filter_Closed_Projects
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Filter_Closed_Projects_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Closed_Projects
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Closed_Projects
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Closed_Projects
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Inactive_Participations
  name: GetActiveParticipationsAsync_Should_Filter_Inactive_Participations()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Filter_Inactive_Participations
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Inactive_Participations
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Inactive_Participations()
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Inactive_Participations()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Inactive_Participations*
  name: GetActiveParticipationsAsync_Should_Filter_Inactive_Participations
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Filter_Inactive_Participations_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Inactive_Participations
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Inactive_Participations
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_Inactive_Participations
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past
  name: GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past()
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past*
  name: GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Filter_ParticipationEndDate_In_The_Past
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null
  name: GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null()
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null*
  name: GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_ParticipationEndDate_Is_Null
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_Project_And_Person
  name: GetActiveParticipationsAsync_Should_Include_Project_And_Person()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Include_Project_And_Person
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_Project_And_Person
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_Project_And_Person()
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_Project_And_Person()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_Project_And_Person*
  name: GetActiveParticipationsAsync_Should_Include_Project_And_Person
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Include_Project_And_Person_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_Project_And_Person
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_Project_And_Person
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Include_Project_And_Person
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB
  name: GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB()
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB*
  name: GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Null_When_Person_Not_In_DB
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Throw_Exception
  name: GetActiveParticipationsAsync_Should_Return_Throw_Exception()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Return_Throw_Exception
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Throw_Exception
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Throw_Exception()
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Throw_Exception()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Throw_Exception*
  name: GetActiveParticipationsAsync_Should_Return_Throw_Exception
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetActiveParticipationsAsync_Should_Return_Throw_Exception_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Throw_Exception
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Throw_Exception
  nameWithType: ParticipationRepositoryTest.GetActiveParticipationsAsync_Should_Return_Throw_Exception
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Include_Project
  name: GetParticipations_Should_Include_Project()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipations_Should_Include_Project
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Include_Project
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Include_Project()
  nameWithType: ParticipationRepositoryTest.GetParticipations_Should_Include_Project()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Include_Project*
  name: GetParticipations_Should_Include_Project
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipations_Should_Include_Project_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Include_Project
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Include_Project
  nameWithType: ParticipationRepositoryTest.GetParticipations_Should_Include_Project
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_ID_Is_Null(System.String)
  name: GetParticipations_Should_Return_Null_When_ID_Is_Null(String)
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipations_Should_Return_Null_When_ID_Is_Null_System_String_
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_ID_Is_Null(System.String)
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_ID_Is_Null(System.String)
  nameWithType: ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_ID_Is_Null(String)
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_ID_Is_Null*
  name: GetParticipations_Should_Return_Null_When_ID_Is_Null
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipations_Should_Return_Null_When_ID_Is_Null_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_ID_Is_Null
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_ID_Is_Null
  nameWithType: ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_ID_Is_Null
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_Project_Not_In_DB
  name: GetParticipations_Should_Return_Null_When_Project_Not_In_DB()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipations_Should_Return_Null_When_Project_Not_In_DB
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_Project_Not_In_DB
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_Project_Not_In_DB()
  nameWithType: ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_Project_Not_In_DB()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_Project_Not_In_DB*
  name: GetParticipations_Should_Return_Null_When_Project_Not_In_DB
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipations_Should_Return_Null_When_Project_Not_In_DB_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_Project_Not_In_DB
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_Project_Not_In_DB
  nameWithType: ParticipationRepositoryTest.GetParticipations_Should_Return_Null_When_Project_Not_In_DB
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Include_Related_Data
  name: GetParticipationsWithAvailabilities_Should_Include_Related_Data()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipationsWithAvailabilities_Should_Include_Related_Data
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Include_Related_Data
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Include_Related_Data()
  nameWithType: ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Include_Related_Data()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Include_Related_Data*
  name: GetParticipationsWithAvailabilities_Should_Include_Related_Data
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipationsWithAvailabilities_Should_Include_Related_Data_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Include_Related_Data
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Include_Related_Data
  nameWithType: ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Include_Related_Data
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null
  name: GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null()
  nameWithType: ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null*
  name: GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null
  nameWithType: ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_ID_Is_Null
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB
  name: GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB()
  nameWithType: ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB*
  name: GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB
  nameWithType: ParticipationRepositoryTest.GetParticipationsWithAvailabilities_Should_Return_Null_When_Project_Not_In_DB
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Include_Related_Data
  name: GetSpecificParticipationAsync_Should_Include_Related_Data()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetSpecificParticipationAsync_Should_Include_Related_Data
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Include_Related_Data
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Include_Related_Data()
  nameWithType: ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Include_Related_Data()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Include_Related_Data*
  name: GetSpecificParticipationAsync_Should_Include_Related_Data
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetSpecificParticipationAsync_Should_Include_Related_Data_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Include_Related_Data
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Include_Related_Data
  nameWithType: ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Include_Related_Data
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB
  name: GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB()
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB()
  nameWithType: ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB()
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB*
  name: GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB
  nameWithType: ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_IDS_Not_In_DB
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null(System.String,System.String)
  name: GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null(String, String)
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null_System_String_System_String_
  commentId: M:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null(System.String,System.String)
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null(System.String, System.String)
  nameWithType: ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null(String, String)
- uid: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null*
  name: GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null
  href: api/RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.html#RoosterPlanner_Data_Repositories_ParticipationRepositoryTest_GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null_
  commentId: Overload:RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null
  nameWithType: ParticipationRepositoryTest.GetSpecificParticipationAsync_Should_Return_Null_When_Parameters_Null
- uid: RoosterPlanner.Data.Repositories.PersonRepository
  name: PersonRepository
  href: api/RoosterPlanner.Data.Repositories.PersonRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.PersonRepository
  fullName: RoosterPlanner.Data.Repositories.PersonRepository
  nameWithType: PersonRepository
- uid: RoosterPlanner.Data.Repositories.PersonRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: PersonRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.PersonRepository.html#RoosterPlanner_Data_Repositories_PersonRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.PersonRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.PersonRepository.PersonRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: PersonRepository.PersonRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.PersonRepository.#ctor*
  name: PersonRepository
  href: api/RoosterPlanner.Data.Repositories.PersonRepository.html#RoosterPlanner_Data_Repositories_PersonRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.PersonRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.PersonRepository.PersonRepository
  nameWithType: PersonRepository.PersonRepository
- uid: RoosterPlanner.Data.Repositories.PersonRepository.GetPersonByOidAsync(System.Guid)
  name: GetPersonByOidAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.PersonRepository.html#RoosterPlanner_Data_Repositories_PersonRepository_GetPersonByOidAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.PersonRepository.GetPersonByOidAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.PersonRepository.GetPersonByOidAsync(System.Guid)
  nameWithType: PersonRepository.GetPersonByOidAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.PersonRepository.GetPersonByOidAsync*
  name: GetPersonByOidAsync
  href: api/RoosterPlanner.Data.Repositories.PersonRepository.html#RoosterPlanner_Data_Repositories_PersonRepository_GetPersonByOidAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.PersonRepository.GetPersonByOidAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.PersonRepository.GetPersonByOidAsync
  nameWithType: PersonRepository.GetPersonByOidAsync
- uid: RoosterPlanner.Data.Repositories.PersonRepositoryTest
  name: PersonRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.PersonRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.PersonRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.PersonRepositoryTest
  nameWithType: PersonRepositoryTest
- uid: RoosterPlanner.Data.Repositories.PersonRepositoryTest.#ctor
  name: PersonRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.PersonRepositoryTest.html#RoosterPlanner_Data_Repositories_PersonRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.PersonRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.PersonRepositoryTest.PersonRepositoryTest()
  nameWithType: PersonRepositoryTest.PersonRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.PersonRepositoryTest.#ctor*
  name: PersonRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.PersonRepositoryTest.html#RoosterPlanner_Data_Repositories_PersonRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.PersonRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.PersonRepositoryTest.PersonRepositoryTest
  nameWithType: PersonRepositoryTest.PersonRepositoryTest
- uid: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates
  name: GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates()
  href: api/RoosterPlanner.Data.Repositories.PersonRepositoryTest.html#RoosterPlanner_Data_Repositories_PersonRepositoryTest_GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates
  commentId: M:RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates
  fullName: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates()
  nameWithType: PersonRepositoryTest.GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates()
- uid: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates*
  name: GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates
  href: api/RoosterPlanner.Data.Repositories.PersonRepositoryTest.html#RoosterPlanner_Data_Repositories_PersonRepositoryTest_GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates_
  commentId: Overload:RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates
  nameWithType: PersonRepositoryTest.GetPersonByOidAsync_CertificateType_Should_Not_Include_Certificates
- uid: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Empty_GUID_Should_Return_Null
  name: GetPersonByOidAsync_Empty_GUID_Should_Return_Null()
  href: api/RoosterPlanner.Data.Repositories.PersonRepositoryTest.html#RoosterPlanner_Data_Repositories_PersonRepositoryTest_GetPersonByOidAsync_Empty_GUID_Should_Return_Null
  commentId: M:RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Empty_GUID_Should_Return_Null
  fullName: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Empty_GUID_Should_Return_Null()
  nameWithType: PersonRepositoryTest.GetPersonByOidAsync_Empty_GUID_Should_Return_Null()
- uid: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Empty_GUID_Should_Return_Null*
  name: GetPersonByOidAsync_Empty_GUID_Should_Return_Null
  href: api/RoosterPlanner.Data.Repositories.PersonRepositoryTest.html#RoosterPlanner_Data_Repositories_PersonRepositoryTest_GetPersonByOidAsync_Empty_GUID_Should_Return_Null_
  commentId: Overload:RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Empty_GUID_Should_Return_Null
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Empty_GUID_Should_Return_Null
  nameWithType: PersonRepositoryTest.GetPersonByOidAsync_Empty_GUID_Should_Return_Null
- uid: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB
  name: GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB()
  href: api/RoosterPlanner.Data.Repositories.PersonRepositoryTest.html#RoosterPlanner_Data_Repositories_PersonRepositoryTest_GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB
  commentId: M:RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB
  fullName: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB()
  nameWithType: PersonRepositoryTest.GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB()
- uid: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB*
  name: GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB
  href: api/RoosterPlanner.Data.Repositories.PersonRepositoryTest.html#RoosterPlanner_Data_Repositories_PersonRepositoryTest_GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB_
  commentId: Overload:RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.PersonRepositoryTest.GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB
  nameWithType: PersonRepositoryTest.GetPersonByOidAsync_Should_Return_Null_When_ID_Not_In_DB
- uid: RoosterPlanner.Data.Repositories.ProjectRepository
  name: ProjectRepository
  href: api/RoosterPlanner.Data.Repositories.ProjectRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.ProjectRepository
  fullName: RoosterPlanner.Data.Repositories.ProjectRepository
  nameWithType: ProjectRepository
- uid: RoosterPlanner.Data.Repositories.ProjectRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: ProjectRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.ProjectRepository.html#RoosterPlanner_Data_Repositories_ProjectRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.ProjectRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.ProjectRepository.ProjectRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: ProjectRepository.ProjectRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.ProjectRepository.#ctor*
  name: ProjectRepository
  href: api/RoosterPlanner.Data.Repositories.ProjectRepository.html#RoosterPlanner_Data_Repositories_ProjectRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectRepository.ProjectRepository
  nameWithType: ProjectRepository.ProjectRepository
- uid: RoosterPlanner.Data.Repositories.ProjectRepository.GetProjectDetailsAsync(System.Guid)
  name: GetProjectDetailsAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ProjectRepository.html#RoosterPlanner_Data_Repositories_ProjectRepository_GetProjectDetailsAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ProjectRepository.GetProjectDetailsAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ProjectRepository.GetProjectDetailsAsync(System.Guid)
  nameWithType: ProjectRepository.GetProjectDetailsAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ProjectRepository.GetProjectDetailsAsync*
  name: GetProjectDetailsAsync
  href: api/RoosterPlanner.Data.Repositories.ProjectRepository.html#RoosterPlanner_Data_Repositories_ProjectRepository_GetProjectDetailsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectRepository.GetProjectDetailsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectRepository.GetProjectDetailsAsync
  nameWithType: ProjectRepository.GetProjectDetailsAsync
- uid: RoosterPlanner.Data.Repositories.ProjectRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  name: SearchProjectsAsync(ProjectFilter)
  href: api/RoosterPlanner.Data.Repositories.ProjectRepository.html#RoosterPlanner_Data_Repositories_ProjectRepository_SearchProjectsAsync_RoosterPlanner_Models_FilterModels_ProjectFilter_
  commentId: M:RoosterPlanner.Data.Repositories.ProjectRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  fullName: RoosterPlanner.Data.Repositories.ProjectRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  nameWithType: ProjectRepository.SearchProjectsAsync(ProjectFilter)
- uid: RoosterPlanner.Data.Repositories.ProjectRepository.SearchProjectsAsync*
  name: SearchProjectsAsync
  href: api/RoosterPlanner.Data.Repositories.ProjectRepository.html#RoosterPlanner_Data_Repositories_ProjectRepository_SearchProjectsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectRepository.SearchProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectRepository.SearchProjectsAsync
  nameWithType: ProjectRepository.SearchProjectsAsync
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest
  name: ProjectRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.ProjectRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest
  nameWithType: ProjectRepositoryTest
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.#ctor
  name: ProjectRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.ProjectRepositoryTest()
  nameWithType: ProjectRepositoryTest.ProjectRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.#ctor*
  name: ProjectRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.ProjectRepositoryTest
  nameWithType: ProjectRepositoryTest.ProjectRepositoryTest
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Add_New_Entity
  name: Can_Add_New_Entity()
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Can_Add_New_Entity
  commentId: M:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Add_New_Entity
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Add_New_Entity()
  nameWithType: ProjectRepositoryTest.Can_Add_New_Entity()
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Add_New_Entity*
  name: Can_Add_New_Entity
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Can_Add_New_Entity_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Add_New_Entity
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Add_New_Entity
  nameWithType: ProjectRepositoryTest.Can_Add_New_Entity
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Get_New_Entity_ByKey
  name: Can_Get_New_Entity_ByKey()
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Can_Get_New_Entity_ByKey
  commentId: M:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Get_New_Entity_ByKey
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Get_New_Entity_ByKey()
  nameWithType: ProjectRepositoryTest.Can_Get_New_Entity_ByKey()
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Get_New_Entity_ByKey*
  name: Can_Get_New_Entity_ByKey
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Can_Get_New_Entity_ByKey_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Get_New_Entity_ByKey
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Get_New_Entity_ByKey
  nameWithType: ProjectRepositoryTest.Can_Get_New_Entity_ByKey
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Update_Entity
  name: Can_Update_Entity()
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Can_Update_Entity
  commentId: M:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Update_Entity
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Update_Entity()
  nameWithType: ProjectRepositoryTest.Can_Update_Entity()
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Update_Entity*
  name: Can_Update_Entity
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Can_Update_Entity_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Update_Entity
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Can_Update_Entity
  nameWithType: ProjectRepositoryTest.Can_Update_Entity
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Get_Should_Include_Related_Entities
  name: Get_Should_Include_Related_Entities()
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Get_Should_Include_Related_Entities
  commentId: M:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Get_Should_Include_Related_Entities
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Get_Should_Include_Related_Entities()
  nameWithType: ProjectRepositoryTest.Get_Should_Include_Related_Entities()
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Get_Should_Include_Related_Entities*
  name: Get_Should_Include_Related_Entities
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Get_Should_Include_Related_Entities_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Get_Should_Include_Related_Entities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Get_Should_Include_Related_Entities
  nameWithType: ProjectRepositoryTest.Get_Should_Include_Related_Entities
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Search_Should_Not_Accept_Null_filter
  name: Search_Should_Not_Accept_Null_filter()
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Search_Should_Not_Accept_Null_filter
  commentId: M:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Search_Should_Not_Accept_Null_filter
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Search_Should_Not_Accept_Null_filter()
  nameWithType: ProjectRepositoryTest.Search_Should_Not_Accept_Null_filter()
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Search_Should_Not_Accept_Null_filter*
  name: Search_Should_Not_Accept_Null_filter
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Search_Should_Not_Accept_Null_filter_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Search_Should_Not_Accept_Null_filter
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Search_Should_Not_Accept_Null_filter
  nameWithType: ProjectRepositoryTest.Search_Should_Not_Accept_Null_filter
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Store_New_Unvalid_Entity_Throws_Exception
  name: Store_New_Unvalid_Entity_Throws_Exception()
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Store_New_Unvalid_Entity_Throws_Exception
  commentId: M:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Store_New_Unvalid_Entity_Throws_Exception
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Store_New_Unvalid_Entity_Throws_Exception()
  nameWithType: ProjectRepositoryTest.Store_New_Unvalid_Entity_Throws_Exception()
- uid: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Store_New_Unvalid_Entity_Throws_Exception*
  name: Store_New_Unvalid_Entity_Throws_Exception
  href: api/RoosterPlanner.Data.Repositories.ProjectRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectRepositoryTest_Store_New_Unvalid_Entity_Throws_Exception_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Store_New_Unvalid_Entity_Throws_Exception
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectRepositoryTest.Store_New_Unvalid_Entity_Throws_Exception
  nameWithType: ProjectRepositoryTest.Store_New_Unvalid_Entity_Throws_Exception
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepository
  name: ProjectTaskRepository
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.ProjectTaskRepository
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepository
  nameWithType: ProjectTaskRepository
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: ProjectTaskRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepository.html#RoosterPlanner_Data_Repositories_ProjectTaskRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.ProjectTaskRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepository.ProjectTaskRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: ProjectTaskRepository.ProjectTaskRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepository.#ctor*
  name: ProjectTaskRepository
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepository.html#RoosterPlanner_Data_Repositories_ProjectTaskRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectTaskRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepository.ProjectTaskRepository
  nameWithType: ProjectTaskRepository.ProjectTaskRepository
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetAllFromProjectAsync(System.Guid)
  name: GetAllFromProjectAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepository.html#RoosterPlanner_Data_Repositories_ProjectTaskRepository_GetAllFromProjectAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetAllFromProjectAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetAllFromProjectAsync(System.Guid)
  nameWithType: ProjectTaskRepository.GetAllFromProjectAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetAllFromProjectAsync*
  name: GetAllFromProjectAsync
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepository.html#RoosterPlanner_Data_Repositories_ProjectTaskRepository_GetAllFromProjectAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetAllFromProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetAllFromProjectAsync
  nameWithType: ProjectTaskRepository.GetAllFromProjectAsync
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetProjectTaskAsync(System.Guid,System.Guid)
  name: GetProjectTaskAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepository.html#RoosterPlanner_Data_Repositories_ProjectTaskRepository_GetProjectTaskAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetProjectTaskAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetProjectTaskAsync(System.Guid, System.Guid)
  nameWithType: ProjectTaskRepository.GetProjectTaskAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetProjectTaskAsync*
  name: GetProjectTaskAsync
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepository.html#RoosterPlanner_Data_Repositories_ProjectTaskRepository_GetProjectTaskAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetProjectTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepository.GetProjectTaskAsync
  nameWithType: ProjectTaskRepository.GetProjectTaskAsync
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest
  name: ProjectTaskRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest
  nameWithType: ProjectTaskRepositoryTest
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.#ctor
  name: ProjectTaskRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectTaskRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.ProjectTaskRepositoryTest()
  nameWithType: ProjectTaskRepositoryTest.ProjectTaskRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.#ctor*
  name: ProjectTaskRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectTaskRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.ProjectTaskRepositoryTest
  nameWithType: ProjectTaskRepositoryTest.ProjectTaskRepositoryTest
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References
  name: GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectTaskRepositoryTest_GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References()
  nameWithType: ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References*
  name: GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectTaskRepositoryTest_GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References
  nameWithType: ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Include_Related_Entitys_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  name: GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID()
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectTaskRepositoryTest_GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  commentId: M:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID()
  nameWithType: ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID()
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID*
  name: GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectTaskRepositoryTest_GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID
  nameWithType: ProjectTaskRepositoryTest.GetAllFromProjectAsync_Should_Throw_Exception_When_Id_EMPTYGUID
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Return_Correct_Entity
  name: GetProjectTaskAsync_Should_Return_Correct_Entity()
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectTaskRepositoryTest_GetProjectTaskAsync_Should_Return_Correct_Entity
  commentId: M:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Return_Correct_Entity
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Return_Correct_Entity()
  nameWithType: ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Return_Correct_Entity()
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Return_Correct_Entity*
  name: GetProjectTaskAsync_Should_Return_Correct_Entity
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectTaskRepositoryTest_GetProjectTaskAsync_Should_Return_Correct_Entity_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Return_Correct_Entity
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Return_Correct_Entity
  nameWithType: ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Return_Correct_Entity
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID(System.String,System.String)
  name: GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID(String, String)
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectTaskRepositoryTest_GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID_System_String_System_String_
  commentId: M:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID(System.String,System.String)
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID(System.String, System.String)
  nameWithType: ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID(String, String)
- uid: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID*
  name: GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID
  href: api/RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.html#RoosterPlanner_Data_Repositories_ProjectTaskRepositoryTest_GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID_
  commentId: Overload:RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID
  nameWithType: ProjectTaskRepositoryTest.GetProjectTaskAsync_Should_Throw_Exception_When_Ids_EMPTYGUID
- uid: RoosterPlanner.Data.Repositories.RequirementRepository
  name: RequirementRepository
  href: api/RoosterPlanner.Data.Repositories.RequirementRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.RequirementRepository
  fullName: RoosterPlanner.Data.Repositories.RequirementRepository
  nameWithType: RequirementRepository
- uid: RoosterPlanner.Data.Repositories.RequirementRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: RequirementRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.RequirementRepository.html#RoosterPlanner_Data_Repositories_RequirementRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.RequirementRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.RequirementRepository.RequirementRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: RequirementRepository.RequirementRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.RequirementRepository.#ctor*
  name: RequirementRepository
  href: api/RoosterPlanner.Data.Repositories.RequirementRepository.html#RoosterPlanner_Data_Repositories_RequirementRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.RequirementRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.RequirementRepository.RequirementRepository
  nameWithType: RequirementRepository.RequirementRepository
- uid: RoosterPlanner.Data.Repositories.RequirementRepository.GetRequirementAsync(System.Guid)
  name: GetRequirementAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.RequirementRepository.html#RoosterPlanner_Data_Repositories_RequirementRepository_GetRequirementAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.RequirementRepository.GetRequirementAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.RequirementRepository.GetRequirementAsync(System.Guid)
  nameWithType: RequirementRepository.GetRequirementAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.RequirementRepository.GetRequirementAsync(System.Guid,System.Guid)
  name: GetRequirementAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.RequirementRepository.html#RoosterPlanner_Data_Repositories_RequirementRepository_GetRequirementAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.RequirementRepository.GetRequirementAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.RequirementRepository.GetRequirementAsync(System.Guid, System.Guid)
  nameWithType: RequirementRepository.GetRequirementAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.RequirementRepository.GetRequirementAsync*
  name: GetRequirementAsync
  href: api/RoosterPlanner.Data.Repositories.RequirementRepository.html#RoosterPlanner_Data_Repositories_RequirementRepository_GetRequirementAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.RequirementRepository.GetRequirementAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.RequirementRepository.GetRequirementAsync
  nameWithType: RequirementRepository.GetRequirementAsync
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest
  name: RequirementRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.RequirementRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest
  nameWithType: RequirementRepositoryTest
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.#ctor
  name: RequirementRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.RequirementRepositoryTest()
  nameWithType: RequirementRepositoryTest.RequirementRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.#ctor*
  name: RequirementRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.RequirementRepositoryTest
  nameWithType: RequirementRepositoryTest.RequirementRepositoryTest
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Filter_Attributes
  name: GetRequirementAsync_OVERLOAD_Should_Filter_Attributes()
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest_GetRequirementAsync_OVERLOAD_Should_Filter_Attributes
  commentId: M:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Filter_Attributes
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Filter_Attributes()
  nameWithType: RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Filter_Attributes()
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Filter_Attributes*
  name: GetRequirementAsync_OVERLOAD_Should_Filter_Attributes
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest_GetRequirementAsync_OVERLOAD_Should_Filter_Attributes_
  commentId: Overload:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Filter_Attributes
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Filter_Attributes
  nameWithType: RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Filter_Attributes
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities
  name: GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities()
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest_GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities
  commentId: M:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities()
  nameWithType: RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities()
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities*
  name: GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest_GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities_
  commentId: Overload:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities
  nameWithType: RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Include_Related_Entities
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID
  name: GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID()
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest_GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID
  commentId: M:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID()
  nameWithType: RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID()
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID*
  name: GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest_GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID_
  commentId: Overload:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID
  nameWithType: RequirementRepositoryTest.GetRequirementAsync_OVERLOAD_Should_Return_Exception_When_Id_is_EmptyGUID
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID
  name: GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID()
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest_GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID
  commentId: M:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID()
  nameWithType: RequirementRepositoryTest.GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID()
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID*
  name: GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest_GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID_
  commentId: Overload:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID
  nameWithType: RequirementRepositoryTest.GetRequirementAsync_Should_Return_Exception_When_Ids_Are_EmptyGUID
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Matching_Entity
  name: GetRequirementAsync_Should_Return_Matching_Entity()
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest_GetRequirementAsync_Should_Return_Matching_Entity
  commentId: M:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Matching_Entity
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Matching_Entity()
  nameWithType: RequirementRepositoryTest.GetRequirementAsync_Should_Return_Matching_Entity()
- uid: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Matching_Entity*
  name: GetRequirementAsync_Should_Return_Matching_Entity
  href: api/RoosterPlanner.Data.Repositories.RequirementRepositoryTest.html#RoosterPlanner_Data_Repositories_RequirementRepositoryTest_GetRequirementAsync_Should_Return_Matching_Entity_
  commentId: Overload:RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Matching_Entity
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.RequirementRepositoryTest.GetRequirementAsync_Should_Return_Matching_Entity
  nameWithType: RequirementRepositoryTest.GetRequirementAsync_Should_Return_Matching_Entity
- uid: RoosterPlanner.Data.Repositories.ShiftRepository
  name: ShiftRepository
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.ShiftRepository
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository
  nameWithType: ShiftRepository
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: ShiftRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.ShiftRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: ShiftRepository.ShiftRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.#ctor*
  name: ShiftRepository
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.ShiftRepository
  nameWithType: ShiftRepository.ShiftRepository
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.AddShiftsAsync(System.Collections.Generic.List{RoosterPlanner.Models.Shift})
  name: AddShiftsAsync(List<Shift>)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_AddShiftsAsync_System_Collections_Generic_List_RoosterPlanner_Models_Shift__
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.AddShiftsAsync(System.Collections.Generic.List{RoosterPlanner.Models.Shift})
  name.vb: AddShiftsAsync(List(Of Shift))
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.AddShiftsAsync(System.Collections.Generic.List<RoosterPlanner.Models.Shift>)
  fullName.vb: RoosterPlanner.Data.Repositories.ShiftRepository.AddShiftsAsync(System.Collections.Generic.List(Of RoosterPlanner.Models.Shift))
  nameWithType: ShiftRepository.AddShiftsAsync(List<Shift>)
  nameWithType.vb: ShiftRepository.AddShiftsAsync(List(Of Shift))
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.AddShiftsAsync*
  name: AddShiftsAsync
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_AddShiftsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepository.AddShiftsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.AddShiftsAsync
  nameWithType: ShiftRepository.AddShiftsAsync
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.ExportDataAsync(System.Guid)
  name: ExportDataAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_ExportDataAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.ExportDataAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.ExportDataAsync(System.Guid)
  nameWithType: ShiftRepository.ExportDataAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.ExportDataAsync*
  name: ExportDataAsync
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_ExportDataAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepository.ExportDataAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.ExportDataAsync
  nameWithType: ShiftRepository.ExportDataAsync
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync(System.Guid,System.DateTime)
  name: GetByProjectAndDateWithAvailabilitiesAsync(Guid, DateTime)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetByProjectAndDateWithAvailabilitiesAsync_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync(System.Guid,System.DateTime)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync(System.Guid, System.DateTime)
  nameWithType: ShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync(Guid, DateTime)
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync*
  name: GetByProjectAndDateWithAvailabilitiesAsync
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetByProjectAndDateWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync
  nameWithType: ShiftRepository.GetByProjectAndDateWithAvailabilitiesAsync
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectUserAndDateAsync(System.Guid,System.Guid,System.DateTime)
  name: GetByProjectUserAndDateAsync(Guid, Guid, DateTime)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetByProjectUserAndDateAsync_System_Guid_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectUserAndDateAsync(System.Guid,System.Guid,System.DateTime)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectUserAndDateAsync(System.Guid, System.Guid, System.DateTime)
  nameWithType: ShiftRepository.GetByProjectUserAndDateAsync(Guid, Guid, DateTime)
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectUserAndDateAsync*
  name: GetByProjectUserAndDateAsync
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetByProjectUserAndDateAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectUserAndDateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectUserAndDateAsync
  nameWithType: ShiftRepository.GetByProjectUserAndDateAsync
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid)
  name: GetByProjectWithAvailabilitiesAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetByProjectWithAvailabilitiesAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid)
  nameWithType: ShiftRepository.GetByProjectWithAvailabilitiesAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid,System.Guid)
  name: GetByProjectWithAvailabilitiesAsync(Guid, Guid)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetByProjectWithAvailabilitiesAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectWithAvailabilitiesAsync(System.Guid, System.Guid)
  nameWithType: ShiftRepository.GetByProjectWithAvailabilitiesAsync(Guid, Guid)
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectWithAvailabilitiesAsync*
  name: GetByProjectWithAvailabilitiesAsync
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetByProjectWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetByProjectWithAvailabilitiesAsync
  nameWithType: ShiftRepository.GetByProjectWithAvailabilitiesAsync
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftAsync(System.Guid)
  name: GetShiftAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetShiftAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftAsync(System.Guid)
  nameWithType: ShiftRepository.GetShiftAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftAsync*
  name: GetShiftAsync
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetShiftAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftAsync
  nameWithType: ShiftRepository.GetShiftAsync
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftWithAvailabilitiesAsync(System.Guid)
  name: GetShiftWithAvailabilitiesAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetShiftWithAvailabilitiesAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftWithAvailabilitiesAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftWithAvailabilitiesAsync(System.Guid)
  nameWithType: ShiftRepository.GetShiftWithAvailabilitiesAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftWithAvailabilitiesAsync*
  name: GetShiftWithAvailabilitiesAsync
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetShiftWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetShiftWithAvailabilitiesAsync
  nameWithType: ShiftRepository.GetShiftWithAvailabilitiesAsync
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetUniqueDataAsync(System.Guid)
  name: GetUniqueDataAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetUniqueDataAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.GetUniqueDataAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetUniqueDataAsync(System.Guid)
  nameWithType: ShiftRepository.GetUniqueDataAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.GetUniqueDataAsync*
  name: GetUniqueDataAsync
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_GetUniqueDataAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepository.GetUniqueDataAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.GetUniqueDataAsync
  nameWithType: ShiftRepository.GetUniqueDataAsync
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  name: SearchProjectsAsync(ShiftFilter)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_SearchProjectsAsync_RoosterPlanner_Models_FilterModels_ShiftFilter_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  nameWithType: ShiftRepository.SearchProjectsAsync(ShiftFilter)
- uid: RoosterPlanner.Data.Repositories.ShiftRepository.SearchProjectsAsync*
  name: SearchProjectsAsync
  href: api/RoosterPlanner.Data.Repositories.ShiftRepository.html#RoosterPlanner_Data_Repositories_ShiftRepository_SearchProjectsAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepository.SearchProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepository.SearchProjectsAsync
  nameWithType: ShiftRepository.SearchProjectsAsync
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest
  name: ShiftRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.ShiftRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest
  nameWithType: ShiftRepositoryTest
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.#ctor
  name: ShiftRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ShiftRepositoryTest()
  nameWithType: ShiftRepositoryTest.ShiftRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.#ctor*
  name: ShiftRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ShiftRepositoryTest
  nameWithType: ShiftRepositoryTest.ShiftRepositoryTest
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Add_All_Shifts
  name: AddShiftsAsync_Should_Add_All_Shifts()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_AddShiftsAsync_Should_Add_All_Shifts
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Add_All_Shifts
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Add_All_Shifts()
  nameWithType: ShiftRepositoryTest.AddShiftsAsync_Should_Add_All_Shifts()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Add_All_Shifts*
  name: AddShiftsAsync_Should_Add_All_Shifts
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_AddShiftsAsync_Should_Add_All_Shifts_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Add_All_Shifts
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Add_All_Shifts
  nameWithType: ShiftRepositoryTest.AddShiftsAsync_Should_Add_All_Shifts
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Return_Null_When_Input_Null
  name: AddShiftsAsync_Should_Return_Null_When_Input_Null()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_AddShiftsAsync_Should_Return_Null_When_Input_Null
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Return_Null_When_Input_Null
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Return_Null_When_Input_Null()
  nameWithType: ShiftRepositoryTest.AddShiftsAsync_Should_Return_Null_When_Input_Null()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Return_Null_When_Input_Null*
  name: AddShiftsAsync_Should_Return_Null_When_Input_Null
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_AddShiftsAsync_Should_Return_Null_When_Input_Null_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Return_Null_When_Input_Null
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.AddShiftsAsync_Should_Return_Null_When_Input_Null
  nameWithType: ShiftRepositoryTest.AddShiftsAsync_Should_Return_Null_When_Input_Null
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Include_Related_Data_And_Filter_References
  name: ExportDataAsync_Should_Include_Related_Data_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_ExportDataAsync_Should_Include_Related_Data_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Include_Related_Data_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Include_Related_Data_And_Filter_References()
  nameWithType: ShiftRepositoryTest.ExportDataAsync_Should_Include_Related_Data_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Include_Related_Data_And_Filter_References*
  name: ExportDataAsync_Should_Include_Related_Data_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_ExportDataAsync_Should_Include_Related_Data_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Include_Related_Data_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Include_Related_Data_And_Filter_References
  nameWithType: ShiftRepositoryTest.ExportDataAsync_Should_Include_Related_Data_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  name: ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
  nameWithType: ShiftRepositoryTest.ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS*
  name: ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  nameWithType: ShiftRepositoryTest.ExportDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  name: GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
  nameWithType: ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References*
  name: GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  nameWithType: ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  name: GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
  nameWithType: ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS*
  name: GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  nameWithType: ShiftRepositoryTest.GetByProjectAndDateWithAvailabilitiesAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  name: GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References()
  nameWithType: ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References*
  name: GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References
  nameWithType: ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Include_Related_Data_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS(System.String,System.String)
  name: GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS(String, String)
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS_System_String_System_String_
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS(System.String,System.String)
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS(System.String, System.String)
  nameWithType: ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS(String, String)
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS*
  name: GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  nameWithType: ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_OVERLOAD_Should_Throw_Exception_When_Ids_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  name: GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
  nameWithType: ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References*
  name: GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  nameWithType: ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  name: GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
  nameWithType: ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS*
  name: GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
  nameWithType: ShiftRepositoryTest.GetByProjectWithAvailabilitiesAsync_Should_Throw_Exception_When_Ids_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Include_Related_Data
  name: GetShiftAsync_Should_Include_Related_Data()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetShiftAsync_Should_Include_Related_Data
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Include_Related_Data
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Include_Related_Data()
  nameWithType: ShiftRepositoryTest.GetShiftAsync_Should_Include_Related_Data()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Include_Related_Data*
  name: GetShiftAsync_Should_Include_Related_Data
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetShiftAsync_Should_Include_Related_Data_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Include_Related_Data
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Include_Related_Data
  nameWithType: ShiftRepositoryTest.GetShiftAsync_Should_Include_Related_Data
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  name: GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS()
  nameWithType: ShiftRepositoryTest.GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS*
  name: GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  nameWithType: ShiftRepositoryTest.GetShiftAsync_Should_Return_Null_When_Id_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  name: GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
  nameWithType: ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References*
  name: GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
  nameWithType: ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Include_Related_Data_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  name: GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS()
  nameWithType: ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS*
  name: GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS
  nameWithType: ShiftRepositoryTest.GetShiftWithAvailabilitiesAsync_Should_Return_Null_When_Id_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References
  name: GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References()
  nameWithType: ShiftRepositoryTest.GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References*
  name: GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References
  nameWithType: ShiftRepositoryTest.GetUniqueDataAsync_Should_Include_Related_Data_And_Filter_References
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_Correct_Entities
  name: GetUniqueDataAsync_Should_Return_Correct_Entities()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetUniqueDataAsync_Should_Return_Correct_Entities
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_Correct_Entities
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_Correct_Entities()
  nameWithType: ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_Correct_Entities()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_Correct_Entities*
  name: GetUniqueDataAsync_Should_Return_Correct_Entities
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetUniqueDataAsync_Should_Return_Correct_Entities_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_Correct_Entities
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_Correct_Entities
  nameWithType: ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_Correct_Entities
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_No_Duplicates
  name: GetUniqueDataAsync_Should_Return_No_Duplicates()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetUniqueDataAsync_Should_Return_No_Duplicates
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_No_Duplicates
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_No_Duplicates()
  nameWithType: ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_No_Duplicates()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_No_Duplicates*
  name: GetUniqueDataAsync_Should_Return_No_Duplicates
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetUniqueDataAsync_Should_Return_No_Duplicates_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_No_Duplicates
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_No_Duplicates
  nameWithType: ShiftRepositoryTest.GetUniqueDataAsync_Should_Return_No_Duplicates
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  name: GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
  nameWithType: ShiftRepositoryTest.GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS*
  name: GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
  nameWithType: ShiftRepositoryTest.GetUniqueDataAsync_Should_Throw_Exception_When_Id_EMPTYGUIDS
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null
  name: SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null()
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null
  commentId: M:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null()
  nameWithType: ShiftRepositoryTest.SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null()
- uid: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null*
  name: SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null
  href: api/RoosterPlanner.Data.Repositories.ShiftRepositoryTest.html#RoosterPlanner_Data_Repositories_ShiftRepositoryTest_SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null_
  commentId: Overload:RoosterPlanner.Data.Repositories.ShiftRepositoryTest.SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.ShiftRepositoryTest.SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null
  nameWithType: ShiftRepositoryTest.SearchProjectsAsync_Should_Throw_Exception_When_Filter_Null
- uid: RoosterPlanner.Data.Repositories.TaskRepository
  name: TaskRepository
  href: api/RoosterPlanner.Data.Repositories.TaskRepository.html
  commentId: T:RoosterPlanner.Data.Repositories.TaskRepository
  fullName: RoosterPlanner.Data.Repositories.TaskRepository
  nameWithType: TaskRepository
- uid: RoosterPlanner.Data.Repositories.TaskRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  name: TaskRepository(DbContext)
  href: api/RoosterPlanner.Data.Repositories.TaskRepository.html#RoosterPlanner_Data_Repositories_TaskRepository__ctor_Microsoft_EntityFrameworkCore_DbContext_
  commentId: M:RoosterPlanner.Data.Repositories.TaskRepository.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  fullName: RoosterPlanner.Data.Repositories.TaskRepository.TaskRepository(Microsoft.EntityFrameworkCore.DbContext)
  nameWithType: TaskRepository.TaskRepository(DbContext)
- uid: RoosterPlanner.Data.Repositories.TaskRepository.#ctor*
  name: TaskRepository
  href: api/RoosterPlanner.Data.Repositories.TaskRepository.html#RoosterPlanner_Data_Repositories_TaskRepository__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.TaskRepository.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.TaskRepository.TaskRepository
  nameWithType: TaskRepository.TaskRepository
- uid: RoosterPlanner.Data.Repositories.TaskRepository.GetTaskAsync(System.Guid)
  name: GetTaskAsync(Guid)
  href: api/RoosterPlanner.Data.Repositories.TaskRepository.html#RoosterPlanner_Data_Repositories_TaskRepository_GetTaskAsync_System_Guid_
  commentId: M:RoosterPlanner.Data.Repositories.TaskRepository.GetTaskAsync(System.Guid)
  fullName: RoosterPlanner.Data.Repositories.TaskRepository.GetTaskAsync(System.Guid)
  nameWithType: TaskRepository.GetTaskAsync(Guid)
- uid: RoosterPlanner.Data.Repositories.TaskRepository.GetTaskAsync*
  name: GetTaskAsync
  href: api/RoosterPlanner.Data.Repositories.TaskRepository.html#RoosterPlanner_Data_Repositories_TaskRepository_GetTaskAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.TaskRepository.GetTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.TaskRepository.GetTaskAsync
  nameWithType: TaskRepository.GetTaskAsync
- uid: RoosterPlanner.Data.Repositories.TaskRepository.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  name: SearchTasksAsync(TaskFilter)
  href: api/RoosterPlanner.Data.Repositories.TaskRepository.html#RoosterPlanner_Data_Repositories_TaskRepository_SearchTasksAsync_RoosterPlanner_Models_FilterModels_TaskFilter_
  commentId: M:RoosterPlanner.Data.Repositories.TaskRepository.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  fullName: RoosterPlanner.Data.Repositories.TaskRepository.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  nameWithType: TaskRepository.SearchTasksAsync(TaskFilter)
- uid: RoosterPlanner.Data.Repositories.TaskRepository.SearchTasksAsync*
  name: SearchTasksAsync
  href: api/RoosterPlanner.Data.Repositories.TaskRepository.html#RoosterPlanner_Data_Repositories_TaskRepository_SearchTasksAsync_
  commentId: Overload:RoosterPlanner.Data.Repositories.TaskRepository.SearchTasksAsync
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.TaskRepository.SearchTasksAsync
  nameWithType: TaskRepository.SearchTasksAsync
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest
  name: TaskRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html
  commentId: T:RoosterPlanner.Data.Repositories.TaskRepositoryTest
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest
  nameWithType: TaskRepositoryTest
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.#ctor
  name: TaskRepositoryTest()
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest__ctor
  commentId: M:RoosterPlanner.Data.Repositories.TaskRepositoryTest.#ctor
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.TaskRepositoryTest()
  nameWithType: TaskRepositoryTest.TaskRepositoryTest()
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.#ctor*
  name: TaskRepositoryTest
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest__ctor_
  commentId: Overload:RoosterPlanner.Data.Repositories.TaskRepositoryTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.TaskRepositoryTest
  nameWithType: TaskRepositoryTest.TaskRepositoryTest
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Category_Tasks
  name: GetTaskAsync_Should_Filter_Category_Tasks()
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_GetTaskAsync_Should_Filter_Category_Tasks
  commentId: M:RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Category_Tasks
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Category_Tasks()
  nameWithType: TaskRepositoryTest.GetTaskAsync_Should_Filter_Category_Tasks()
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Category_Tasks*
  name: GetTaskAsync_Should_Filter_Category_Tasks
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_GetTaskAsync_Should_Filter_Category_Tasks_
  commentId: Overload:RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Category_Tasks
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Category_Tasks
  nameWithType: TaskRepositoryTest.GetTaskAsync_Should_Filter_Category_Tasks
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Requirement_Task
  name: GetTaskAsync_Should_Filter_Requirement_Task()
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_GetTaskAsync_Should_Filter_Requirement_Task
  commentId: M:RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Requirement_Task
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Requirement_Task()
  nameWithType: TaskRepositoryTest.GetTaskAsync_Should_Filter_Requirement_Task()
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Requirement_Task*
  name: GetTaskAsync_Should_Filter_Requirement_Task
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_GetTaskAsync_Should_Filter_Requirement_Task_
  commentId: Overload:RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Requirement_Task
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Filter_Requirement_Task
  nameWithType: TaskRepositoryTest.GetTaskAsync_Should_Filter_Requirement_Task
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Include_Related_Data
  name: GetTaskAsync_Should_Include_Related_Data()
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_GetTaskAsync_Should_Include_Related_Data
  commentId: M:RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Include_Related_Data
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Include_Related_Data()
  nameWithType: TaskRepositoryTest.GetTaskAsync_Should_Include_Related_Data()
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Include_Related_Data*
  name: GetTaskAsync_Should_Include_Related_Data
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_GetTaskAsync_Should_Include_Related_Data_
  commentId: Overload:RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Include_Related_Data
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Include_Related_Data
  nameWithType: TaskRepositoryTest.GetTaskAsync_Should_Include_Related_Data
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Return_Exception_When_Id_Is_Null
  name: GetTaskAsync_Should_Return_Exception_When_Id_Is_Null()
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_GetTaskAsync_Should_Return_Exception_When_Id_Is_Null
  commentId: M:RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Return_Exception_When_Id_Is_Null
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Return_Exception_When_Id_Is_Null()
  nameWithType: TaskRepositoryTest.GetTaskAsync_Should_Return_Exception_When_Id_Is_Null()
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Return_Exception_When_Id_Is_Null*
  name: GetTaskAsync_Should_Return_Exception_When_Id_Is_Null
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_GetTaskAsync_Should_Return_Exception_When_Id_Is_Null_
  commentId: Overload:RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Return_Exception_When_Id_Is_Null
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.GetTaskAsync_Should_Return_Exception_When_Id_Is_Null
  nameWithType: TaskRepositoryTest.GetTaskAsync_Should_Return_Exception_When_Id_Is_Null
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Include_Related_Data
  name: SearchTasksAsync_Should_Include_Related_Data()
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_SearchTasksAsync_Should_Include_Related_Data
  commentId: M:RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Include_Related_Data
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Include_Related_Data()
  nameWithType: TaskRepositoryTest.SearchTasksAsync_Should_Include_Related_Data()
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Include_Related_Data*
  name: SearchTasksAsync_Should_Include_Related_Data
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_SearchTasksAsync_Should_Include_Related_Data_
  commentId: Overload:RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Include_Related_Data
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Include_Related_Data
  nameWithType: TaskRepositoryTest.SearchTasksAsync_Should_Include_Related_Data
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null
  name: SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null()
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null
  commentId: M:RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null()
  nameWithType: TaskRepositoryTest.SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null()
- uid: RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null*
  name: SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null
  href: api/RoosterPlanner.Data.Repositories.TaskRepositoryTest.html#RoosterPlanner_Data_Repositories_TaskRepositoryTest_SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null_
  commentId: Overload:RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null
  isSpec: "True"
  fullName: RoosterPlanner.Data.Repositories.TaskRepositoryTest.SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null
  nameWithType: TaskRepositoryTest.SearchTasksAsync_Should_Return_Exception_When_Id_Is_Null
- uid: RoosterPlanner.Data.RoosterPlannerContextTest
  name: RoosterPlannerContextTest
  href: api/RoosterPlanner.Data.RoosterPlannerContextTest.html
  commentId: T:RoosterPlanner.Data.RoosterPlannerContextTest
  fullName: RoosterPlanner.Data.RoosterPlannerContextTest
  nameWithType: RoosterPlannerContextTest
- uid: RoosterPlanner.Data.RoosterPlannerContextTest.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{RoosterPlanner.Data.Context.RoosterPlannerContext})
  name: RoosterPlannerContextTest(DbContextOptions<RoosterPlannerContext>)
  href: api/RoosterPlanner.Data.RoosterPlannerContextTest.html#RoosterPlanner_Data_RoosterPlannerContextTest__ctor_Microsoft_EntityFrameworkCore_DbContextOptions_RoosterPlanner_Data_Context_RoosterPlannerContext__
  commentId: M:RoosterPlanner.Data.RoosterPlannerContextTest.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{RoosterPlanner.Data.Context.RoosterPlannerContext})
  name.vb: RoosterPlannerContextTest(DbContextOptions(Of RoosterPlannerContext))
  fullName: RoosterPlanner.Data.RoosterPlannerContextTest.RoosterPlannerContextTest(Microsoft.EntityFrameworkCore.DbContextOptions<RoosterPlanner.Data.Context.RoosterPlannerContext>)
  fullName.vb: RoosterPlanner.Data.RoosterPlannerContextTest.RoosterPlannerContextTest(Microsoft.EntityFrameworkCore.DbContextOptions(Of RoosterPlanner.Data.Context.RoosterPlannerContext))
  nameWithType: RoosterPlannerContextTest.RoosterPlannerContextTest(DbContextOptions<RoosterPlannerContext>)
  nameWithType.vb: RoosterPlannerContextTest.RoosterPlannerContextTest(DbContextOptions(Of RoosterPlannerContext))
- uid: RoosterPlanner.Data.RoosterPlannerContextTest.#ctor*
  name: RoosterPlannerContextTest
  href: api/RoosterPlanner.Data.RoosterPlannerContextTest.html#RoosterPlanner_Data_RoosterPlannerContextTest__ctor_
  commentId: Overload:RoosterPlanner.Data.RoosterPlannerContextTest.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Data.RoosterPlannerContextTest.RoosterPlannerContextTest
  nameWithType: RoosterPlannerContextTest.RoosterPlannerContextTest
- uid: RoosterPlanner.Data.RoosterPlannerContextTest.SaveChanges
  name: SaveChanges()
  href: api/RoosterPlanner.Data.RoosterPlannerContextTest.html#RoosterPlanner_Data_RoosterPlannerContextTest_SaveChanges
  commentId: M:RoosterPlanner.Data.RoosterPlannerContextTest.SaveChanges
  fullName: RoosterPlanner.Data.RoosterPlannerContextTest.SaveChanges()
  nameWithType: RoosterPlannerContextTest.SaveChanges()
- uid: RoosterPlanner.Data.RoosterPlannerContextTest.SaveChanges*
  name: SaveChanges
  href: api/RoosterPlanner.Data.RoosterPlannerContextTest.html#RoosterPlanner_Data_RoosterPlannerContextTest_SaveChanges_
  commentId: Overload:RoosterPlanner.Data.RoosterPlannerContextTest.SaveChanges
  isSpec: "True"
  fullName: RoosterPlanner.Data.RoosterPlannerContextTest.SaveChanges
  nameWithType: RoosterPlannerContextTest.SaveChanges
- uid: RoosterPlanner.Email
  name: RoosterPlanner.Email
  href: api/RoosterPlanner.Email.html
  commentId: N:RoosterPlanner.Email
  fullName: RoosterPlanner.Email
  nameWithType: RoosterPlanner.Email
- uid: RoosterPlanner.Email.IEmailService
  name: IEmailService
  href: api/RoosterPlanner.Email.IEmailService.html
  commentId: T:RoosterPlanner.Email.IEmailService
  fullName: RoosterPlanner.Email.IEmailService
  nameWithType: IEmailService
- uid: RoosterPlanner.Email.IEmailService.SendEmail(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  name: SendEmail(IEnumerable<String>, String, String, Boolean, String, Attachment)
  href: api/RoosterPlanner.Email.IEmailService.html#RoosterPlanner_Email_IEmailService_SendEmail_System_Collections_Generic_IEnumerable_System_String__System_String_System_String_System_Boolean_System_String_System_Net_Mail_Attachment_
  commentId: M:RoosterPlanner.Email.IEmailService.SendEmail(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  name.vb: SendEmail(IEnumerable(Of String), String, String, Boolean, String, Attachment)
  fullName: RoosterPlanner.Email.IEmailService.SendEmail(System.Collections.Generic.IEnumerable<System.String>, System.String, System.String, System.Boolean, System.String, System.Net.Mail.Attachment)
  fullName.vb: RoosterPlanner.Email.IEmailService.SendEmail(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.String, System.Boolean, System.String, System.Net.Mail.Attachment)
  nameWithType: IEmailService.SendEmail(IEnumerable<String>, String, String, Boolean, String, Attachment)
  nameWithType.vb: IEmailService.SendEmail(IEnumerable(Of String), String, String, Boolean, String, Attachment)
- uid: RoosterPlanner.Email.IEmailService.SendEmail(System.String,System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  name: SendEmail(String, String, String, Boolean, String, Attachment)
  href: api/RoosterPlanner.Email.IEmailService.html#RoosterPlanner_Email_IEmailService_SendEmail_System_String_System_String_System_String_System_Boolean_System_String_System_Net_Mail_Attachment_
  commentId: M:RoosterPlanner.Email.IEmailService.SendEmail(System.String,System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  fullName: RoosterPlanner.Email.IEmailService.SendEmail(System.String, System.String, System.String, System.Boolean, System.String, System.Net.Mail.Attachment)
  nameWithType: IEmailService.SendEmail(String, String, String, Boolean, String, Attachment)
- uid: RoosterPlanner.Email.IEmailService.SendEmail*
  name: SendEmail
  href: api/RoosterPlanner.Email.IEmailService.html#RoosterPlanner_Email_IEmailService_SendEmail_
  commentId: Overload:RoosterPlanner.Email.IEmailService.SendEmail
  isSpec: "True"
  fullName: RoosterPlanner.Email.IEmailService.SendEmail
  nameWithType: IEmailService.SendEmail
- uid: RoosterPlanner.Email.SMTPEmailService
  name: SMTPEmailService
  href: api/RoosterPlanner.Email.SMTPEmailService.html
  commentId: T:RoosterPlanner.Email.SMTPEmailService
  fullName: RoosterPlanner.Email.SMTPEmailService
  nameWithType: SMTPEmailService
- uid: RoosterPlanner.Email.SMTPEmailService.#ctor(System.Net.Mail.SmtpClient,System.String)
  name: SMTPEmailService(SmtpClient, String)
  href: api/RoosterPlanner.Email.SMTPEmailService.html#RoosterPlanner_Email_SMTPEmailService__ctor_System_Net_Mail_SmtpClient_System_String_
  commentId: M:RoosterPlanner.Email.SMTPEmailService.#ctor(System.Net.Mail.SmtpClient,System.String)
  fullName: RoosterPlanner.Email.SMTPEmailService.SMTPEmailService(System.Net.Mail.SmtpClient, System.String)
  nameWithType: SMTPEmailService.SMTPEmailService(SmtpClient, String)
- uid: RoosterPlanner.Email.SMTPEmailService.#ctor*
  name: SMTPEmailService
  href: api/RoosterPlanner.Email.SMTPEmailService.html#RoosterPlanner_Email_SMTPEmailService__ctor_
  commentId: Overload:RoosterPlanner.Email.SMTPEmailService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Email.SMTPEmailService.SMTPEmailService
  nameWithType: SMTPEmailService.SMTPEmailService
- uid: RoosterPlanner.Email.SMTPEmailService.SendEmail(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  name: SendEmail(IEnumerable<String>, String, String, Boolean, String, Attachment)
  href: api/RoosterPlanner.Email.SMTPEmailService.html#RoosterPlanner_Email_SMTPEmailService_SendEmail_System_Collections_Generic_IEnumerable_System_String__System_String_System_String_System_Boolean_System_String_System_Net_Mail_Attachment_
  commentId: M:RoosterPlanner.Email.SMTPEmailService.SendEmail(System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  name.vb: SendEmail(IEnumerable(Of String), String, String, Boolean, String, Attachment)
  fullName: RoosterPlanner.Email.SMTPEmailService.SendEmail(System.Collections.Generic.IEnumerable<System.String>, System.String, System.String, System.Boolean, System.String, System.Net.Mail.Attachment)
  fullName.vb: RoosterPlanner.Email.SMTPEmailService.SendEmail(System.Collections.Generic.IEnumerable(Of System.String), System.String, System.String, System.Boolean, System.String, System.Net.Mail.Attachment)
  nameWithType: SMTPEmailService.SendEmail(IEnumerable<String>, String, String, Boolean, String, Attachment)
  nameWithType.vb: SMTPEmailService.SendEmail(IEnumerable(Of String), String, String, Boolean, String, Attachment)
- uid: RoosterPlanner.Email.SMTPEmailService.SendEmail(System.String,System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  name: SendEmail(String, String, String, Boolean, String, Attachment)
  href: api/RoosterPlanner.Email.SMTPEmailService.html#RoosterPlanner_Email_SMTPEmailService_SendEmail_System_String_System_String_System_String_System_Boolean_System_String_System_Net_Mail_Attachment_
  commentId: M:RoosterPlanner.Email.SMTPEmailService.SendEmail(System.String,System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  fullName: RoosterPlanner.Email.SMTPEmailService.SendEmail(System.String, System.String, System.String, System.Boolean, System.String, System.Net.Mail.Attachment)
  nameWithType: SMTPEmailService.SendEmail(String, String, String, Boolean, String, Attachment)
- uid: RoosterPlanner.Email.SMTPEmailService.SendEmail*
  name: SendEmail
  href: api/RoosterPlanner.Email.SMTPEmailService.html#RoosterPlanner_Email_SMTPEmailService_SendEmail_
  commentId: Overload:RoosterPlanner.Email.SMTPEmailService.SendEmail
  isSpec: "True"
  fullName: RoosterPlanner.Email.SMTPEmailService.SendEmail
  nameWithType: SMTPEmailService.SendEmail
- uid: RoosterPlanner.Models
  name: RoosterPlanner.Models
  href: api/RoosterPlanner.Models.html
  commentId: N:RoosterPlanner.Models
  fullName: RoosterPlanner.Models
  nameWithType: RoosterPlanner.Models
- uid: RoosterPlanner.Models.Availability
  name: Availability
  href: api/RoosterPlanner.Models.Availability.html
  commentId: T:RoosterPlanner.Models.Availability
  fullName: RoosterPlanner.Models.Availability
  nameWithType: Availability
- uid: RoosterPlanner.Models.Availability.#ctor
  name: Availability()
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability__ctor
  commentId: M:RoosterPlanner.Models.Availability.#ctor
  fullName: RoosterPlanner.Models.Availability.Availability()
  nameWithType: Availability.Availability()
- uid: RoosterPlanner.Models.Availability.#ctor(System.Guid)
  name: Availability(Guid)
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Availability.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Availability.Availability(System.Guid)
  nameWithType: Availability.Availability(Guid)
- uid: RoosterPlanner.Models.Availability.#ctor*
  name: Availability
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability__ctor_
  commentId: Overload:RoosterPlanner.Models.Availability.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Availability.Availability
  nameWithType: Availability.Availability
- uid: RoosterPlanner.Models.Availability.Participation
  name: Participation
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_Participation
  commentId: P:RoosterPlanner.Models.Availability.Participation
  fullName: RoosterPlanner.Models.Availability.Participation
  nameWithType: Availability.Participation
- uid: RoosterPlanner.Models.Availability.Participation*
  name: Participation
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_Participation_
  commentId: Overload:RoosterPlanner.Models.Availability.Participation
  isSpec: "True"
  fullName: RoosterPlanner.Models.Availability.Participation
  nameWithType: Availability.Participation
- uid: RoosterPlanner.Models.Availability.ParticipationId
  name: ParticipationId
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_ParticipationId
  commentId: P:RoosterPlanner.Models.Availability.ParticipationId
  fullName: RoosterPlanner.Models.Availability.ParticipationId
  nameWithType: Availability.ParticipationId
- uid: RoosterPlanner.Models.Availability.ParticipationId*
  name: ParticipationId
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_ParticipationId_
  commentId: Overload:RoosterPlanner.Models.Availability.ParticipationId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Availability.ParticipationId
  nameWithType: Availability.ParticipationId
- uid: RoosterPlanner.Models.Availability.Preference
  name: Preference
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_Preference
  commentId: P:RoosterPlanner.Models.Availability.Preference
  fullName: RoosterPlanner.Models.Availability.Preference
  nameWithType: Availability.Preference
- uid: RoosterPlanner.Models.Availability.Preference*
  name: Preference
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_Preference_
  commentId: Overload:RoosterPlanner.Models.Availability.Preference
  isSpec: "True"
  fullName: RoosterPlanner.Models.Availability.Preference
  nameWithType: Availability.Preference
- uid: RoosterPlanner.Models.Availability.PushEmailSend
  name: PushEmailSend
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_PushEmailSend
  commentId: P:RoosterPlanner.Models.Availability.PushEmailSend
  fullName: RoosterPlanner.Models.Availability.PushEmailSend
  nameWithType: Availability.PushEmailSend
- uid: RoosterPlanner.Models.Availability.PushEmailSend*
  name: PushEmailSend
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_PushEmailSend_
  commentId: Overload:RoosterPlanner.Models.Availability.PushEmailSend
  isSpec: "True"
  fullName: RoosterPlanner.Models.Availability.PushEmailSend
  nameWithType: Availability.PushEmailSend
- uid: RoosterPlanner.Models.Availability.Shift
  name: Shift
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_Shift
  commentId: P:RoosterPlanner.Models.Availability.Shift
  fullName: RoosterPlanner.Models.Availability.Shift
  nameWithType: Availability.Shift
- uid: RoosterPlanner.Models.Availability.Shift*
  name: Shift
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_Shift_
  commentId: Overload:RoosterPlanner.Models.Availability.Shift
  isSpec: "True"
  fullName: RoosterPlanner.Models.Availability.Shift
  nameWithType: Availability.Shift
- uid: RoosterPlanner.Models.Availability.ShiftId
  name: ShiftId
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_ShiftId
  commentId: P:RoosterPlanner.Models.Availability.ShiftId
  fullName: RoosterPlanner.Models.Availability.ShiftId
  nameWithType: Availability.ShiftId
- uid: RoosterPlanner.Models.Availability.ShiftId*
  name: ShiftId
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_ShiftId_
  commentId: Overload:RoosterPlanner.Models.Availability.ShiftId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Availability.ShiftId
  nameWithType: Availability.ShiftId
- uid: RoosterPlanner.Models.Availability.Type
  name: Type
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_Type
  commentId: P:RoosterPlanner.Models.Availability.Type
  fullName: RoosterPlanner.Models.Availability.Type
  nameWithType: Availability.Type
- uid: RoosterPlanner.Models.Availability.Type*
  name: Type
  href: api/RoosterPlanner.Models.Availability.html#RoosterPlanner_Models_Availability_Type_
  commentId: Overload:RoosterPlanner.Models.Availability.Type
  isSpec: "True"
  fullName: RoosterPlanner.Models.Availability.Type
  nameWithType: Availability.Type
- uid: RoosterPlanner.Models.Category
  name: Category
  href: api/RoosterPlanner.Models.Category.html
  commentId: T:RoosterPlanner.Models.Category
  fullName: RoosterPlanner.Models.Category
  nameWithType: Category
- uid: RoosterPlanner.Models.Category.#ctor
  name: Category()
  href: api/RoosterPlanner.Models.Category.html#RoosterPlanner_Models_Category__ctor
  commentId: M:RoosterPlanner.Models.Category.#ctor
  fullName: RoosterPlanner.Models.Category.Category()
  nameWithType: Category.Category()
- uid: RoosterPlanner.Models.Category.#ctor(System.Guid)
  name: Category(Guid)
  href: api/RoosterPlanner.Models.Category.html#RoosterPlanner_Models_Category__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Category.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Category.Category(System.Guid)
  nameWithType: Category.Category(Guid)
- uid: RoosterPlanner.Models.Category.#ctor*
  name: Category
  href: api/RoosterPlanner.Models.Category.html#RoosterPlanner_Models_Category__ctor_
  commentId: Overload:RoosterPlanner.Models.Category.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Category.Category
  nameWithType: Category.Category
- uid: RoosterPlanner.Models.Category.Code
  name: Code
  href: api/RoosterPlanner.Models.Category.html#RoosterPlanner_Models_Category_Code
  commentId: P:RoosterPlanner.Models.Category.Code
  fullName: RoosterPlanner.Models.Category.Code
  nameWithType: Category.Code
- uid: RoosterPlanner.Models.Category.Code*
  name: Code
  href: api/RoosterPlanner.Models.Category.html#RoosterPlanner_Models_Category_Code_
  commentId: Overload:RoosterPlanner.Models.Category.Code
  isSpec: "True"
  fullName: RoosterPlanner.Models.Category.Code
  nameWithType: Category.Code
- uid: RoosterPlanner.Models.Category.Name
  name: Name
  href: api/RoosterPlanner.Models.Category.html#RoosterPlanner_Models_Category_Name
  commentId: P:RoosterPlanner.Models.Category.Name
  fullName: RoosterPlanner.Models.Category.Name
  nameWithType: Category.Name
- uid: RoosterPlanner.Models.Category.Name*
  name: Name
  href: api/RoosterPlanner.Models.Category.html#RoosterPlanner_Models_Category_Name_
  commentId: Overload:RoosterPlanner.Models.Category.Name
  isSpec: "True"
  fullName: RoosterPlanner.Models.Category.Name
  nameWithType: Category.Name
- uid: RoosterPlanner.Models.Category.Tasks
  name: Tasks
  href: api/RoosterPlanner.Models.Category.html#RoosterPlanner_Models_Category_Tasks
  commentId: P:RoosterPlanner.Models.Category.Tasks
  fullName: RoosterPlanner.Models.Category.Tasks
  nameWithType: Category.Tasks
- uid: RoosterPlanner.Models.Category.Tasks*
  name: Tasks
  href: api/RoosterPlanner.Models.Category.html#RoosterPlanner_Models_Category_Tasks_
  commentId: Overload:RoosterPlanner.Models.Category.Tasks
  isSpec: "True"
  fullName: RoosterPlanner.Models.Category.Tasks
  nameWithType: Category.Tasks
- uid: RoosterPlanner.Models.Certificate
  name: Certificate
  href: api/RoosterPlanner.Models.Certificate.html
  commentId: T:RoosterPlanner.Models.Certificate
  fullName: RoosterPlanner.Models.Certificate
  nameWithType: Certificate
- uid: RoosterPlanner.Models.Certificate.#ctor
  name: Certificate()
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate__ctor
  commentId: M:RoosterPlanner.Models.Certificate.#ctor
  fullName: RoosterPlanner.Models.Certificate.Certificate()
  nameWithType: Certificate.Certificate()
- uid: RoosterPlanner.Models.Certificate.#ctor(System.Guid)
  name: Certificate(Guid)
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Certificate.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Certificate.Certificate(System.Guid)
  nameWithType: Certificate.Certificate(Guid)
- uid: RoosterPlanner.Models.Certificate.#ctor*
  name: Certificate
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate__ctor_
  commentId: Overload:RoosterPlanner.Models.Certificate.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Certificate.Certificate
  nameWithType: Certificate.Certificate
- uid: RoosterPlanner.Models.Certificate.CertificateType
  name: CertificateType
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_CertificateType
  commentId: P:RoosterPlanner.Models.Certificate.CertificateType
  fullName: RoosterPlanner.Models.Certificate.CertificateType
  nameWithType: Certificate.CertificateType
- uid: RoosterPlanner.Models.Certificate.CertificateType*
  name: CertificateType
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_CertificateType_
  commentId: Overload:RoosterPlanner.Models.Certificate.CertificateType
  isSpec: "True"
  fullName: RoosterPlanner.Models.Certificate.CertificateType
  nameWithType: Certificate.CertificateType
- uid: RoosterPlanner.Models.Certificate.CertificateTypeId
  name: CertificateTypeId
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_CertificateTypeId
  commentId: P:RoosterPlanner.Models.Certificate.CertificateTypeId
  fullName: RoosterPlanner.Models.Certificate.CertificateTypeId
  nameWithType: Certificate.CertificateTypeId
- uid: RoosterPlanner.Models.Certificate.CertificateTypeId*
  name: CertificateTypeId
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_CertificateTypeId_
  commentId: Overload:RoosterPlanner.Models.Certificate.CertificateTypeId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Certificate.CertificateTypeId
  nameWithType: Certificate.CertificateTypeId
- uid: RoosterPlanner.Models.Certificate.DateExpired
  name: DateExpired
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_DateExpired
  commentId: P:RoosterPlanner.Models.Certificate.DateExpired
  fullName: RoosterPlanner.Models.Certificate.DateExpired
  nameWithType: Certificate.DateExpired
- uid: RoosterPlanner.Models.Certificate.DateExpired*
  name: DateExpired
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_DateExpired_
  commentId: Overload:RoosterPlanner.Models.Certificate.DateExpired
  isSpec: "True"
  fullName: RoosterPlanner.Models.Certificate.DateExpired
  nameWithType: Certificate.DateExpired
- uid: RoosterPlanner.Models.Certificate.DateIssued
  name: DateIssued
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_DateIssued
  commentId: P:RoosterPlanner.Models.Certificate.DateIssued
  fullName: RoosterPlanner.Models.Certificate.DateIssued
  nameWithType: Certificate.DateIssued
- uid: RoosterPlanner.Models.Certificate.DateIssued*
  name: DateIssued
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_DateIssued_
  commentId: Overload:RoosterPlanner.Models.Certificate.DateIssued
  isSpec: "True"
  fullName: RoosterPlanner.Models.Certificate.DateIssued
  nameWithType: Certificate.DateIssued
- uid: RoosterPlanner.Models.Certificate.Person
  name: Person
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_Person
  commentId: P:RoosterPlanner.Models.Certificate.Person
  fullName: RoosterPlanner.Models.Certificate.Person
  nameWithType: Certificate.Person
- uid: RoosterPlanner.Models.Certificate.Person*
  name: Person
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_Person_
  commentId: Overload:RoosterPlanner.Models.Certificate.Person
  isSpec: "True"
  fullName: RoosterPlanner.Models.Certificate.Person
  nameWithType: Certificate.Person
- uid: RoosterPlanner.Models.Certificate.PersonId
  name: PersonId
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_PersonId
  commentId: P:RoosterPlanner.Models.Certificate.PersonId
  fullName: RoosterPlanner.Models.Certificate.PersonId
  nameWithType: Certificate.PersonId
- uid: RoosterPlanner.Models.Certificate.PersonId*
  name: PersonId
  href: api/RoosterPlanner.Models.Certificate.html#RoosterPlanner_Models_Certificate_PersonId_
  commentId: Overload:RoosterPlanner.Models.Certificate.PersonId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Certificate.PersonId
  nameWithType: Certificate.PersonId
- uid: RoosterPlanner.Models.CertificateType
  name: CertificateType
  href: api/RoosterPlanner.Models.CertificateType.html
  commentId: T:RoosterPlanner.Models.CertificateType
  fullName: RoosterPlanner.Models.CertificateType
  nameWithType: CertificateType
- uid: RoosterPlanner.Models.CertificateType.#ctor
  name: CertificateType()
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType__ctor
  commentId: M:RoosterPlanner.Models.CertificateType.#ctor
  fullName: RoosterPlanner.Models.CertificateType.CertificateType()
  nameWithType: CertificateType.CertificateType()
- uid: RoosterPlanner.Models.CertificateType.#ctor(System.Guid)
  name: CertificateType(Guid)
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.CertificateType.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.CertificateType.CertificateType(System.Guid)
  nameWithType: CertificateType.CertificateType(Guid)
- uid: RoosterPlanner.Models.CertificateType.#ctor*
  name: CertificateType
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType__ctor_
  commentId: Overload:RoosterPlanner.Models.CertificateType.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.CertificateType.CertificateType
  nameWithType: CertificateType.CertificateType
- uid: RoosterPlanner.Models.CertificateType.Certificates
  name: Certificates
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType_Certificates
  commentId: P:RoosterPlanner.Models.CertificateType.Certificates
  fullName: RoosterPlanner.Models.CertificateType.Certificates
  nameWithType: CertificateType.Certificates
- uid: RoosterPlanner.Models.CertificateType.Certificates*
  name: Certificates
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType_Certificates_
  commentId: Overload:RoosterPlanner.Models.CertificateType.Certificates
  isSpec: "True"
  fullName: RoosterPlanner.Models.CertificateType.Certificates
  nameWithType: CertificateType.Certificates
- uid: RoosterPlanner.Models.CertificateType.Level
  name: Level
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType_Level
  commentId: P:RoosterPlanner.Models.CertificateType.Level
  fullName: RoosterPlanner.Models.CertificateType.Level
  nameWithType: CertificateType.Level
- uid: RoosterPlanner.Models.CertificateType.Level*
  name: Level
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType_Level_
  commentId: Overload:RoosterPlanner.Models.CertificateType.Level
  isSpec: "True"
  fullName: RoosterPlanner.Models.CertificateType.Level
  nameWithType: CertificateType.Level
- uid: RoosterPlanner.Models.CertificateType.Name
  name: Name
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType_Name
  commentId: P:RoosterPlanner.Models.CertificateType.Name
  fullName: RoosterPlanner.Models.CertificateType.Name
  nameWithType: CertificateType.Name
- uid: RoosterPlanner.Models.CertificateType.Name*
  name: Name
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType_Name_
  commentId: Overload:RoosterPlanner.Models.CertificateType.Name
  isSpec: "True"
  fullName: RoosterPlanner.Models.CertificateType.Name
  nameWithType: CertificateType.Name
- uid: RoosterPlanner.Models.CertificateType.Requirements
  name: Requirements
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType_Requirements
  commentId: P:RoosterPlanner.Models.CertificateType.Requirements
  fullName: RoosterPlanner.Models.CertificateType.Requirements
  nameWithType: CertificateType.Requirements
- uid: RoosterPlanner.Models.CertificateType.Requirements*
  name: Requirements
  href: api/RoosterPlanner.Models.CertificateType.html#RoosterPlanner_Models_CertificateType_Requirements_
  commentId: Overload:RoosterPlanner.Models.CertificateType.Requirements
  isSpec: "True"
  fullName: RoosterPlanner.Models.CertificateType.Requirements
  nameWithType: CertificateType.Requirements
- uid: RoosterPlanner.Models.Document
  name: Document
  href: api/RoosterPlanner.Models.Document.html
  commentId: T:RoosterPlanner.Models.Document
  fullName: RoosterPlanner.Models.Document
  nameWithType: Document
- uid: RoosterPlanner.Models.Document.#ctor
  name: Document()
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document__ctor
  commentId: M:RoosterPlanner.Models.Document.#ctor
  fullName: RoosterPlanner.Models.Document.Document()
  nameWithType: Document.Document()
- uid: RoosterPlanner.Models.Document.#ctor(System.Guid)
  name: Document(Guid)
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Document.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Document.Document(System.Guid)
  nameWithType: Document.Document(Guid)
- uid: RoosterPlanner.Models.Document.#ctor*
  name: Document
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document__ctor_
  commentId: Overload:RoosterPlanner.Models.Document.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Document.Document
  nameWithType: Document.Document
- uid: RoosterPlanner.Models.Document.DocumentUri
  name: DocumentUri
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document_DocumentUri
  commentId: P:RoosterPlanner.Models.Document.DocumentUri
  fullName: RoosterPlanner.Models.Document.DocumentUri
  nameWithType: Document.DocumentUri
- uid: RoosterPlanner.Models.Document.DocumentUri*
  name: DocumentUri
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document_DocumentUri_
  commentId: Overload:RoosterPlanner.Models.Document.DocumentUri
  isSpec: "True"
  fullName: RoosterPlanner.Models.Document.DocumentUri
  nameWithType: Document.DocumentUri
- uid: RoosterPlanner.Models.Document.Instructions
  name: Instructions
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document_Instructions
  commentId: P:RoosterPlanner.Models.Document.Instructions
  fullName: RoosterPlanner.Models.Document.Instructions
  nameWithType: Document.Instructions
- uid: RoosterPlanner.Models.Document.Instructions*
  name: Instructions
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document_Instructions_
  commentId: Overload:RoosterPlanner.Models.Document.Instructions
  isSpec: "True"
  fullName: RoosterPlanner.Models.Document.Instructions
  nameWithType: Document.Instructions
- uid: RoosterPlanner.Models.Document.Name
  name: Name
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document_Name
  commentId: P:RoosterPlanner.Models.Document.Name
  fullName: RoosterPlanner.Models.Document.Name
  nameWithType: Document.Name
- uid: RoosterPlanner.Models.Document.Name*
  name: Name
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document_Name_
  commentId: Overload:RoosterPlanner.Models.Document.Name
  isSpec: "True"
  fullName: RoosterPlanner.Models.Document.Name
  nameWithType: Document.Name
- uid: RoosterPlanner.Models.Document.ProfilePictures
  name: ProfilePictures
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document_ProfilePictures
  commentId: P:RoosterPlanner.Models.Document.ProfilePictures
  fullName: RoosterPlanner.Models.Document.ProfilePictures
  nameWithType: Document.ProfilePictures
- uid: RoosterPlanner.Models.Document.ProfilePictures*
  name: ProfilePictures
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document_ProfilePictures_
  commentId: Overload:RoosterPlanner.Models.Document.ProfilePictures
  isSpec: "True"
  fullName: RoosterPlanner.Models.Document.ProfilePictures
  nameWithType: Document.ProfilePictures
- uid: RoosterPlanner.Models.Document.ProjectPictures
  name: ProjectPictures
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document_ProjectPictures
  commentId: P:RoosterPlanner.Models.Document.ProjectPictures
  fullName: RoosterPlanner.Models.Document.ProjectPictures
  nameWithType: Document.ProjectPictures
- uid: RoosterPlanner.Models.Document.ProjectPictures*
  name: ProjectPictures
  href: api/RoosterPlanner.Models.Document.html#RoosterPlanner_Models_Document_ProjectPictures_
  commentId: Overload:RoosterPlanner.Models.Document.ProjectPictures
  isSpec: "True"
  fullName: RoosterPlanner.Models.Document.ProjectPictures
  nameWithType: Document.ProjectPictures
- uid: RoosterPlanner.Models.Entity
  name: Entity
  href: api/RoosterPlanner.Models.Entity.html
  commentId: T:RoosterPlanner.Models.Entity
  fullName: RoosterPlanner.Models.Entity
  nameWithType: Entity
- uid: RoosterPlanner.Models.Entity.#ctor
  name: Entity()
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity__ctor
  commentId: M:RoosterPlanner.Models.Entity.#ctor
  fullName: RoosterPlanner.Models.Entity.Entity()
  nameWithType: Entity.Entity()
- uid: RoosterPlanner.Models.Entity.#ctor(System.Guid)
  name: Entity(Guid)
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Entity.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Entity.Entity(System.Guid)
  nameWithType: Entity.Entity(Guid)
- uid: RoosterPlanner.Models.Entity.#ctor*
  name: Entity
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity__ctor_
  commentId: Overload:RoosterPlanner.Models.Entity.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Entity.Entity
  nameWithType: Entity.Entity
- uid: RoosterPlanner.Models.Entity.Id
  name: Id
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity_Id
  commentId: P:RoosterPlanner.Models.Entity.Id
  fullName: RoosterPlanner.Models.Entity.Id
  nameWithType: Entity.Id
- uid: RoosterPlanner.Models.Entity.Id*
  name: Id
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity_Id_
  commentId: Overload:RoosterPlanner.Models.Entity.Id
  isSpec: "True"
  fullName: RoosterPlanner.Models.Entity.Id
  nameWithType: Entity.Id
- uid: RoosterPlanner.Models.Entity.LastEditBy
  name: LastEditBy
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity_LastEditBy
  commentId: P:RoosterPlanner.Models.Entity.LastEditBy
  fullName: RoosterPlanner.Models.Entity.LastEditBy
  nameWithType: Entity.LastEditBy
- uid: RoosterPlanner.Models.Entity.LastEditBy*
  name: LastEditBy
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity_LastEditBy_
  commentId: Overload:RoosterPlanner.Models.Entity.LastEditBy
  isSpec: "True"
  fullName: RoosterPlanner.Models.Entity.LastEditBy
  nameWithType: Entity.LastEditBy
- uid: RoosterPlanner.Models.Entity.LastEditDate
  name: LastEditDate
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity_LastEditDate
  commentId: P:RoosterPlanner.Models.Entity.LastEditDate
  fullName: RoosterPlanner.Models.Entity.LastEditDate
  nameWithType: Entity.LastEditDate
- uid: RoosterPlanner.Models.Entity.LastEditDate*
  name: LastEditDate
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity_LastEditDate_
  commentId: Overload:RoosterPlanner.Models.Entity.LastEditDate
  isSpec: "True"
  fullName: RoosterPlanner.Models.Entity.LastEditDate
  nameWithType: Entity.LastEditDate
- uid: RoosterPlanner.Models.Entity.RowVersion
  name: RowVersion
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity_RowVersion
  commentId: P:RoosterPlanner.Models.Entity.RowVersion
  fullName: RoosterPlanner.Models.Entity.RowVersion
  nameWithType: Entity.RowVersion
- uid: RoosterPlanner.Models.Entity.RowVersion*
  name: RowVersion
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity_RowVersion_
  commentId: Overload:RoosterPlanner.Models.Entity.RowVersion
  isSpec: "True"
  fullName: RoosterPlanner.Models.Entity.RowVersion
  nameWithType: Entity.RowVersion
- uid: RoosterPlanner.Models.Entity.SetKey(System.Guid)
  name: SetKey(Guid)
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity_SetKey_System_Guid_
  commentId: M:RoosterPlanner.Models.Entity.SetKey(System.Guid)
  fullName: RoosterPlanner.Models.Entity.SetKey(System.Guid)
  nameWithType: Entity.SetKey(Guid)
- uid: RoosterPlanner.Models.Entity.SetKey*
  name: SetKey
  href: api/RoosterPlanner.Models.Entity.html#RoosterPlanner_Models_Entity_SetKey_
  commentId: Overload:RoosterPlanner.Models.Entity.SetKey
  isSpec: "True"
  fullName: RoosterPlanner.Models.Entity.SetKey
  nameWithType: Entity.SetKey
- uid: RoosterPlanner.Models.FilterModels
  name: RoosterPlanner.Models.FilterModels
  href: api/RoosterPlanner.Models.FilterModels.html
  commentId: N:RoosterPlanner.Models.FilterModels
  fullName: RoosterPlanner.Models.FilterModels
  nameWithType: RoosterPlanner.Models.FilterModels
- uid: RoosterPlanner.Models.FilterModels.EntityFilterBase
  name: EntityFilterBase
  href: api/RoosterPlanner.Models.FilterModels.EntityFilterBase.html
  commentId: T:RoosterPlanner.Models.FilterModels.EntityFilterBase
  fullName: RoosterPlanner.Models.FilterModels.EntityFilterBase
  nameWithType: EntityFilterBase
- uid: RoosterPlanner.Models.FilterModels.EntityFilterBase.#ctor
  name: EntityFilterBase()
  href: api/RoosterPlanner.Models.FilterModels.EntityFilterBase.html#RoosterPlanner_Models_FilterModels_EntityFilterBase__ctor
  commentId: M:RoosterPlanner.Models.FilterModels.EntityFilterBase.#ctor
  fullName: RoosterPlanner.Models.FilterModels.EntityFilterBase.EntityFilterBase()
  nameWithType: EntityFilterBase.EntityFilterBase()
- uid: RoosterPlanner.Models.FilterModels.EntityFilterBase.#ctor(System.String[])
  name: EntityFilterBase(String[])
  href: api/RoosterPlanner.Models.FilterModels.EntityFilterBase.html#RoosterPlanner_Models_FilterModels_EntityFilterBase__ctor_System_String___
  commentId: M:RoosterPlanner.Models.FilterModels.EntityFilterBase.#ctor(System.String[])
  name.vb: EntityFilterBase(String())
  fullName: RoosterPlanner.Models.FilterModels.EntityFilterBase.EntityFilterBase(System.String[])
  fullName.vb: RoosterPlanner.Models.FilterModels.EntityFilterBase.EntityFilterBase(System.String())
  nameWithType: EntityFilterBase.EntityFilterBase(String[])
  nameWithType.vb: EntityFilterBase.EntityFilterBase(String())
- uid: RoosterPlanner.Models.FilterModels.EntityFilterBase.#ctor*
  name: EntityFilterBase
  href: api/RoosterPlanner.Models.FilterModels.EntityFilterBase.html#RoosterPlanner_Models_FilterModels_EntityFilterBase__ctor_
  commentId: Overload:RoosterPlanner.Models.FilterModels.EntityFilterBase.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.EntityFilterBase.EntityFilterBase
  nameWithType: EntityFilterBase.EntityFilterBase
- uid: RoosterPlanner.Models.FilterModels.EntityFilterBase.SetFilter*
  name: SetFilter
  href: api/RoosterPlanner.Models.FilterModels.EntityFilterBase.html#RoosterPlanner_Models_FilterModels_EntityFilterBase_SetFilter_
  commentId: Overload:RoosterPlanner.Models.FilterModels.EntityFilterBase.SetFilter
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.EntityFilterBase.SetFilter
  nameWithType: EntityFilterBase.SetFilter
- uid: RoosterPlanner.Models.FilterModels.EntityFilterBase.SetFilter``1(System.Linq.IQueryable{``0})
  name: SetFilter<T>(IQueryable<T>)
  href: api/RoosterPlanner.Models.FilterModels.EntityFilterBase.html#RoosterPlanner_Models_FilterModels_EntityFilterBase_SetFilter__1_System_Linq_IQueryable___0__
  commentId: M:RoosterPlanner.Models.FilterModels.EntityFilterBase.SetFilter``1(System.Linq.IQueryable{``0})
  name.vb: SetFilter(Of T)(IQueryable(Of T))
  fullName: RoosterPlanner.Models.FilterModels.EntityFilterBase.SetFilter<T>(System.Linq.IQueryable<T>)
  fullName.vb: RoosterPlanner.Models.FilterModels.EntityFilterBase.SetFilter(Of T)(System.Linq.IQueryable(Of T))
  nameWithType: EntityFilterBase.SetFilter<T>(IQueryable<T>)
  nameWithType.vb: EntityFilterBase.SetFilter(Of T)(IQueryable(Of T))
- uid: RoosterPlanner.Models.FilterModels.EntityFilterBase.Sort
  name: Sort
  href: api/RoosterPlanner.Models.FilterModels.EntityFilterBase.html#RoosterPlanner_Models_FilterModels_EntityFilterBase_Sort
  commentId: P:RoosterPlanner.Models.FilterModels.EntityFilterBase.Sort
  fullName: RoosterPlanner.Models.FilterModels.EntityFilterBase.Sort
  nameWithType: EntityFilterBase.Sort
- uid: RoosterPlanner.Models.FilterModels.EntityFilterBase.Sort*
  name: Sort
  href: api/RoosterPlanner.Models.FilterModels.EntityFilterBase.html#RoosterPlanner_Models_FilterModels_EntityFilterBase_Sort_
  commentId: Overload:RoosterPlanner.Models.FilterModels.EntityFilterBase.Sort
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.EntityFilterBase.Sort
  nameWithType: EntityFilterBase.Sort
- uid: RoosterPlanner.Models.FilterModels.PersonFilter
  name: PersonFilter
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html
  commentId: T:RoosterPlanner.Models.FilterModels.PersonFilter
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter
  nameWithType: PersonFilter
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.#ctor
  name: PersonFilter()
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter__ctor
  commentId: M:RoosterPlanner.Models.FilterModels.PersonFilter.#ctor
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.PersonFilter()
  nameWithType: PersonFilter.PersonFilter()
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.#ctor(System.Int32,System.Int32)
  name: PersonFilter(Int32, Int32)
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter__ctor_System_Int32_System_Int32_
  commentId: M:RoosterPlanner.Models.FilterModels.PersonFilter.#ctor(System.Int32,System.Int32)
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.PersonFilter(System.Int32, System.Int32)
  nameWithType: PersonFilter.PersonFilter(Int32, Int32)
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.#ctor*
  name: PersonFilter
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter__ctor_
  commentId: Overload:RoosterPlanner.Models.FilterModels.PersonFilter.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.PersonFilter
  nameWithType: PersonFilter.PersonFilter
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.City
  name: City
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_City
  commentId: P:RoosterPlanner.Models.FilterModels.PersonFilter.City
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.City
  nameWithType: PersonFilter.City
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.City*
  name: City
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_City_
  commentId: Overload:RoosterPlanner.Models.FilterModels.PersonFilter.City
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.City
  nameWithType: PersonFilter.City
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.Email
  name: Email
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_Email
  commentId: P:RoosterPlanner.Models.FilterModels.PersonFilter.Email
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.Email
  nameWithType: PersonFilter.Email
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.Email*
  name: Email
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_Email_
  commentId: Overload:RoosterPlanner.Models.FilterModels.PersonFilter.Email
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.Email
  nameWithType: PersonFilter.Email
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.FirstName
  name: FirstName
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_FirstName
  commentId: P:RoosterPlanner.Models.FilterModels.PersonFilter.FirstName
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.FirstName
  nameWithType: PersonFilter.FirstName
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.FirstName*
  name: FirstName
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_FirstName_
  commentId: Overload:RoosterPlanner.Models.FilterModels.PersonFilter.FirstName
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.FirstName
  nameWithType: PersonFilter.FirstName
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.LastName
  name: LastName
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_LastName
  commentId: P:RoosterPlanner.Models.FilterModels.PersonFilter.LastName
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.LastName
  nameWithType: PersonFilter.LastName
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.LastName*
  name: LastName
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_LastName_
  commentId: Overload:RoosterPlanner.Models.FilterModels.PersonFilter.LastName
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.LastName
  nameWithType: PersonFilter.LastName
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.Offset
  name: Offset
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_Offset
  commentId: P:RoosterPlanner.Models.FilterModels.PersonFilter.Offset
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.Offset
  nameWithType: PersonFilter.Offset
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.Offset*
  name: Offset
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_Offset_
  commentId: Overload:RoosterPlanner.Models.FilterModels.PersonFilter.Offset
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.Offset
  nameWithType: PersonFilter.Offset
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.PageSize
  name: PageSize
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_PageSize
  commentId: P:RoosterPlanner.Models.FilterModels.PersonFilter.PageSize
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.PageSize
  nameWithType: PersonFilter.PageSize
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.PageSize*
  name: PageSize
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_PageSize_
  commentId: Overload:RoosterPlanner.Models.FilterModels.PersonFilter.PageSize
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.PageSize
  nameWithType: PersonFilter.PageSize
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.TotalItemCount
  name: TotalItemCount
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_TotalItemCount
  commentId: P:RoosterPlanner.Models.FilterModels.PersonFilter.TotalItemCount
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.TotalItemCount
  nameWithType: PersonFilter.TotalItemCount
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.TotalItemCount*
  name: TotalItemCount
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_TotalItemCount_
  commentId: Overload:RoosterPlanner.Models.FilterModels.PersonFilter.TotalItemCount
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.TotalItemCount
  nameWithType: PersonFilter.TotalItemCount
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.UserRole
  name: UserRole
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_UserRole
  commentId: P:RoosterPlanner.Models.FilterModels.PersonFilter.UserRole
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.UserRole
  nameWithType: PersonFilter.UserRole
- uid: RoosterPlanner.Models.FilterModels.PersonFilter.UserRole*
  name: UserRole
  href: api/RoosterPlanner.Models.FilterModels.PersonFilter.html#RoosterPlanner_Models_FilterModels_PersonFilter_UserRole_
  commentId: Overload:RoosterPlanner.Models.FilterModels.PersonFilter.UserRole
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.PersonFilter.UserRole
  nameWithType: PersonFilter.UserRole
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter
  name: ProjectFilter
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html
  commentId: T:RoosterPlanner.Models.FilterModels.ProjectFilter
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter
  nameWithType: ProjectFilter
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.#ctor
  name: ProjectFilter()
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter__ctor
  commentId: M:RoosterPlanner.Models.FilterModels.ProjectFilter.#ctor
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.ProjectFilter()
  nameWithType: ProjectFilter.ProjectFilter()
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.#ctor(System.Int32,System.Int32)
  name: ProjectFilter(Int32, Int32)
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter__ctor_System_Int32_System_Int32_
  commentId: M:RoosterPlanner.Models.FilterModels.ProjectFilter.#ctor(System.Int32,System.Int32)
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.ProjectFilter(System.Int32, System.Int32)
  nameWithType: ProjectFilter.ProjectFilter(Int32, Int32)
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.#ctor*
  name: ProjectFilter
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter__ctor_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ProjectFilter.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.ProjectFilter
  nameWithType: ProjectFilter.ProjectFilter
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.City
  name: City
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_City
  commentId: P:RoosterPlanner.Models.FilterModels.ProjectFilter.City
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.City
  nameWithType: ProjectFilter.City
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.City*
  name: City
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_City_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ProjectFilter.City
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.City
  nameWithType: ProjectFilter.City
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.Closed
  name: Closed
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_Closed
  commentId: P:RoosterPlanner.Models.FilterModels.ProjectFilter.Closed
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.Closed
  nameWithType: ProjectFilter.Closed
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.Closed*
  name: Closed
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_Closed_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ProjectFilter.Closed
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.Closed
  nameWithType: ProjectFilter.Closed
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.EndDate
  name: EndDate
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_EndDate
  commentId: P:RoosterPlanner.Models.FilterModels.ProjectFilter.EndDate
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.EndDate
  nameWithType: ProjectFilter.EndDate
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.EndDate*
  name: EndDate
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_EndDate_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ProjectFilter.EndDate
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.EndDate
  nameWithType: ProjectFilter.EndDate
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.Name
  name: Name
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_Name
  commentId: P:RoosterPlanner.Models.FilterModels.ProjectFilter.Name
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.Name
  nameWithType: ProjectFilter.Name
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.Name*
  name: Name
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_Name_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ProjectFilter.Name
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.Name
  nameWithType: ProjectFilter.Name
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.Offset
  name: Offset
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_Offset
  commentId: P:RoosterPlanner.Models.FilterModels.ProjectFilter.Offset
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.Offset
  nameWithType: ProjectFilter.Offset
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.Offset*
  name: Offset
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_Offset_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ProjectFilter.Offset
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.Offset
  nameWithType: ProjectFilter.Offset
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.PageSize
  name: PageSize
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_PageSize
  commentId: P:RoosterPlanner.Models.FilterModels.ProjectFilter.PageSize
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.PageSize
  nameWithType: ProjectFilter.PageSize
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.PageSize*
  name: PageSize
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_PageSize_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ProjectFilter.PageSize
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.PageSize
  nameWithType: ProjectFilter.PageSize
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.StartDate
  name: StartDate
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_StartDate
  commentId: P:RoosterPlanner.Models.FilterModels.ProjectFilter.StartDate
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.StartDate
  nameWithType: ProjectFilter.StartDate
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.StartDate*
  name: StartDate
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_StartDate_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ProjectFilter.StartDate
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.StartDate
  nameWithType: ProjectFilter.StartDate
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.TotalItemCount
  name: TotalItemCount
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_TotalItemCount
  commentId: P:RoosterPlanner.Models.FilterModels.ProjectFilter.TotalItemCount
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.TotalItemCount
  nameWithType: ProjectFilter.TotalItemCount
- uid: RoosterPlanner.Models.FilterModels.ProjectFilter.TotalItemCount*
  name: TotalItemCount
  href: api/RoosterPlanner.Models.FilterModels.ProjectFilter.html#RoosterPlanner_Models_FilterModels_ProjectFilter_TotalItemCount_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ProjectFilter.TotalItemCount
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ProjectFilter.TotalItemCount
  nameWithType: ProjectFilter.TotalItemCount
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter
  name: ShiftFilter
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html
  commentId: T:RoosterPlanner.Models.FilterModels.ShiftFilter
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter
  nameWithType: ShiftFilter
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.#ctor
  name: ShiftFilter()
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter__ctor
  commentId: M:RoosterPlanner.Models.FilterModels.ShiftFilter.#ctor
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.ShiftFilter()
  nameWithType: ShiftFilter.ShiftFilter()
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.#ctor(System.Int32,System.Int32)
  name: ShiftFilter(Int32, Int32)
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter__ctor_System_Int32_System_Int32_
  commentId: M:RoosterPlanner.Models.FilterModels.ShiftFilter.#ctor(System.Int32,System.Int32)
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.ShiftFilter(System.Int32, System.Int32)
  nameWithType: ShiftFilter.ShiftFilter(Int32, Int32)
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.#ctor*
  name: ShiftFilter
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter__ctor_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ShiftFilter.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.ShiftFilter
  nameWithType: ShiftFilter.ShiftFilter
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.Date
  name: Date
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_Date
  commentId: P:RoosterPlanner.Models.FilterModels.ShiftFilter.Date
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.Date
  nameWithType: ShiftFilter.Date
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.Date*
  name: Date
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_Date_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ShiftFilter.Date
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.Date
  nameWithType: ShiftFilter.Date
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.End
  name: End
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_End
  commentId: P:RoosterPlanner.Models.FilterModels.ShiftFilter.End
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.End
  nameWithType: ShiftFilter.End
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.End*
  name: End
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_End_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ShiftFilter.End
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.End
  nameWithType: ShiftFilter.End
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.Offset
  name: Offset
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_Offset
  commentId: P:RoosterPlanner.Models.FilterModels.ShiftFilter.Offset
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.Offset
  nameWithType: ShiftFilter.Offset
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.Offset*
  name: Offset
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_Offset_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ShiftFilter.Offset
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.Offset
  nameWithType: ShiftFilter.Offset
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.PageSize
  name: PageSize
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_PageSize
  commentId: P:RoosterPlanner.Models.FilterModels.ShiftFilter.PageSize
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.PageSize
  nameWithType: ShiftFilter.PageSize
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.PageSize*
  name: PageSize
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_PageSize_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ShiftFilter.PageSize
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.PageSize
  nameWithType: ShiftFilter.PageSize
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.ParticipantsRequired
  name: ParticipantsRequired
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_ParticipantsRequired
  commentId: P:RoosterPlanner.Models.FilterModels.ShiftFilter.ParticipantsRequired
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.ParticipantsRequired
  nameWithType: ShiftFilter.ParticipantsRequired
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.ParticipantsRequired*
  name: ParticipantsRequired
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_ParticipantsRequired_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ShiftFilter.ParticipantsRequired
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.ParticipantsRequired
  nameWithType: ShiftFilter.ParticipantsRequired
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.ProjectId
  name: ProjectId
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_ProjectId
  commentId: P:RoosterPlanner.Models.FilterModels.ShiftFilter.ProjectId
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.ProjectId
  nameWithType: ShiftFilter.ProjectId
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.ProjectId*
  name: ProjectId
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_ProjectId_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ShiftFilter.ProjectId
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.ProjectId
  nameWithType: ShiftFilter.ProjectId
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.Start
  name: Start
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_Start
  commentId: P:RoosterPlanner.Models.FilterModels.ShiftFilter.Start
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.Start
  nameWithType: ShiftFilter.Start
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.Start*
  name: Start
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_Start_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ShiftFilter.Start
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.Start
  nameWithType: ShiftFilter.Start
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.Tasks
  name: Tasks
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_Tasks
  commentId: P:RoosterPlanner.Models.FilterModels.ShiftFilter.Tasks
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.Tasks
  nameWithType: ShiftFilter.Tasks
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.Tasks*
  name: Tasks
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_Tasks_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ShiftFilter.Tasks
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.Tasks
  nameWithType: ShiftFilter.Tasks
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.TotalItemCount
  name: TotalItemCount
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_TotalItemCount
  commentId: P:RoosterPlanner.Models.FilterModels.ShiftFilter.TotalItemCount
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.TotalItemCount
  nameWithType: ShiftFilter.TotalItemCount
- uid: RoosterPlanner.Models.FilterModels.ShiftFilter.TotalItemCount*
  name: TotalItemCount
  href: api/RoosterPlanner.Models.FilterModels.ShiftFilter.html#RoosterPlanner_Models_FilterModels_ShiftFilter_TotalItemCount_
  commentId: Overload:RoosterPlanner.Models.FilterModels.ShiftFilter.TotalItemCount
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.ShiftFilter.TotalItemCount
  nameWithType: ShiftFilter.TotalItemCount
- uid: RoosterPlanner.Models.FilterModels.TaskFilter
  name: TaskFilter
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html
  commentId: T:RoosterPlanner.Models.FilterModels.TaskFilter
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter
  nameWithType: TaskFilter
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.#ctor
  name: TaskFilter()
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter__ctor
  commentId: M:RoosterPlanner.Models.FilterModels.TaskFilter.#ctor
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.TaskFilter()
  nameWithType: TaskFilter.TaskFilter()
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.#ctor(System.Int32,System.Int32)
  name: TaskFilter(Int32, Int32)
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter__ctor_System_Int32_System_Int32_
  commentId: M:RoosterPlanner.Models.FilterModels.TaskFilter.#ctor(System.Int32,System.Int32)
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.TaskFilter(System.Int32, System.Int32)
  nameWithType: TaskFilter.TaskFilter(Int32, Int32)
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.#ctor*
  name: TaskFilter
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter__ctor_
  commentId: Overload:RoosterPlanner.Models.FilterModels.TaskFilter.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.TaskFilter
  nameWithType: TaskFilter.TaskFilter
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.Name
  name: Name
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter_Name
  commentId: P:RoosterPlanner.Models.FilterModels.TaskFilter.Name
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.Name
  nameWithType: TaskFilter.Name
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.Name*
  name: Name
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter_Name_
  commentId: Overload:RoosterPlanner.Models.FilterModels.TaskFilter.Name
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.Name
  nameWithType: TaskFilter.Name
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.Offset
  name: Offset
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter_Offset
  commentId: P:RoosterPlanner.Models.FilterModels.TaskFilter.Offset
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.Offset
  nameWithType: TaskFilter.Offset
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.Offset*
  name: Offset
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter_Offset_
  commentId: Overload:RoosterPlanner.Models.FilterModels.TaskFilter.Offset
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.Offset
  nameWithType: TaskFilter.Offset
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.PageSize
  name: PageSize
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter_PageSize
  commentId: P:RoosterPlanner.Models.FilterModels.TaskFilter.PageSize
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.PageSize
  nameWithType: TaskFilter.PageSize
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.PageSize*
  name: PageSize
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter_PageSize_
  commentId: Overload:RoosterPlanner.Models.FilterModels.TaskFilter.PageSize
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.PageSize
  nameWithType: TaskFilter.PageSize
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.TotalItemCount
  name: TotalItemCount
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter_TotalItemCount
  commentId: P:RoosterPlanner.Models.FilterModels.TaskFilter.TotalItemCount
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.TotalItemCount
  nameWithType: TaskFilter.TotalItemCount
- uid: RoosterPlanner.Models.FilterModels.TaskFilter.TotalItemCount*
  name: TotalItemCount
  href: api/RoosterPlanner.Models.FilterModels.TaskFilter.html#RoosterPlanner_Models_FilterModels_TaskFilter_TotalItemCount_
  commentId: Overload:RoosterPlanner.Models.FilterModels.TaskFilter.TotalItemCount
  isSpec: "True"
  fullName: RoosterPlanner.Models.FilterModels.TaskFilter.TotalItemCount
  nameWithType: TaskFilter.TotalItemCount
- uid: RoosterPlanner.Models.IEntity
  name: IEntity
  href: api/RoosterPlanner.Models.IEntity.html
  commentId: T:RoosterPlanner.Models.IEntity
  fullName: RoosterPlanner.Models.IEntity
  nameWithType: IEntity
- uid: RoosterPlanner.Models.IEntity.Id
  name: Id
  href: api/RoosterPlanner.Models.IEntity.html#RoosterPlanner_Models_IEntity_Id
  commentId: P:RoosterPlanner.Models.IEntity.Id
  fullName: RoosterPlanner.Models.IEntity.Id
  nameWithType: IEntity.Id
- uid: RoosterPlanner.Models.IEntity.Id*
  name: Id
  href: api/RoosterPlanner.Models.IEntity.html#RoosterPlanner_Models_IEntity_Id_
  commentId: Overload:RoosterPlanner.Models.IEntity.Id
  isSpec: "True"
  fullName: RoosterPlanner.Models.IEntity.Id
  nameWithType: IEntity.Id
- uid: RoosterPlanner.Models.IEntity.LastEditBy
  name: LastEditBy
  href: api/RoosterPlanner.Models.IEntity.html#RoosterPlanner_Models_IEntity_LastEditBy
  commentId: P:RoosterPlanner.Models.IEntity.LastEditBy
  fullName: RoosterPlanner.Models.IEntity.LastEditBy
  nameWithType: IEntity.LastEditBy
- uid: RoosterPlanner.Models.IEntity.LastEditBy*
  name: LastEditBy
  href: api/RoosterPlanner.Models.IEntity.html#RoosterPlanner_Models_IEntity_LastEditBy_
  commentId: Overload:RoosterPlanner.Models.IEntity.LastEditBy
  isSpec: "True"
  fullName: RoosterPlanner.Models.IEntity.LastEditBy
  nameWithType: IEntity.LastEditBy
- uid: RoosterPlanner.Models.IEntity.LastEditDate
  name: LastEditDate
  href: api/RoosterPlanner.Models.IEntity.html#RoosterPlanner_Models_IEntity_LastEditDate
  commentId: P:RoosterPlanner.Models.IEntity.LastEditDate
  fullName: RoosterPlanner.Models.IEntity.LastEditDate
  nameWithType: IEntity.LastEditDate
- uid: RoosterPlanner.Models.IEntity.LastEditDate*
  name: LastEditDate
  href: api/RoosterPlanner.Models.IEntity.html#RoosterPlanner_Models_IEntity_LastEditDate_
  commentId: Overload:RoosterPlanner.Models.IEntity.LastEditDate
  isSpec: "True"
  fullName: RoosterPlanner.Models.IEntity.LastEditDate
  nameWithType: IEntity.LastEditDate
- uid: RoosterPlanner.Models.IEntity.RowVersion
  name: RowVersion
  href: api/RoosterPlanner.Models.IEntity.html#RoosterPlanner_Models_IEntity_RowVersion
  commentId: P:RoosterPlanner.Models.IEntity.RowVersion
  fullName: RoosterPlanner.Models.IEntity.RowVersion
  nameWithType: IEntity.RowVersion
- uid: RoosterPlanner.Models.IEntity.RowVersion*
  name: RowVersion
  href: api/RoosterPlanner.Models.IEntity.html#RoosterPlanner_Models_IEntity_RowVersion_
  commentId: Overload:RoosterPlanner.Models.IEntity.RowVersion
  isSpec: "True"
  fullName: RoosterPlanner.Models.IEntity.RowVersion
  nameWithType: IEntity.RowVersion
- uid: RoosterPlanner.Models.IEntity.SetKey(System.Guid)
  name: SetKey(Guid)
  href: api/RoosterPlanner.Models.IEntity.html#RoosterPlanner_Models_IEntity_SetKey_System_Guid_
  commentId: M:RoosterPlanner.Models.IEntity.SetKey(System.Guid)
  fullName: RoosterPlanner.Models.IEntity.SetKey(System.Guid)
  nameWithType: IEntity.SetKey(Guid)
- uid: RoosterPlanner.Models.IEntity.SetKey*
  name: SetKey
  href: api/RoosterPlanner.Models.IEntity.html#RoosterPlanner_Models_IEntity_SetKey_
  commentId: Overload:RoosterPlanner.Models.IEntity.SetKey
  isSpec: "True"
  fullName: RoosterPlanner.Models.IEntity.SetKey
  nameWithType: IEntity.SetKey
- uid: RoosterPlanner.Models.Manager
  name: Manager
  href: api/RoosterPlanner.Models.Manager.html
  commentId: T:RoosterPlanner.Models.Manager
  fullName: RoosterPlanner.Models.Manager
  nameWithType: Manager
- uid: RoosterPlanner.Models.Manager.#ctor
  name: Manager()
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager__ctor
  commentId: M:RoosterPlanner.Models.Manager.#ctor
  fullName: RoosterPlanner.Models.Manager.Manager()
  nameWithType: Manager.Manager()
- uid: RoosterPlanner.Models.Manager.#ctor(System.Guid)
  name: Manager(Guid)
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Manager.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Manager.Manager(System.Guid)
  nameWithType: Manager.Manager(Guid)
- uid: RoosterPlanner.Models.Manager.#ctor*
  name: Manager
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager__ctor_
  commentId: Overload:RoosterPlanner.Models.Manager.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Manager.Manager
  nameWithType: Manager.Manager
- uid: RoosterPlanner.Models.Manager.Person
  name: Person
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager_Person
  commentId: P:RoosterPlanner.Models.Manager.Person
  fullName: RoosterPlanner.Models.Manager.Person
  nameWithType: Manager.Person
- uid: RoosterPlanner.Models.Manager.Person*
  name: Person
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager_Person_
  commentId: Overload:RoosterPlanner.Models.Manager.Person
  isSpec: "True"
  fullName: RoosterPlanner.Models.Manager.Person
  nameWithType: Manager.Person
- uid: RoosterPlanner.Models.Manager.PersonId
  name: PersonId
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager_PersonId
  commentId: P:RoosterPlanner.Models.Manager.PersonId
  fullName: RoosterPlanner.Models.Manager.PersonId
  nameWithType: Manager.PersonId
- uid: RoosterPlanner.Models.Manager.PersonId*
  name: PersonId
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager_PersonId_
  commentId: Overload:RoosterPlanner.Models.Manager.PersonId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Manager.PersonId
  nameWithType: Manager.PersonId
- uid: RoosterPlanner.Models.Manager.Project
  name: Project
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager_Project
  commentId: P:RoosterPlanner.Models.Manager.Project
  fullName: RoosterPlanner.Models.Manager.Project
  nameWithType: Manager.Project
- uid: RoosterPlanner.Models.Manager.Project*
  name: Project
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager_Project_
  commentId: Overload:RoosterPlanner.Models.Manager.Project
  isSpec: "True"
  fullName: RoosterPlanner.Models.Manager.Project
  nameWithType: Manager.Project
- uid: RoosterPlanner.Models.Manager.ProjectId
  name: ProjectId
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager_ProjectId
  commentId: P:RoosterPlanner.Models.Manager.ProjectId
  fullName: RoosterPlanner.Models.Manager.ProjectId
  nameWithType: Manager.ProjectId
- uid: RoosterPlanner.Models.Manager.ProjectId*
  name: ProjectId
  href: api/RoosterPlanner.Models.Manager.html#RoosterPlanner_Models_Manager_ProjectId_
  commentId: Overload:RoosterPlanner.Models.Manager.ProjectId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Manager.ProjectId
  nameWithType: Manager.ProjectId
- uid: RoosterPlanner.Models.Models
  name: RoosterPlanner.Models.Models
  href: api/RoosterPlanner.Models.Models.html
  commentId: N:RoosterPlanner.Models.Models
  fullName: RoosterPlanner.Models.Models
  nameWithType: RoosterPlanner.Models.Models
- uid: RoosterPlanner.Models.Models.Enums
  name: RoosterPlanner.Models.Models.Enums
  href: api/RoosterPlanner.Models.Models.Enums.html
  commentId: N:RoosterPlanner.Models.Models.Enums
  fullName: RoosterPlanner.Models.Models.Enums
  nameWithType: RoosterPlanner.Models.Models.Enums
- uid: RoosterPlanner.Models.Models.Enums.AvailabilityStatus
  name: AvailabilityStatus
  href: api/RoosterPlanner.Models.Models.Enums.AvailabilityStatus.html
  commentId: T:RoosterPlanner.Models.Models.Enums.AvailabilityStatus
  fullName: RoosterPlanner.Models.Models.Enums.AvailabilityStatus
  nameWithType: AvailabilityStatus
- uid: RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Complete
  name: Complete
  href: api/RoosterPlanner.Models.Models.Enums.AvailabilityStatus.html#RoosterPlanner_Models_Models_Enums_AvailabilityStatus_Complete
  commentId: F:RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Complete
  fullName: RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Complete
  nameWithType: AvailabilityStatus.Complete
- uid: RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Incomplete
  name: Incomplete
  href: api/RoosterPlanner.Models.Models.Enums.AvailabilityStatus.html#RoosterPlanner_Models_Models_Enums_AvailabilityStatus_Incomplete
  commentId: F:RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Incomplete
  fullName: RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Incomplete
  nameWithType: AvailabilityStatus.Incomplete
- uid: RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Scheduled
  name: Scheduled
  href: api/RoosterPlanner.Models.Models.Enums.AvailabilityStatus.html#RoosterPlanner_Models_Models_Enums_AvailabilityStatus_Scheduled
  commentId: F:RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Scheduled
  fullName: RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Scheduled
  nameWithType: AvailabilityStatus.Scheduled
- uid: RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Unavailable
  name: Unavailable
  href: api/RoosterPlanner.Models.Models.Enums.AvailabilityStatus.html#RoosterPlanner_Models_Models_Enums_AvailabilityStatus_Unavailable
  commentId: F:RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Unavailable
  fullName: RoosterPlanner.Models.Models.Enums.AvailabilityStatus.Unavailable
  nameWithType: AvailabilityStatus.Unavailable
- uid: RoosterPlanner.Models.Models.Enums.UserRole
  name: UserRole
  href: api/RoosterPlanner.Models.Models.Enums.UserRole.html
  commentId: T:RoosterPlanner.Models.Models.Enums.UserRole
  fullName: RoosterPlanner.Models.Models.Enums.UserRole
  nameWithType: UserRole
- uid: RoosterPlanner.Models.Models.Enums.UserRole.Boardmember
  name: Boardmember
  href: api/RoosterPlanner.Models.Models.Enums.UserRole.html#RoosterPlanner_Models_Models_Enums_UserRole_Boardmember
  commentId: F:RoosterPlanner.Models.Models.Enums.UserRole.Boardmember
  fullName: RoosterPlanner.Models.Models.Enums.UserRole.Boardmember
  nameWithType: UserRole.Boardmember
- uid: RoosterPlanner.Models.Models.Enums.UserRole.Committeemember
  name: Committeemember
  href: api/RoosterPlanner.Models.Models.Enums.UserRole.html#RoosterPlanner_Models_Models_Enums_UserRole_Committeemember
  commentId: F:RoosterPlanner.Models.Models.Enums.UserRole.Committeemember
  fullName: RoosterPlanner.Models.Models.Enums.UserRole.Committeemember
  nameWithType: UserRole.Committeemember
- uid: RoosterPlanner.Models.Models.Enums.UserRole.None
  name: None
  href: api/RoosterPlanner.Models.Models.Enums.UserRole.html#RoosterPlanner_Models_Models_Enums_UserRole_None
  commentId: F:RoosterPlanner.Models.Models.Enums.UserRole.None
  fullName: RoosterPlanner.Models.Models.Enums.UserRole.None
  nameWithType: UserRole.None
- uid: RoosterPlanner.Models.Models.Enums.UserRole.Volunteer
  name: Volunteer
  href: api/RoosterPlanner.Models.Models.Enums.UserRole.html#RoosterPlanner_Models_Models_Enums_UserRole_Volunteer
  commentId: F:RoosterPlanner.Models.Models.Enums.UserRole.Volunteer
  fullName: RoosterPlanner.Models.Models.Enums.UserRole.Volunteer
  nameWithType: UserRole.Volunteer
- uid: RoosterPlanner.Models.Models.ShiftData
  name: ShiftData
  href: api/RoosterPlanner.Models.Models.ShiftData.html
  commentId: T:RoosterPlanner.Models.Models.ShiftData
  fullName: RoosterPlanner.Models.Models.ShiftData
  nameWithType: ShiftData
- uid: RoosterPlanner.Models.Models.ShiftData.Dates
  name: Dates
  href: api/RoosterPlanner.Models.Models.ShiftData.html#RoosterPlanner_Models_Models_ShiftData_Dates
  commentId: P:RoosterPlanner.Models.Models.ShiftData.Dates
  fullName: RoosterPlanner.Models.Models.ShiftData.Dates
  nameWithType: ShiftData.Dates
- uid: RoosterPlanner.Models.Models.ShiftData.Dates*
  name: Dates
  href: api/RoosterPlanner.Models.Models.ShiftData.html#RoosterPlanner_Models_Models_ShiftData_Dates_
  commentId: Overload:RoosterPlanner.Models.Models.ShiftData.Dates
  isSpec: "True"
  fullName: RoosterPlanner.Models.Models.ShiftData.Dates
  nameWithType: ShiftData.Dates
- uid: RoosterPlanner.Models.Models.ShiftData.EndTimes
  name: EndTimes
  href: api/RoosterPlanner.Models.Models.ShiftData.html#RoosterPlanner_Models_Models_ShiftData_EndTimes
  commentId: P:RoosterPlanner.Models.Models.ShiftData.EndTimes
  fullName: RoosterPlanner.Models.Models.ShiftData.EndTimes
  nameWithType: ShiftData.EndTimes
- uid: RoosterPlanner.Models.Models.ShiftData.EndTimes*
  name: EndTimes
  href: api/RoosterPlanner.Models.Models.ShiftData.html#RoosterPlanner_Models_Models_ShiftData_EndTimes_
  commentId: Overload:RoosterPlanner.Models.Models.ShiftData.EndTimes
  isSpec: "True"
  fullName: RoosterPlanner.Models.Models.ShiftData.EndTimes
  nameWithType: ShiftData.EndTimes
- uid: RoosterPlanner.Models.Models.ShiftData.ParticipantsRequired
  name: ParticipantsRequired
  href: api/RoosterPlanner.Models.Models.ShiftData.html#RoosterPlanner_Models_Models_ShiftData_ParticipantsRequired
  commentId: P:RoosterPlanner.Models.Models.ShiftData.ParticipantsRequired
  fullName: RoosterPlanner.Models.Models.ShiftData.ParticipantsRequired
  nameWithType: ShiftData.ParticipantsRequired
- uid: RoosterPlanner.Models.Models.ShiftData.ParticipantsRequired*
  name: ParticipantsRequired
  href: api/RoosterPlanner.Models.Models.ShiftData.html#RoosterPlanner_Models_Models_ShiftData_ParticipantsRequired_
  commentId: Overload:RoosterPlanner.Models.Models.ShiftData.ParticipantsRequired
  isSpec: "True"
  fullName: RoosterPlanner.Models.Models.ShiftData.ParticipantsRequired
  nameWithType: ShiftData.ParticipantsRequired
- uid: RoosterPlanner.Models.Models.ShiftData.StartTimes
  name: StartTimes
  href: api/RoosterPlanner.Models.Models.ShiftData.html#RoosterPlanner_Models_Models_ShiftData_StartTimes
  commentId: P:RoosterPlanner.Models.Models.ShiftData.StartTimes
  fullName: RoosterPlanner.Models.Models.ShiftData.StartTimes
  nameWithType: ShiftData.StartTimes
- uid: RoosterPlanner.Models.Models.ShiftData.StartTimes*
  name: StartTimes
  href: api/RoosterPlanner.Models.Models.ShiftData.html#RoosterPlanner_Models_Models_ShiftData_StartTimes_
  commentId: Overload:RoosterPlanner.Models.Models.ShiftData.StartTimes
  isSpec: "True"
  fullName: RoosterPlanner.Models.Models.ShiftData.StartTimes
  nameWithType: ShiftData.StartTimes
- uid: RoosterPlanner.Models.Models.ShiftData.Tasks
  name: Tasks
  href: api/RoosterPlanner.Models.Models.ShiftData.html#RoosterPlanner_Models_Models_ShiftData_Tasks
  commentId: P:RoosterPlanner.Models.Models.ShiftData.Tasks
  fullName: RoosterPlanner.Models.Models.ShiftData.Tasks
  nameWithType: ShiftData.Tasks
- uid: RoosterPlanner.Models.Models.ShiftData.Tasks*
  name: Tasks
  href: api/RoosterPlanner.Models.Models.ShiftData.html#RoosterPlanner_Models_Models_ShiftData_Tasks_
  commentId: Overload:RoosterPlanner.Models.Models.ShiftData.Tasks
  isSpec: "True"
  fullName: RoosterPlanner.Models.Models.ShiftData.Tasks
  nameWithType: ShiftData.Tasks
- uid: RoosterPlanner.Models.Participation
  name: Participation
  href: api/RoosterPlanner.Models.Participation.html
  commentId: T:RoosterPlanner.Models.Participation
  fullName: RoosterPlanner.Models.Participation
  nameWithType: Participation
- uid: RoosterPlanner.Models.Participation.#ctor
  name: Participation()
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation__ctor
  commentId: M:RoosterPlanner.Models.Participation.#ctor
  fullName: RoosterPlanner.Models.Participation.Participation()
  nameWithType: Participation.Participation()
- uid: RoosterPlanner.Models.Participation.#ctor(System.Guid)
  name: Participation(Guid)
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Participation.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Participation.Participation(System.Guid)
  nameWithType: Participation.Participation(Guid)
- uid: RoosterPlanner.Models.Participation.#ctor*
  name: Participation
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation__ctor_
  commentId: Overload:RoosterPlanner.Models.Participation.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Participation.Participation
  nameWithType: Participation.Participation
- uid: RoosterPlanner.Models.Participation.Active
  name: Active
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_Active
  commentId: P:RoosterPlanner.Models.Participation.Active
  fullName: RoosterPlanner.Models.Participation.Active
  nameWithType: Participation.Active
- uid: RoosterPlanner.Models.Participation.Active*
  name: Active
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_Active_
  commentId: Overload:RoosterPlanner.Models.Participation.Active
  isSpec: "True"
  fullName: RoosterPlanner.Models.Participation.Active
  nameWithType: Participation.Active
- uid: RoosterPlanner.Models.Participation.Availabilities
  name: Availabilities
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_Availabilities
  commentId: P:RoosterPlanner.Models.Participation.Availabilities
  fullName: RoosterPlanner.Models.Participation.Availabilities
  nameWithType: Participation.Availabilities
- uid: RoosterPlanner.Models.Participation.Availabilities*
  name: Availabilities
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_Availabilities_
  commentId: Overload:RoosterPlanner.Models.Participation.Availabilities
  isSpec: "True"
  fullName: RoosterPlanner.Models.Participation.Availabilities
  nameWithType: Participation.Availabilities
- uid: RoosterPlanner.Models.Participation.MaxWorkingHoursPerWeek
  name: MaxWorkingHoursPerWeek
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_MaxWorkingHoursPerWeek
  commentId: P:RoosterPlanner.Models.Participation.MaxWorkingHoursPerWeek
  fullName: RoosterPlanner.Models.Participation.MaxWorkingHoursPerWeek
  nameWithType: Participation.MaxWorkingHoursPerWeek
- uid: RoosterPlanner.Models.Participation.MaxWorkingHoursPerWeek*
  name: MaxWorkingHoursPerWeek
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_MaxWorkingHoursPerWeek_
  commentId: Overload:RoosterPlanner.Models.Participation.MaxWorkingHoursPerWeek
  isSpec: "True"
  fullName: RoosterPlanner.Models.Participation.MaxWorkingHoursPerWeek
  nameWithType: Participation.MaxWorkingHoursPerWeek
- uid: RoosterPlanner.Models.Participation.Person
  name: Person
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_Person
  commentId: P:RoosterPlanner.Models.Participation.Person
  fullName: RoosterPlanner.Models.Participation.Person
  nameWithType: Participation.Person
- uid: RoosterPlanner.Models.Participation.Person*
  name: Person
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_Person_
  commentId: Overload:RoosterPlanner.Models.Participation.Person
  isSpec: "True"
  fullName: RoosterPlanner.Models.Participation.Person
  nameWithType: Participation.Person
- uid: RoosterPlanner.Models.Participation.PersonId
  name: PersonId
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_PersonId
  commentId: P:RoosterPlanner.Models.Participation.PersonId
  fullName: RoosterPlanner.Models.Participation.PersonId
  nameWithType: Participation.PersonId
- uid: RoosterPlanner.Models.Participation.PersonId*
  name: PersonId
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_PersonId_
  commentId: Overload:RoosterPlanner.Models.Participation.PersonId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Participation.PersonId
  nameWithType: Participation.PersonId
- uid: RoosterPlanner.Models.Participation.Project
  name: Project
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_Project
  commentId: P:RoosterPlanner.Models.Participation.Project
  fullName: RoosterPlanner.Models.Participation.Project
  nameWithType: Participation.Project
- uid: RoosterPlanner.Models.Participation.Project*
  name: Project
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_Project_
  commentId: Overload:RoosterPlanner.Models.Participation.Project
  isSpec: "True"
  fullName: RoosterPlanner.Models.Participation.Project
  nameWithType: Participation.Project
- uid: RoosterPlanner.Models.Participation.ProjectId
  name: ProjectId
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_ProjectId
  commentId: P:RoosterPlanner.Models.Participation.ProjectId
  fullName: RoosterPlanner.Models.Participation.ProjectId
  nameWithType: Participation.ProjectId
- uid: RoosterPlanner.Models.Participation.ProjectId*
  name: ProjectId
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_ProjectId_
  commentId: Overload:RoosterPlanner.Models.Participation.ProjectId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Participation.ProjectId
  nameWithType: Participation.ProjectId
- uid: RoosterPlanner.Models.Participation.Remark
  name: Remark
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_Remark
  commentId: P:RoosterPlanner.Models.Participation.Remark
  fullName: RoosterPlanner.Models.Participation.Remark
  nameWithType: Participation.Remark
- uid: RoosterPlanner.Models.Participation.Remark*
  name: Remark
  href: api/RoosterPlanner.Models.Participation.html#RoosterPlanner_Models_Participation_Remark_
  commentId: Overload:RoosterPlanner.Models.Participation.Remark
  isSpec: "True"
  fullName: RoosterPlanner.Models.Participation.Remark
  nameWithType: Participation.Remark
- uid: RoosterPlanner.Models.Person
  name: Person
  href: api/RoosterPlanner.Models.Person.html
  commentId: T:RoosterPlanner.Models.Person
  fullName: RoosterPlanner.Models.Person
  nameWithType: Person
- uid: RoosterPlanner.Models.Person.#ctor
  name: Person()
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person__ctor
  commentId: M:RoosterPlanner.Models.Person.#ctor
  fullName: RoosterPlanner.Models.Person.Person()
  nameWithType: Person.Person()
- uid: RoosterPlanner.Models.Person.#ctor(System.Guid)
  name: Person(Guid)
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Person.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Person.Person(System.Guid)
  nameWithType: Person.Person(Guid)
- uid: RoosterPlanner.Models.Person.#ctor*
  name: Person
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person__ctor_
  commentId: Overload:RoosterPlanner.Models.Person.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.Person
  nameWithType: Person.Person
- uid: RoosterPlanner.Models.Person.Certificates
  name: Certificates
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_Certificates
  commentId: P:RoosterPlanner.Models.Person.Certificates
  fullName: RoosterPlanner.Models.Person.Certificates
  nameWithType: Person.Certificates
- uid: RoosterPlanner.Models.Person.Certificates*
  name: Certificates
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_Certificates_
  commentId: Overload:RoosterPlanner.Models.Person.Certificates
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.Certificates
  nameWithType: Person.Certificates
- uid: RoosterPlanner.Models.Person.City
  name: City
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_City
  commentId: P:RoosterPlanner.Models.Person.City
  fullName: RoosterPlanner.Models.Person.City
  nameWithType: Person.City
- uid: RoosterPlanner.Models.Person.City*
  name: City
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_City_
  commentId: Overload:RoosterPlanner.Models.Person.City
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.City
  nameWithType: Person.City
- uid: RoosterPlanner.Models.Person.DateOfBirth
  name: DateOfBirth
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_DateOfBirth
  commentId: P:RoosterPlanner.Models.Person.DateOfBirth
  fullName: RoosterPlanner.Models.Person.DateOfBirth
  nameWithType: Person.DateOfBirth
- uid: RoosterPlanner.Models.Person.DateOfBirth*
  name: DateOfBirth
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_DateOfBirth_
  commentId: Overload:RoosterPlanner.Models.Person.DateOfBirth
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.DateOfBirth
  nameWithType: Person.DateOfBirth
- uid: RoosterPlanner.Models.Person.Email
  name: Email
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_Email
  commentId: P:RoosterPlanner.Models.Person.Email
  fullName: RoosterPlanner.Models.Person.Email
  nameWithType: Person.Email
- uid: RoosterPlanner.Models.Person.Email*
  name: Email
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_Email_
  commentId: Overload:RoosterPlanner.Models.Person.Email
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.Email
  nameWithType: Person.Email
- uid: RoosterPlanner.Models.Person.FirstName
  name: FirstName
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_FirstName
  commentId: P:RoosterPlanner.Models.Person.FirstName
  fullName: RoosterPlanner.Models.Person.FirstName
  nameWithType: Person.FirstName
- uid: RoosterPlanner.Models.Person.FirstName*
  name: FirstName
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_FirstName_
  commentId: Overload:RoosterPlanner.Models.Person.FirstName
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.FirstName
  nameWithType: Person.FirstName
- uid: RoosterPlanner.Models.Person.LastName
  name: LastName
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_LastName
  commentId: P:RoosterPlanner.Models.Person.LastName
  fullName: RoosterPlanner.Models.Person.LastName
  nameWithType: Person.LastName
- uid: RoosterPlanner.Models.Person.LastName*
  name: LastName
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_LastName_
  commentId: Overload:RoosterPlanner.Models.Person.LastName
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.LastName
  nameWithType: Person.LastName
- uid: RoosterPlanner.Models.Person.Nationality
  name: Nationality
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_Nationality
  commentId: P:RoosterPlanner.Models.Person.Nationality
  fullName: RoosterPlanner.Models.Person.Nationality
  nameWithType: Person.Nationality
- uid: RoosterPlanner.Models.Person.Nationality*
  name: Nationality
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_Nationality_
  commentId: Overload:RoosterPlanner.Models.Person.Nationality
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.Nationality
  nameWithType: Person.Nationality
- uid: RoosterPlanner.Models.Person.Oid
  name: Oid
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_Oid
  commentId: P:RoosterPlanner.Models.Person.Oid
  fullName: RoosterPlanner.Models.Person.Oid
  nameWithType: Person.Oid
- uid: RoosterPlanner.Models.Person.Oid*
  name: Oid
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_Oid_
  commentId: Overload:RoosterPlanner.Models.Person.Oid
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.Oid
  nameWithType: Person.Oid
- uid: RoosterPlanner.Models.Person.Participations
  name: Participations
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_Participations
  commentId: P:RoosterPlanner.Models.Person.Participations
  fullName: RoosterPlanner.Models.Person.Participations
  nameWithType: Person.Participations
- uid: RoosterPlanner.Models.Person.Participations*
  name: Participations
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_Participations_
  commentId: Overload:RoosterPlanner.Models.Person.Participations
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.Participations
  nameWithType: Person.Participations
- uid: RoosterPlanner.Models.Person.PersonalRemark
  name: PersonalRemark
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_PersonalRemark
  commentId: P:RoosterPlanner.Models.Person.PersonalRemark
  fullName: RoosterPlanner.Models.Person.PersonalRemark
  nameWithType: Person.PersonalRemark
- uid: RoosterPlanner.Models.Person.PersonalRemark*
  name: PersonalRemark
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_PersonalRemark_
  commentId: Overload:RoosterPlanner.Models.Person.PersonalRemark
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.PersonalRemark
  nameWithType: Person.PersonalRemark
- uid: RoosterPlanner.Models.Person.PhoneNumber
  name: PhoneNumber
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_PhoneNumber
  commentId: P:RoosterPlanner.Models.Person.PhoneNumber
  fullName: RoosterPlanner.Models.Person.PhoneNumber
  nameWithType: Person.PhoneNumber
- uid: RoosterPlanner.Models.Person.PhoneNumber*
  name: PhoneNumber
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_PhoneNumber_
  commentId: Overload:RoosterPlanner.Models.Person.PhoneNumber
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.PhoneNumber
  nameWithType: Person.PhoneNumber
- uid: RoosterPlanner.Models.Person.PostalCode
  name: PostalCode
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_PostalCode
  commentId: P:RoosterPlanner.Models.Person.PostalCode
  fullName: RoosterPlanner.Models.Person.PostalCode
  nameWithType: Person.PostalCode
- uid: RoosterPlanner.Models.Person.PostalCode*
  name: PostalCode
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_PostalCode_
  commentId: Overload:RoosterPlanner.Models.Person.PostalCode
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.PostalCode
  nameWithType: Person.PostalCode
- uid: RoosterPlanner.Models.Person.ProfilePicture
  name: ProfilePicture
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_ProfilePicture
  commentId: P:RoosterPlanner.Models.Person.ProfilePicture
  fullName: RoosterPlanner.Models.Person.ProfilePicture
  nameWithType: Person.ProfilePicture
- uid: RoosterPlanner.Models.Person.ProfilePicture*
  name: ProfilePicture
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_ProfilePicture_
  commentId: Overload:RoosterPlanner.Models.Person.ProfilePicture
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.ProfilePicture
  nameWithType: Person.ProfilePicture
- uid: RoosterPlanner.Models.Person.ProfilePictureId
  name: ProfilePictureId
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_ProfilePictureId
  commentId: P:RoosterPlanner.Models.Person.ProfilePictureId
  fullName: RoosterPlanner.Models.Person.ProfilePictureId
  nameWithType: Person.ProfilePictureId
- uid: RoosterPlanner.Models.Person.ProfilePictureId*
  name: ProfilePictureId
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_ProfilePictureId_
  commentId: Overload:RoosterPlanner.Models.Person.ProfilePictureId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.ProfilePictureId
  nameWithType: Person.ProfilePictureId
- uid: RoosterPlanner.Models.Person.PushDisabled
  name: PushDisabled
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_PushDisabled
  commentId: P:RoosterPlanner.Models.Person.PushDisabled
  fullName: RoosterPlanner.Models.Person.PushDisabled
  nameWithType: Person.PushDisabled
- uid: RoosterPlanner.Models.Person.PushDisabled*
  name: PushDisabled
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_PushDisabled_
  commentId: Overload:RoosterPlanner.Models.Person.PushDisabled
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.PushDisabled
  nameWithType: Person.PushDisabled
- uid: RoosterPlanner.Models.Person.StaffRemark
  name: StaffRemark
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_StaffRemark
  commentId: P:RoosterPlanner.Models.Person.StaffRemark
  fullName: RoosterPlanner.Models.Person.StaffRemark
  nameWithType: Person.StaffRemark
- uid: RoosterPlanner.Models.Person.StaffRemark*
  name: StaffRemark
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_StaffRemark_
  commentId: Overload:RoosterPlanner.Models.Person.StaffRemark
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.StaffRemark
  nameWithType: Person.StaffRemark
- uid: RoosterPlanner.Models.Person.StreetAddress
  name: StreetAddress
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_StreetAddress
  commentId: P:RoosterPlanner.Models.Person.StreetAddress
  fullName: RoosterPlanner.Models.Person.StreetAddress
  nameWithType: Person.StreetAddress
- uid: RoosterPlanner.Models.Person.StreetAddress*
  name: StreetAddress
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_StreetAddress_
  commentId: Overload:RoosterPlanner.Models.Person.StreetAddress
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.StreetAddress
  nameWithType: Person.StreetAddress
- uid: RoosterPlanner.Models.Person.UserRole
  name: UserRole
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_UserRole
  commentId: P:RoosterPlanner.Models.Person.UserRole
  fullName: RoosterPlanner.Models.Person.UserRole
  nameWithType: Person.UserRole
- uid: RoosterPlanner.Models.Person.UserRole*
  name: UserRole
  href: api/RoosterPlanner.Models.Person.html#RoosterPlanner_Models_Person_UserRole_
  commentId: Overload:RoosterPlanner.Models.Person.UserRole
  isSpec: "True"
  fullName: RoosterPlanner.Models.Person.UserRole
  nameWithType: Person.UserRole
- uid: RoosterPlanner.Models.Project
  name: Project
  href: api/RoosterPlanner.Models.Project.html
  commentId: T:RoosterPlanner.Models.Project
  fullName: RoosterPlanner.Models.Project
  nameWithType: Project
- uid: RoosterPlanner.Models.Project.#ctor
  name: Project()
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project__ctor
  commentId: M:RoosterPlanner.Models.Project.#ctor
  fullName: RoosterPlanner.Models.Project.Project()
  nameWithType: Project.Project()
- uid: RoosterPlanner.Models.Project.#ctor(System.Guid)
  name: Project(Guid)
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Project.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Project.Project(System.Guid)
  nameWithType: Project.Project(Guid)
- uid: RoosterPlanner.Models.Project.#ctor*
  name: Project
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project__ctor_
  commentId: Overload:RoosterPlanner.Models.Project.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.Project
  nameWithType: Project.Project
- uid: RoosterPlanner.Models.Project.Address
  name: Address
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Address
  commentId: P:RoosterPlanner.Models.Project.Address
  fullName: RoosterPlanner.Models.Project.Address
  nameWithType: Project.Address
- uid: RoosterPlanner.Models.Project.Address*
  name: Address
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Address_
  commentId: Overload:RoosterPlanner.Models.Project.Address
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.Address
  nameWithType: Project.Address
- uid: RoosterPlanner.Models.Project.City
  name: City
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_City
  commentId: P:RoosterPlanner.Models.Project.City
  fullName: RoosterPlanner.Models.Project.City
  nameWithType: Project.City
- uid: RoosterPlanner.Models.Project.City*
  name: City
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_City_
  commentId: Overload:RoosterPlanner.Models.Project.City
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.City
  nameWithType: Project.City
- uid: RoosterPlanner.Models.Project.Closed
  name: Closed
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Closed
  commentId: P:RoosterPlanner.Models.Project.Closed
  fullName: RoosterPlanner.Models.Project.Closed
  nameWithType: Project.Closed
- uid: RoosterPlanner.Models.Project.Closed*
  name: Closed
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Closed_
  commentId: Overload:RoosterPlanner.Models.Project.Closed
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.Closed
  nameWithType: Project.Closed
- uid: RoosterPlanner.Models.Project.ContactAdres
  name: ContactAdres
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ContactAdres
  commentId: P:RoosterPlanner.Models.Project.ContactAdres
  fullName: RoosterPlanner.Models.Project.ContactAdres
  nameWithType: Project.ContactAdres
- uid: RoosterPlanner.Models.Project.ContactAdres*
  name: ContactAdres
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ContactAdres_
  commentId: Overload:RoosterPlanner.Models.Project.ContactAdres
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.ContactAdres
  nameWithType: Project.ContactAdres
- uid: RoosterPlanner.Models.Project.Description
  name: Description
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Description
  commentId: P:RoosterPlanner.Models.Project.Description
  fullName: RoosterPlanner.Models.Project.Description
  nameWithType: Project.Description
- uid: RoosterPlanner.Models.Project.Description*
  name: Description
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Description_
  commentId: Overload:RoosterPlanner.Models.Project.Description
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.Description
  nameWithType: Project.Description
- uid: RoosterPlanner.Models.Project.Name
  name: Name
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Name
  commentId: P:RoosterPlanner.Models.Project.Name
  fullName: RoosterPlanner.Models.Project.Name
  nameWithType: Project.Name
- uid: RoosterPlanner.Models.Project.Name*
  name: Name
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Name_
  commentId: Overload:RoosterPlanner.Models.Project.Name
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.Name
  nameWithType: Project.Name
- uid: RoosterPlanner.Models.Project.ParticipationEndDate
  name: ParticipationEndDate
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ParticipationEndDate
  commentId: P:RoosterPlanner.Models.Project.ParticipationEndDate
  fullName: RoosterPlanner.Models.Project.ParticipationEndDate
  nameWithType: Project.ParticipationEndDate
- uid: RoosterPlanner.Models.Project.ParticipationEndDate*
  name: ParticipationEndDate
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ParticipationEndDate_
  commentId: Overload:RoosterPlanner.Models.Project.ParticipationEndDate
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.ParticipationEndDate
  nameWithType: Project.ParticipationEndDate
- uid: RoosterPlanner.Models.Project.Participations
  name: Participations
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Participations
  commentId: P:RoosterPlanner.Models.Project.Participations
  fullName: RoosterPlanner.Models.Project.Participations
  nameWithType: Project.Participations
- uid: RoosterPlanner.Models.Project.Participations*
  name: Participations
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Participations_
  commentId: Overload:RoosterPlanner.Models.Project.Participations
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.Participations
  nameWithType: Project.Participations
- uid: RoosterPlanner.Models.Project.ParticipationStartDate
  name: ParticipationStartDate
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ParticipationStartDate
  commentId: P:RoosterPlanner.Models.Project.ParticipationStartDate
  fullName: RoosterPlanner.Models.Project.ParticipationStartDate
  nameWithType: Project.ParticipationStartDate
- uid: RoosterPlanner.Models.Project.ParticipationStartDate*
  name: ParticipationStartDate
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ParticipationStartDate_
  commentId: Overload:RoosterPlanner.Models.Project.ParticipationStartDate
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.ParticipationStartDate
  nameWithType: Project.ParticipationStartDate
- uid: RoosterPlanner.Models.Project.PictureUri
  name: PictureUri
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_PictureUri
  commentId: P:RoosterPlanner.Models.Project.PictureUri
  fullName: RoosterPlanner.Models.Project.PictureUri
  nameWithType: Project.PictureUri
- uid: RoosterPlanner.Models.Project.PictureUri*
  name: PictureUri
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_PictureUri_
  commentId: Overload:RoosterPlanner.Models.Project.PictureUri
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.PictureUri
  nameWithType: Project.PictureUri
- uid: RoosterPlanner.Models.Project.PictureUriId
  name: PictureUriId
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_PictureUriId
  commentId: P:RoosterPlanner.Models.Project.PictureUriId
  fullName: RoosterPlanner.Models.Project.PictureUriId
  nameWithType: Project.PictureUriId
- uid: RoosterPlanner.Models.Project.PictureUriId*
  name: PictureUriId
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_PictureUriId_
  commentId: Overload:RoosterPlanner.Models.Project.PictureUriId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.PictureUriId
  nameWithType: Project.PictureUriId
- uid: RoosterPlanner.Models.Project.ProjectEndDate
  name: ProjectEndDate
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ProjectEndDate
  commentId: P:RoosterPlanner.Models.Project.ProjectEndDate
  fullName: RoosterPlanner.Models.Project.ProjectEndDate
  nameWithType: Project.ProjectEndDate
- uid: RoosterPlanner.Models.Project.ProjectEndDate*
  name: ProjectEndDate
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ProjectEndDate_
  commentId: Overload:RoosterPlanner.Models.Project.ProjectEndDate
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.ProjectEndDate
  nameWithType: Project.ProjectEndDate
- uid: RoosterPlanner.Models.Project.ProjectStartDate
  name: ProjectStartDate
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ProjectStartDate
  commentId: P:RoosterPlanner.Models.Project.ProjectStartDate
  fullName: RoosterPlanner.Models.Project.ProjectStartDate
  nameWithType: Project.ProjectStartDate
- uid: RoosterPlanner.Models.Project.ProjectStartDate*
  name: ProjectStartDate
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ProjectStartDate_
  commentId: Overload:RoosterPlanner.Models.Project.ProjectStartDate
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.ProjectStartDate
  nameWithType: Project.ProjectStartDate
- uid: RoosterPlanner.Models.Project.ProjectTasks
  name: ProjectTasks
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ProjectTasks
  commentId: P:RoosterPlanner.Models.Project.ProjectTasks
  fullName: RoosterPlanner.Models.Project.ProjectTasks
  nameWithType: Project.ProjectTasks
- uid: RoosterPlanner.Models.Project.ProjectTasks*
  name: ProjectTasks
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_ProjectTasks_
  commentId: Overload:RoosterPlanner.Models.Project.ProjectTasks
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.ProjectTasks
  nameWithType: Project.ProjectTasks
- uid: RoosterPlanner.Models.Project.Shifts
  name: Shifts
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Shifts
  commentId: P:RoosterPlanner.Models.Project.Shifts
  fullName: RoosterPlanner.Models.Project.Shifts
  nameWithType: Project.Shifts
- uid: RoosterPlanner.Models.Project.Shifts*
  name: Shifts
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_Shifts_
  commentId: Overload:RoosterPlanner.Models.Project.Shifts
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.Shifts
  nameWithType: Project.Shifts
- uid: RoosterPlanner.Models.Project.WebsiteUrl
  name: WebsiteUrl
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_WebsiteUrl
  commentId: P:RoosterPlanner.Models.Project.WebsiteUrl
  fullName: RoosterPlanner.Models.Project.WebsiteUrl
  nameWithType: Project.WebsiteUrl
- uid: RoosterPlanner.Models.Project.WebsiteUrl*
  name: WebsiteUrl
  href: api/RoosterPlanner.Models.Project.html#RoosterPlanner_Models_Project_WebsiteUrl_
  commentId: Overload:RoosterPlanner.Models.Project.WebsiteUrl
  isSpec: "True"
  fullName: RoosterPlanner.Models.Project.WebsiteUrl
  nameWithType: Project.WebsiteUrl
- uid: RoosterPlanner.Models.ProjectTask
  name: ProjectTask
  href: api/RoosterPlanner.Models.ProjectTask.html
  commentId: T:RoosterPlanner.Models.ProjectTask
  fullName: RoosterPlanner.Models.ProjectTask
  nameWithType: ProjectTask
- uid: RoosterPlanner.Models.ProjectTask.#ctor
  name: ProjectTask()
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask__ctor
  commentId: M:RoosterPlanner.Models.ProjectTask.#ctor
  fullName: RoosterPlanner.Models.ProjectTask.ProjectTask()
  nameWithType: ProjectTask.ProjectTask()
- uid: RoosterPlanner.Models.ProjectTask.#ctor(System.Guid)
  name: ProjectTask(Guid)
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.ProjectTask.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.ProjectTask.ProjectTask(System.Guid)
  nameWithType: ProjectTask.ProjectTask(Guid)
- uid: RoosterPlanner.Models.ProjectTask.#ctor*
  name: ProjectTask
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask__ctor_
  commentId: Overload:RoosterPlanner.Models.ProjectTask.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.ProjectTask.ProjectTask
  nameWithType: ProjectTask.ProjectTask
- uid: RoosterPlanner.Models.ProjectTask.Project
  name: Project
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask_Project
  commentId: P:RoosterPlanner.Models.ProjectTask.Project
  fullName: RoosterPlanner.Models.ProjectTask.Project
  nameWithType: ProjectTask.Project
- uid: RoosterPlanner.Models.ProjectTask.Project*
  name: Project
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask_Project_
  commentId: Overload:RoosterPlanner.Models.ProjectTask.Project
  isSpec: "True"
  fullName: RoosterPlanner.Models.ProjectTask.Project
  nameWithType: ProjectTask.Project
- uid: RoosterPlanner.Models.ProjectTask.ProjectId
  name: ProjectId
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask_ProjectId
  commentId: P:RoosterPlanner.Models.ProjectTask.ProjectId
  fullName: RoosterPlanner.Models.ProjectTask.ProjectId
  nameWithType: ProjectTask.ProjectId
- uid: RoosterPlanner.Models.ProjectTask.ProjectId*
  name: ProjectId
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask_ProjectId_
  commentId: Overload:RoosterPlanner.Models.ProjectTask.ProjectId
  isSpec: "True"
  fullName: RoosterPlanner.Models.ProjectTask.ProjectId
  nameWithType: ProjectTask.ProjectId
- uid: RoosterPlanner.Models.ProjectTask.Task
  name: Task
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask_Task
  commentId: P:RoosterPlanner.Models.ProjectTask.Task
  fullName: RoosterPlanner.Models.ProjectTask.Task
  nameWithType: ProjectTask.Task
- uid: RoosterPlanner.Models.ProjectTask.Task*
  name: Task
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask_Task_
  commentId: Overload:RoosterPlanner.Models.ProjectTask.Task
  isSpec: "True"
  fullName: RoosterPlanner.Models.ProjectTask.Task
  nameWithType: ProjectTask.Task
- uid: RoosterPlanner.Models.ProjectTask.TaskId
  name: TaskId
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask_TaskId
  commentId: P:RoosterPlanner.Models.ProjectTask.TaskId
  fullName: RoosterPlanner.Models.ProjectTask.TaskId
  nameWithType: ProjectTask.TaskId
- uid: RoosterPlanner.Models.ProjectTask.TaskId*
  name: TaskId
  href: api/RoosterPlanner.Models.ProjectTask.html#RoosterPlanner_Models_ProjectTask_TaskId_
  commentId: Overload:RoosterPlanner.Models.ProjectTask.TaskId
  isSpec: "True"
  fullName: RoosterPlanner.Models.ProjectTask.TaskId
  nameWithType: ProjectTask.TaskId
- uid: RoosterPlanner.Models.Requirement
  name: Requirement
  href: api/RoosterPlanner.Models.Requirement.html
  commentId: T:RoosterPlanner.Models.Requirement
  fullName: RoosterPlanner.Models.Requirement
  nameWithType: Requirement
- uid: RoosterPlanner.Models.Requirement.#ctor
  name: Requirement()
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement__ctor
  commentId: M:RoosterPlanner.Models.Requirement.#ctor
  fullName: RoosterPlanner.Models.Requirement.Requirement()
  nameWithType: Requirement.Requirement()
- uid: RoosterPlanner.Models.Requirement.#ctor(System.Guid)
  name: Requirement(Guid)
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Requirement.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Requirement.Requirement(System.Guid)
  nameWithType: Requirement.Requirement(Guid)
- uid: RoosterPlanner.Models.Requirement.#ctor*
  name: Requirement
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement__ctor_
  commentId: Overload:RoosterPlanner.Models.Requirement.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Requirement.Requirement
  nameWithType: Requirement.Requirement
- uid: RoosterPlanner.Models.Requirement.CertificateType
  name: CertificateType
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement_CertificateType
  commentId: P:RoosterPlanner.Models.Requirement.CertificateType
  fullName: RoosterPlanner.Models.Requirement.CertificateType
  nameWithType: Requirement.CertificateType
- uid: RoosterPlanner.Models.Requirement.CertificateType*
  name: CertificateType
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement_CertificateType_
  commentId: Overload:RoosterPlanner.Models.Requirement.CertificateType
  isSpec: "True"
  fullName: RoosterPlanner.Models.Requirement.CertificateType
  nameWithType: Requirement.CertificateType
- uid: RoosterPlanner.Models.Requirement.CertificateTypeId
  name: CertificateTypeId
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement_CertificateTypeId
  commentId: P:RoosterPlanner.Models.Requirement.CertificateTypeId
  fullName: RoosterPlanner.Models.Requirement.CertificateTypeId
  nameWithType: Requirement.CertificateTypeId
- uid: RoosterPlanner.Models.Requirement.CertificateTypeId*
  name: CertificateTypeId
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement_CertificateTypeId_
  commentId: Overload:RoosterPlanner.Models.Requirement.CertificateTypeId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Requirement.CertificateTypeId
  nameWithType: Requirement.CertificateTypeId
- uid: RoosterPlanner.Models.Requirement.Task
  name: Task
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement_Task
  commentId: P:RoosterPlanner.Models.Requirement.Task
  fullName: RoosterPlanner.Models.Requirement.Task
  nameWithType: Requirement.Task
- uid: RoosterPlanner.Models.Requirement.Task*
  name: Task
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement_Task_
  commentId: Overload:RoosterPlanner.Models.Requirement.Task
  isSpec: "True"
  fullName: RoosterPlanner.Models.Requirement.Task
  nameWithType: Requirement.Task
- uid: RoosterPlanner.Models.Requirement.TaskId
  name: TaskId
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement_TaskId
  commentId: P:RoosterPlanner.Models.Requirement.TaskId
  fullName: RoosterPlanner.Models.Requirement.TaskId
  nameWithType: Requirement.TaskId
- uid: RoosterPlanner.Models.Requirement.TaskId*
  name: TaskId
  href: api/RoosterPlanner.Models.Requirement.html#RoosterPlanner_Models_Requirement_TaskId_
  commentId: Overload:RoosterPlanner.Models.Requirement.TaskId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Requirement.TaskId
  nameWithType: Requirement.TaskId
- uid: RoosterPlanner.Models.Shift
  name: Shift
  href: api/RoosterPlanner.Models.Shift.html
  commentId: T:RoosterPlanner.Models.Shift
  fullName: RoosterPlanner.Models.Shift
  nameWithType: Shift
- uid: RoosterPlanner.Models.Shift.#ctor
  name: Shift()
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift__ctor
  commentId: M:RoosterPlanner.Models.Shift.#ctor
  fullName: RoosterPlanner.Models.Shift.Shift()
  nameWithType: Shift.Shift()
- uid: RoosterPlanner.Models.Shift.#ctor(System.Guid)
  name: Shift(Guid)
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Shift.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Shift.Shift(System.Guid)
  nameWithType: Shift.Shift(Guid)
- uid: RoosterPlanner.Models.Shift.#ctor*
  name: Shift
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift__ctor_
  commentId: Overload:RoosterPlanner.Models.Shift.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Shift.Shift
  nameWithType: Shift.Shift
- uid: RoosterPlanner.Models.Shift.Availabilities
  name: Availabilities
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_Availabilities
  commentId: P:RoosterPlanner.Models.Shift.Availabilities
  fullName: RoosterPlanner.Models.Shift.Availabilities
  nameWithType: Shift.Availabilities
- uid: RoosterPlanner.Models.Shift.Availabilities*
  name: Availabilities
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_Availabilities_
  commentId: Overload:RoosterPlanner.Models.Shift.Availabilities
  isSpec: "True"
  fullName: RoosterPlanner.Models.Shift.Availabilities
  nameWithType: Shift.Availabilities
- uid: RoosterPlanner.Models.Shift.Date
  name: Date
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_Date
  commentId: P:RoosterPlanner.Models.Shift.Date
  fullName: RoosterPlanner.Models.Shift.Date
  nameWithType: Shift.Date
- uid: RoosterPlanner.Models.Shift.Date*
  name: Date
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_Date_
  commentId: Overload:RoosterPlanner.Models.Shift.Date
  isSpec: "True"
  fullName: RoosterPlanner.Models.Shift.Date
  nameWithType: Shift.Date
- uid: RoosterPlanner.Models.Shift.EndTime
  name: EndTime
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_EndTime
  commentId: P:RoosterPlanner.Models.Shift.EndTime
  fullName: RoosterPlanner.Models.Shift.EndTime
  nameWithType: Shift.EndTime
- uid: RoosterPlanner.Models.Shift.EndTime*
  name: EndTime
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_EndTime_
  commentId: Overload:RoosterPlanner.Models.Shift.EndTime
  isSpec: "True"
  fullName: RoosterPlanner.Models.Shift.EndTime
  nameWithType: Shift.EndTime
- uid: RoosterPlanner.Models.Shift.ParticipantsRequired
  name: ParticipantsRequired
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_ParticipantsRequired
  commentId: P:RoosterPlanner.Models.Shift.ParticipantsRequired
  fullName: RoosterPlanner.Models.Shift.ParticipantsRequired
  nameWithType: Shift.ParticipantsRequired
- uid: RoosterPlanner.Models.Shift.ParticipantsRequired*
  name: ParticipantsRequired
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_ParticipantsRequired_
  commentId: Overload:RoosterPlanner.Models.Shift.ParticipantsRequired
  isSpec: "True"
  fullName: RoosterPlanner.Models.Shift.ParticipantsRequired
  nameWithType: Shift.ParticipantsRequired
- uid: RoosterPlanner.Models.Shift.Project
  name: Project
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_Project
  commentId: P:RoosterPlanner.Models.Shift.Project
  fullName: RoosterPlanner.Models.Shift.Project
  nameWithType: Shift.Project
- uid: RoosterPlanner.Models.Shift.Project*
  name: Project
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_Project_
  commentId: Overload:RoosterPlanner.Models.Shift.Project
  isSpec: "True"
  fullName: RoosterPlanner.Models.Shift.Project
  nameWithType: Shift.Project
- uid: RoosterPlanner.Models.Shift.ProjectId
  name: ProjectId
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_ProjectId
  commentId: P:RoosterPlanner.Models.Shift.ProjectId
  fullName: RoosterPlanner.Models.Shift.ProjectId
  nameWithType: Shift.ProjectId
- uid: RoosterPlanner.Models.Shift.ProjectId*
  name: ProjectId
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_ProjectId_
  commentId: Overload:RoosterPlanner.Models.Shift.ProjectId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Shift.ProjectId
  nameWithType: Shift.ProjectId
- uid: RoosterPlanner.Models.Shift.StartTime
  name: StartTime
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_StartTime
  commentId: P:RoosterPlanner.Models.Shift.StartTime
  fullName: RoosterPlanner.Models.Shift.StartTime
  nameWithType: Shift.StartTime
- uid: RoosterPlanner.Models.Shift.StartTime*
  name: StartTime
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_StartTime_
  commentId: Overload:RoosterPlanner.Models.Shift.StartTime
  isSpec: "True"
  fullName: RoosterPlanner.Models.Shift.StartTime
  nameWithType: Shift.StartTime
- uid: RoosterPlanner.Models.Shift.Task
  name: Task
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_Task
  commentId: P:RoosterPlanner.Models.Shift.Task
  fullName: RoosterPlanner.Models.Shift.Task
  nameWithType: Shift.Task
- uid: RoosterPlanner.Models.Shift.Task*
  name: Task
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_Task_
  commentId: Overload:RoosterPlanner.Models.Shift.Task
  isSpec: "True"
  fullName: RoosterPlanner.Models.Shift.Task
  nameWithType: Shift.Task
- uid: RoosterPlanner.Models.Shift.TaskId
  name: TaskId
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_TaskId
  commentId: P:RoosterPlanner.Models.Shift.TaskId
  fullName: RoosterPlanner.Models.Shift.TaskId
  nameWithType: Shift.TaskId
- uid: RoosterPlanner.Models.Shift.TaskId*
  name: TaskId
  href: api/RoosterPlanner.Models.Shift.html#RoosterPlanner_Models_Shift_TaskId_
  commentId: Overload:RoosterPlanner.Models.Shift.TaskId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Shift.TaskId
  nameWithType: Shift.TaskId
- uid: RoosterPlanner.Models.Task
  name: Task
  href: api/RoosterPlanner.Models.Task.html
  commentId: T:RoosterPlanner.Models.Task
  fullName: RoosterPlanner.Models.Task
  nameWithType: Task
- uid: RoosterPlanner.Models.Task.#ctor
  name: Task()
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task__ctor
  commentId: M:RoosterPlanner.Models.Task.#ctor
  fullName: RoosterPlanner.Models.Task.Task()
  nameWithType: Task.Task()
- uid: RoosterPlanner.Models.Task.#ctor(System.Guid)
  name: Task(Guid)
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task__ctor_System_Guid_
  commentId: M:RoosterPlanner.Models.Task.#ctor(System.Guid)
  fullName: RoosterPlanner.Models.Task.Task(System.Guid)
  nameWithType: Task.Task(Guid)
- uid: RoosterPlanner.Models.Task.#ctor*
  name: Task
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task__ctor_
  commentId: Overload:RoosterPlanner.Models.Task.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.Task
  nameWithType: Task.Task
- uid: RoosterPlanner.Models.Task.Category
  name: Category
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Category
  commentId: P:RoosterPlanner.Models.Task.Category
  fullName: RoosterPlanner.Models.Task.Category
  nameWithType: Task.Category
- uid: RoosterPlanner.Models.Task.Category*
  name: Category
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Category_
  commentId: Overload:RoosterPlanner.Models.Task.Category
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.Category
  nameWithType: Task.Category
- uid: RoosterPlanner.Models.Task.CategoryId
  name: CategoryId
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_CategoryId
  commentId: P:RoosterPlanner.Models.Task.CategoryId
  fullName: RoosterPlanner.Models.Task.CategoryId
  nameWithType: Task.CategoryId
- uid: RoosterPlanner.Models.Task.CategoryId*
  name: CategoryId
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_CategoryId_
  commentId: Overload:RoosterPlanner.Models.Task.CategoryId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.CategoryId
  nameWithType: Task.CategoryId
- uid: RoosterPlanner.Models.Task.Color
  name: Color
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Color
  commentId: P:RoosterPlanner.Models.Task.Color
  fullName: RoosterPlanner.Models.Task.Color
  nameWithType: Task.Color
- uid: RoosterPlanner.Models.Task.Color*
  name: Color
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Color_
  commentId: Overload:RoosterPlanner.Models.Task.Color
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.Color
  nameWithType: Task.Color
- uid: RoosterPlanner.Models.Task.Description
  name: Description
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Description
  commentId: P:RoosterPlanner.Models.Task.Description
  fullName: RoosterPlanner.Models.Task.Description
  nameWithType: Task.Description
- uid: RoosterPlanner.Models.Task.Description*
  name: Description
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Description_
  commentId: Overload:RoosterPlanner.Models.Task.Description
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.Description
  nameWithType: Task.Description
- uid: RoosterPlanner.Models.Task.Instruction
  name: Instruction
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Instruction
  commentId: P:RoosterPlanner.Models.Task.Instruction
  fullName: RoosterPlanner.Models.Task.Instruction
  nameWithType: Task.Instruction
- uid: RoosterPlanner.Models.Task.Instruction*
  name: Instruction
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Instruction_
  commentId: Overload:RoosterPlanner.Models.Task.Instruction
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.Instruction
  nameWithType: Task.Instruction
- uid: RoosterPlanner.Models.Task.InstructionId
  name: InstructionId
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_InstructionId
  commentId: P:RoosterPlanner.Models.Task.InstructionId
  fullName: RoosterPlanner.Models.Task.InstructionId
  nameWithType: Task.InstructionId
- uid: RoosterPlanner.Models.Task.InstructionId*
  name: InstructionId
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_InstructionId_
  commentId: Overload:RoosterPlanner.Models.Task.InstructionId
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.InstructionId
  nameWithType: Task.InstructionId
- uid: RoosterPlanner.Models.Task.Name
  name: Name
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Name
  commentId: P:RoosterPlanner.Models.Task.Name
  fullName: RoosterPlanner.Models.Task.Name
  nameWithType: Task.Name
- uid: RoosterPlanner.Models.Task.Name*
  name: Name
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Name_
  commentId: Overload:RoosterPlanner.Models.Task.Name
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.Name
  nameWithType: Task.Name
- uid: RoosterPlanner.Models.Task.ProjectTasks
  name: ProjectTasks
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_ProjectTasks
  commentId: P:RoosterPlanner.Models.Task.ProjectTasks
  fullName: RoosterPlanner.Models.Task.ProjectTasks
  nameWithType: Task.ProjectTasks
- uid: RoosterPlanner.Models.Task.ProjectTasks*
  name: ProjectTasks
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_ProjectTasks_
  commentId: Overload:RoosterPlanner.Models.Task.ProjectTasks
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.ProjectTasks
  nameWithType: Task.ProjectTasks
- uid: RoosterPlanner.Models.Task.Requirements
  name: Requirements
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Requirements
  commentId: P:RoosterPlanner.Models.Task.Requirements
  fullName: RoosterPlanner.Models.Task.Requirements
  nameWithType: Task.Requirements
- uid: RoosterPlanner.Models.Task.Requirements*
  name: Requirements
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Requirements_
  commentId: Overload:RoosterPlanner.Models.Task.Requirements
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.Requirements
  nameWithType: Task.Requirements
- uid: RoosterPlanner.Models.Task.Shifts
  name: Shifts
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Shifts
  commentId: P:RoosterPlanner.Models.Task.Shifts
  fullName: RoosterPlanner.Models.Task.Shifts
  nameWithType: Task.Shifts
- uid: RoosterPlanner.Models.Task.Shifts*
  name: Shifts
  href: api/RoosterPlanner.Models.Task.html#RoosterPlanner_Models_Task_Shifts_
  commentId: Overload:RoosterPlanner.Models.Task.Shifts
  isSpec: "True"
  fullName: RoosterPlanner.Models.Task.Shifts
  nameWithType: Task.Shifts
- uid: RoosterPlanner.Models.Types
  name: RoosterPlanner.Models.Types
  href: api/RoosterPlanner.Models.Types.html
  commentId: N:RoosterPlanner.Models.Types
  fullName: RoosterPlanner.Models.Types
  nameWithType: RoosterPlanner.Models.Types
- uid: RoosterPlanner.Models.Types.AvailibilityType
  name: AvailibilityType
  href: api/RoosterPlanner.Models.Types.AvailibilityType.html
  commentId: T:RoosterPlanner.Models.Types.AvailibilityType
  fullName: RoosterPlanner.Models.Types.AvailibilityType
  nameWithType: AvailibilityType
- uid: RoosterPlanner.Models.Types.AvailibilityType.Maybe
  name: Maybe
  href: api/RoosterPlanner.Models.Types.AvailibilityType.html#RoosterPlanner_Models_Types_AvailibilityType_Maybe
  commentId: F:RoosterPlanner.Models.Types.AvailibilityType.Maybe
  fullName: RoosterPlanner.Models.Types.AvailibilityType.Maybe
  nameWithType: AvailibilityType.Maybe
- uid: RoosterPlanner.Models.Types.AvailibilityType.Not
  name: Not
  href: api/RoosterPlanner.Models.Types.AvailibilityType.html#RoosterPlanner_Models_Types_AvailibilityType_Not
  commentId: F:RoosterPlanner.Models.Types.AvailibilityType.Not
  fullName: RoosterPlanner.Models.Types.AvailibilityType.Not
  nameWithType: AvailibilityType.Not
- uid: RoosterPlanner.Models.Types.AvailibilityType.Ok
  name: Ok
  href: api/RoosterPlanner.Models.Types.AvailibilityType.html#RoosterPlanner_Models_Types_AvailibilityType_Ok
  commentId: F:RoosterPlanner.Models.Types.AvailibilityType.Ok
  fullName: RoosterPlanner.Models.Types.AvailibilityType.Ok
  nameWithType: AvailibilityType.Ok
- uid: RoosterPlanner.Models.Types.AvailibilityType.Scheduled
  name: Scheduled
  href: api/RoosterPlanner.Models.Types.AvailibilityType.html#RoosterPlanner_Models_Types_AvailibilityType_Scheduled
  commentId: F:RoosterPlanner.Models.Types.AvailibilityType.Scheduled
  fullName: RoosterPlanner.Models.Types.AvailibilityType.Scheduled
  nameWithType: AvailibilityType.Scheduled
- uid: RoosterPlanner.Service
  name: RoosterPlanner.Service
  href: api/RoosterPlanner.Service.html
  commentId: N:RoosterPlanner.Service
  fullName: RoosterPlanner.Service
  nameWithType: RoosterPlanner.Service
- uid: RoosterPlanner.Service.AvailabilityService
  name: AvailabilityService
  href: api/RoosterPlanner.Service.AvailabilityService.html
  commentId: T:RoosterPlanner.Service.AvailabilityService
  fullName: RoosterPlanner.Service.AvailabilityService
  nameWithType: AvailabilityService
- uid: RoosterPlanner.Service.AvailabilityService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.AvailabilityService})
  name: AvailabilityService(IUnitOfWork, ILogger<AvailabilityService>)
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService__ctor_RoosterPlanner_Data_Common_IUnitOfWork_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Service_AvailabilityService__
  commentId: M:RoosterPlanner.Service.AvailabilityService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.AvailabilityService})
  name.vb: AvailabilityService(IUnitOfWork, ILogger(Of AvailabilityService))
  fullName: RoosterPlanner.Service.AvailabilityService.AvailabilityService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Service.AvailabilityService>)
  fullName.vb: RoosterPlanner.Service.AvailabilityService.AvailabilityService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Service.AvailabilityService))
  nameWithType: AvailabilityService.AvailabilityService(IUnitOfWork, ILogger<AvailabilityService>)
  nameWithType.vb: AvailabilityService.AvailabilityService(IUnitOfWork, ILogger(Of AvailabilityService))
- uid: RoosterPlanner.Service.AvailabilityService.#ctor*
  name: AvailabilityService
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService__ctor_
  commentId: Overload:RoosterPlanner.Service.AvailabilityService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.AvailabilityService.AvailabilityService
  nameWithType: AvailabilityService.AvailabilityService
- uid: RoosterPlanner.Service.AvailabilityService.AddAvailability(RoosterPlanner.Models.Availability)
  name: AddAvailability(Availability)
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_AddAvailability_RoosterPlanner_Models_Availability_
  commentId: M:RoosterPlanner.Service.AvailabilityService.AddAvailability(RoosterPlanner.Models.Availability)
  fullName: RoosterPlanner.Service.AvailabilityService.AddAvailability(RoosterPlanner.Models.Availability)
  nameWithType: AvailabilityService.AddAvailability(Availability)
- uid: RoosterPlanner.Service.AvailabilityService.AddAvailability*
  name: AddAvailability
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_AddAvailability_
  commentId: Overload:RoosterPlanner.Service.AvailabilityService.AddAvailability
  isSpec: "True"
  fullName: RoosterPlanner.Service.AvailabilityService.AddAvailability
  nameWithType: AvailabilityService.AddAvailability
- uid: RoosterPlanner.Service.AvailabilityService.FindAvailabilitiesAsync(System.Guid,System.Guid)
  name: FindAvailabilitiesAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_FindAvailabilitiesAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.AvailabilityService.FindAvailabilitiesAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.AvailabilityService.FindAvailabilitiesAsync(System.Guid, System.Guid)
  nameWithType: AvailabilityService.FindAvailabilitiesAsync(Guid, Guid)
- uid: RoosterPlanner.Service.AvailabilityService.FindAvailabilitiesAsync*
  name: FindAvailabilitiesAsync
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_FindAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Service.AvailabilityService.FindAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.AvailabilityService.FindAvailabilitiesAsync
  nameWithType: AvailabilityService.FindAvailabilitiesAsync
- uid: RoosterPlanner.Service.AvailabilityService.GetActiveAvailabilities(System.Guid)
  name: GetActiveAvailabilities(Guid)
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_GetActiveAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Service.AvailabilityService.GetActiveAvailabilities(System.Guid)
  fullName: RoosterPlanner.Service.AvailabilityService.GetActiveAvailabilities(System.Guid)
  nameWithType: AvailabilityService.GetActiveAvailabilities(Guid)
- uid: RoosterPlanner.Service.AvailabilityService.GetActiveAvailabilities*
  name: GetActiveAvailabilities
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_GetActiveAvailabilities_
  commentId: Overload:RoosterPlanner.Service.AvailabilityService.GetActiveAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Service.AvailabilityService.GetActiveAvailabilities
  nameWithType: AvailabilityService.GetActiveAvailabilities
- uid: RoosterPlanner.Service.AvailabilityService.GetAvailability(System.Guid)
  name: GetAvailability(Guid)
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_GetAvailability_System_Guid_
  commentId: M:RoosterPlanner.Service.AvailabilityService.GetAvailability(System.Guid)
  fullName: RoosterPlanner.Service.AvailabilityService.GetAvailability(System.Guid)
  nameWithType: AvailabilityService.GetAvailability(Guid)
- uid: RoosterPlanner.Service.AvailabilityService.GetAvailability(System.Guid,System.Guid)
  name: GetAvailability(Guid, Guid)
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_GetAvailability_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.AvailabilityService.GetAvailability(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.AvailabilityService.GetAvailability(System.Guid, System.Guid)
  nameWithType: AvailabilityService.GetAvailability(Guid, Guid)
- uid: RoosterPlanner.Service.AvailabilityService.GetAvailability*
  name: GetAvailability
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_GetAvailability_
  commentId: Overload:RoosterPlanner.Service.AvailabilityService.GetAvailability
  isSpec: "True"
  fullName: RoosterPlanner.Service.AvailabilityService.GetAvailability
  nameWithType: AvailabilityService.GetAvailability
- uid: RoosterPlanner.Service.AvailabilityService.GetScheduledAvailabilities(System.Guid)
  name: GetScheduledAvailabilities(Guid)
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_GetScheduledAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Service.AvailabilityService.GetScheduledAvailabilities(System.Guid)
  fullName: RoosterPlanner.Service.AvailabilityService.GetScheduledAvailabilities(System.Guid)
  nameWithType: AvailabilityService.GetScheduledAvailabilities(Guid)
- uid: RoosterPlanner.Service.AvailabilityService.GetScheduledAvailabilities(System.Guid,System.DateTime)
  name: GetScheduledAvailabilities(Guid, DateTime)
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_GetScheduledAvailabilities_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Service.AvailabilityService.GetScheduledAvailabilities(System.Guid,System.DateTime)
  fullName: RoosterPlanner.Service.AvailabilityService.GetScheduledAvailabilities(System.Guid, System.DateTime)
  nameWithType: AvailabilityService.GetScheduledAvailabilities(Guid, DateTime)
- uid: RoosterPlanner.Service.AvailabilityService.GetScheduledAvailabilities*
  name: GetScheduledAvailabilities
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_GetScheduledAvailabilities_
  commentId: Overload:RoosterPlanner.Service.AvailabilityService.GetScheduledAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Service.AvailabilityService.GetScheduledAvailabilities
  nameWithType: AvailabilityService.GetScheduledAvailabilities
- uid: RoosterPlanner.Service.AvailabilityService.UpdateAvailability(RoosterPlanner.Models.Availability)
  name: UpdateAvailability(Availability)
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_UpdateAvailability_RoosterPlanner_Models_Availability_
  commentId: M:RoosterPlanner.Service.AvailabilityService.UpdateAvailability(RoosterPlanner.Models.Availability)
  fullName: RoosterPlanner.Service.AvailabilityService.UpdateAvailability(RoosterPlanner.Models.Availability)
  nameWithType: AvailabilityService.UpdateAvailability(Availability)
- uid: RoosterPlanner.Service.AvailabilityService.UpdateAvailability*
  name: UpdateAvailability
  href: api/RoosterPlanner.Service.AvailabilityService.html#RoosterPlanner_Service_AvailabilityService_UpdateAvailability_
  commentId: Overload:RoosterPlanner.Service.AvailabilityService.UpdateAvailability
  isSpec: "True"
  fullName: RoosterPlanner.Service.AvailabilityService.UpdateAvailability
  nameWithType: AvailabilityService.UpdateAvailability
- uid: RoosterPlanner.Service.AzureB2CService
  name: AzureB2CService
  href: api/RoosterPlanner.Service.AzureB2CService.html
  commentId: T:RoosterPlanner.Service.AzureB2CService
  fullName: RoosterPlanner.Service.AzureB2CService
  nameWithType: AzureB2CService
- uid: RoosterPlanner.Service.AzureB2CService.#ctor(Microsoft.Extensions.Options.IOptions{RoosterPlanner.Service.Config.AzureAuthenticationConfig})
  name: AzureB2CService(IOptions<AzureAuthenticationConfig>)
  href: api/RoosterPlanner.Service.AzureB2CService.html#RoosterPlanner_Service_AzureB2CService__ctor_Microsoft_Extensions_Options_IOptions_RoosterPlanner_Service_Config_AzureAuthenticationConfig__
  commentId: M:RoosterPlanner.Service.AzureB2CService.#ctor(Microsoft.Extensions.Options.IOptions{RoosterPlanner.Service.Config.AzureAuthenticationConfig})
  name.vb: AzureB2CService(IOptions(Of AzureAuthenticationConfig))
  fullName: RoosterPlanner.Service.AzureB2CService.AzureB2CService(Microsoft.Extensions.Options.IOptions<RoosterPlanner.Service.Config.AzureAuthenticationConfig>)
  fullName.vb: RoosterPlanner.Service.AzureB2CService.AzureB2CService(Microsoft.Extensions.Options.IOptions(Of RoosterPlanner.Service.Config.AzureAuthenticationConfig))
  nameWithType: AzureB2CService.AzureB2CService(IOptions<AzureAuthenticationConfig>)
  nameWithType.vb: AzureB2CService.AzureB2CService(IOptions(Of AzureAuthenticationConfig))
- uid: RoosterPlanner.Service.AzureB2CService.#ctor*
  name: AzureB2CService
  href: api/RoosterPlanner.Service.AzureB2CService.html#RoosterPlanner_Service_AzureB2CService__ctor_
  commentId: Overload:RoosterPlanner.Service.AzureB2CService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.AzureB2CService.AzureB2CService
  nameWithType: AzureB2CService.AzureB2CService
- uid: RoosterPlanner.Service.AzureB2CService.GetAllUsersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  name: GetAllUsersAsync(PersonFilter)
  href: api/RoosterPlanner.Service.AzureB2CService.html#RoosterPlanner_Service_AzureB2CService_GetAllUsersAsync_RoosterPlanner_Models_FilterModels_PersonFilter_
  commentId: M:RoosterPlanner.Service.AzureB2CService.GetAllUsersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  fullName: RoosterPlanner.Service.AzureB2CService.GetAllUsersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  nameWithType: AzureB2CService.GetAllUsersAsync(PersonFilter)
- uid: RoosterPlanner.Service.AzureB2CService.GetAllUsersAsync*
  name: GetAllUsersAsync
  href: api/RoosterPlanner.Service.AzureB2CService.html#RoosterPlanner_Service_AzureB2CService_GetAllUsersAsync_
  commentId: Overload:RoosterPlanner.Service.AzureB2CService.GetAllUsersAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.AzureB2CService.GetAllUsersAsync
  nameWithType: AzureB2CService.GetAllUsersAsync
- uid: RoosterPlanner.Service.AzureB2CService.GetUserAsync(System.Guid)
  name: GetUserAsync(Guid)
  href: api/RoosterPlanner.Service.AzureB2CService.html#RoosterPlanner_Service_AzureB2CService_GetUserAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.AzureB2CService.GetUserAsync(System.Guid)
  fullName: RoosterPlanner.Service.AzureB2CService.GetUserAsync(System.Guid)
  nameWithType: AzureB2CService.GetUserAsync(Guid)
- uid: RoosterPlanner.Service.AzureB2CService.GetUserAsync*
  name: GetUserAsync
  href: api/RoosterPlanner.Service.AzureB2CService.html#RoosterPlanner_Service_AzureB2CService_GetUserAsync_
  commentId: Overload:RoosterPlanner.Service.AzureB2CService.GetUserAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.AzureB2CService.GetUserAsync
  nameWithType: AzureB2CService.GetUserAsync
- uid: RoosterPlanner.Service.AzureB2CService.UpdateUserAsync(Microsoft.Graph.User)
  name: UpdateUserAsync(User)
  href: api/RoosterPlanner.Service.AzureB2CService.html#RoosterPlanner_Service_AzureB2CService_UpdateUserAsync_Microsoft_Graph_User_
  commentId: M:RoosterPlanner.Service.AzureB2CService.UpdateUserAsync(Microsoft.Graph.User)
  fullName: RoosterPlanner.Service.AzureB2CService.UpdateUserAsync(Microsoft.Graph.User)
  nameWithType: AzureB2CService.UpdateUserAsync(User)
- uid: RoosterPlanner.Service.AzureB2CService.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/RoosterPlanner.Service.AzureB2CService.html#RoosterPlanner_Service_AzureB2CService_UpdateUserAsync_
  commentId: Overload:RoosterPlanner.Service.AzureB2CService.UpdateUserAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.AzureB2CService.UpdateUserAsync
  nameWithType: AzureB2CService.UpdateUserAsync
- uid: RoosterPlanner.Service.BlobService
  name: BlobService
  href: api/RoosterPlanner.Service.BlobService.html
  commentId: T:RoosterPlanner.Service.BlobService
  fullName: RoosterPlanner.Service.BlobService
  nameWithType: BlobService
- uid: RoosterPlanner.Service.BlobService.#ctor(Microsoft.Extensions.Options.IOptions{RoosterPlanner.Service.Config.AzureBlobConfig})
  name: BlobService(IOptions<AzureBlobConfig>)
  href: api/RoosterPlanner.Service.BlobService.html#RoosterPlanner_Service_BlobService__ctor_Microsoft_Extensions_Options_IOptions_RoosterPlanner_Service_Config_AzureBlobConfig__
  commentId: M:RoosterPlanner.Service.BlobService.#ctor(Microsoft.Extensions.Options.IOptions{RoosterPlanner.Service.Config.AzureBlobConfig})
  name.vb: BlobService(IOptions(Of AzureBlobConfig))
  fullName: RoosterPlanner.Service.BlobService.BlobService(Microsoft.Extensions.Options.IOptions<RoosterPlanner.Service.Config.AzureBlobConfig>)
  fullName.vb: RoosterPlanner.Service.BlobService.BlobService(Microsoft.Extensions.Options.IOptions(Of RoosterPlanner.Service.Config.AzureBlobConfig))
  nameWithType: BlobService.BlobService(IOptions<AzureBlobConfig>)
  nameWithType.vb: BlobService.BlobService(IOptions(Of AzureBlobConfig))
- uid: RoosterPlanner.Service.BlobService.#ctor*
  name: BlobService
  href: api/RoosterPlanner.Service.BlobService.html#RoosterPlanner_Service_BlobService__ctor_
  commentId: Overload:RoosterPlanner.Service.BlobService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.BlobService.BlobService
  nameWithType: BlobService.BlobService
- uid: RoosterPlanner.Service.BlobService.DeleteFileBlobAsync(System.String,System.String)
  name: DeleteFileBlobAsync(String, String)
  href: api/RoosterPlanner.Service.BlobService.html#RoosterPlanner_Service_BlobService_DeleteFileBlobAsync_System_String_System_String_
  commentId: M:RoosterPlanner.Service.BlobService.DeleteFileBlobAsync(System.String,System.String)
  fullName: RoosterPlanner.Service.BlobService.DeleteFileBlobAsync(System.String, System.String)
  nameWithType: BlobService.DeleteFileBlobAsync(String, String)
- uid: RoosterPlanner.Service.BlobService.DeleteFileBlobAsync*
  name: DeleteFileBlobAsync
  href: api/RoosterPlanner.Service.BlobService.html#RoosterPlanner_Service_BlobService_DeleteFileBlobAsync_
  commentId: Overload:RoosterPlanner.Service.BlobService.DeleteFileBlobAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.BlobService.DeleteFileBlobAsync
  nameWithType: BlobService.DeleteFileBlobAsync
- uid: RoosterPlanner.Service.BlobService.UploadFileBlobAsync(System.String,System.String,System.IO.Stream,System.String)
  name: UploadFileBlobAsync(String, String, Stream, String)
  href: api/RoosterPlanner.Service.BlobService.html#RoosterPlanner_Service_BlobService_UploadFileBlobAsync_System_String_System_String_System_IO_Stream_System_String_
  commentId: M:RoosterPlanner.Service.BlobService.UploadFileBlobAsync(System.String,System.String,System.IO.Stream,System.String)
  fullName: RoosterPlanner.Service.BlobService.UploadFileBlobAsync(System.String, System.String, System.IO.Stream, System.String)
  nameWithType: BlobService.UploadFileBlobAsync(String, String, Stream, String)
- uid: RoosterPlanner.Service.BlobService.UploadFileBlobAsync*
  name: UploadFileBlobAsync
  href: api/RoosterPlanner.Service.BlobService.html#RoosterPlanner_Service_BlobService_UploadFileBlobAsync_
  commentId: Overload:RoosterPlanner.Service.BlobService.UploadFileBlobAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.BlobService.UploadFileBlobAsync
  nameWithType: BlobService.UploadFileBlobAsync
- uid: RoosterPlanner.Service.CertificateService
  name: CertificateService
  href: api/RoosterPlanner.Service.CertificateService.html
  commentId: T:RoosterPlanner.Service.CertificateService
  fullName: RoosterPlanner.Service.CertificateService
  nameWithType: CertificateService
- uid: RoosterPlanner.Service.CertificateService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.CertificateService})
  name: CertificateService(IUnitOfWork, ILogger<CertificateService>)
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService__ctor_RoosterPlanner_Data_Common_IUnitOfWork_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Service_CertificateService__
  commentId: M:RoosterPlanner.Service.CertificateService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.CertificateService})
  name.vb: CertificateService(IUnitOfWork, ILogger(Of CertificateService))
  fullName: RoosterPlanner.Service.CertificateService.CertificateService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Service.CertificateService>)
  fullName.vb: RoosterPlanner.Service.CertificateService.CertificateService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Service.CertificateService))
  nameWithType: CertificateService.CertificateService(IUnitOfWork, ILogger<CertificateService>)
  nameWithType.vb: CertificateService.CertificateService(IUnitOfWork, ILogger(Of CertificateService))
- uid: RoosterPlanner.Service.CertificateService.#ctor*
  name: CertificateService
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService__ctor_
  commentId: Overload:RoosterPlanner.Service.CertificateService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.CertificateService.CertificateService
  nameWithType: CertificateService.CertificateService
- uid: RoosterPlanner.Service.CertificateService.CreateCertificateAsync(RoosterPlanner.Models.Certificate)
  name: CreateCertificateAsync(Certificate)
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_CreateCertificateAsync_RoosterPlanner_Models_Certificate_
  commentId: M:RoosterPlanner.Service.CertificateService.CreateCertificateAsync(RoosterPlanner.Models.Certificate)
  fullName: RoosterPlanner.Service.CertificateService.CreateCertificateAsync(RoosterPlanner.Models.Certificate)
  nameWithType: CertificateService.CreateCertificateAsync(Certificate)
- uid: RoosterPlanner.Service.CertificateService.CreateCertificateAsync*
  name: CreateCertificateAsync
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_CreateCertificateAsync_
  commentId: Overload:RoosterPlanner.Service.CertificateService.CreateCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.CertificateService.CreateCertificateAsync
  nameWithType: CertificateService.CreateCertificateAsync
- uid: RoosterPlanner.Service.CertificateService.CreateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  name: CreateCertificateTypeAsync(CertificateType)
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_CreateCertificateTypeAsync_RoosterPlanner_Models_CertificateType_
  commentId: M:RoosterPlanner.Service.CertificateService.CreateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  fullName: RoosterPlanner.Service.CertificateService.CreateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  nameWithType: CertificateService.CreateCertificateTypeAsync(CertificateType)
- uid: RoosterPlanner.Service.CertificateService.CreateCertificateTypeAsync*
  name: CreateCertificateTypeAsync
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_CreateCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Service.CertificateService.CreateCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.CertificateService.CreateCertificateTypeAsync
  nameWithType: CertificateService.CreateCertificateTypeAsync
- uid: RoosterPlanner.Service.CertificateService.GetAllCertificateTypesAsync
  name: GetAllCertificateTypesAsync()
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_GetAllCertificateTypesAsync
  commentId: M:RoosterPlanner.Service.CertificateService.GetAllCertificateTypesAsync
  fullName: RoosterPlanner.Service.CertificateService.GetAllCertificateTypesAsync()
  nameWithType: CertificateService.GetAllCertificateTypesAsync()
- uid: RoosterPlanner.Service.CertificateService.GetAllCertificateTypesAsync*
  name: GetAllCertificateTypesAsync
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_GetAllCertificateTypesAsync_
  commentId: Overload:RoosterPlanner.Service.CertificateService.GetAllCertificateTypesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.CertificateService.GetAllCertificateTypesAsync
  nameWithType: CertificateService.GetAllCertificateTypesAsync
- uid: RoosterPlanner.Service.CertificateService.GetCertificateAsync(System.Guid)
  name: GetCertificateAsync(Guid)
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_GetCertificateAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.CertificateService.GetCertificateAsync(System.Guid)
  fullName: RoosterPlanner.Service.CertificateService.GetCertificateAsync(System.Guid)
  nameWithType: CertificateService.GetCertificateAsync(Guid)
- uid: RoosterPlanner.Service.CertificateService.GetCertificateAsync*
  name: GetCertificateAsync
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_GetCertificateAsync_
  commentId: Overload:RoosterPlanner.Service.CertificateService.GetCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.CertificateService.GetCertificateAsync
  nameWithType: CertificateService.GetCertificateAsync
- uid: RoosterPlanner.Service.CertificateService.GetCertificateTypeAsync(System.Guid)
  name: GetCertificateTypeAsync(Guid)
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_GetCertificateTypeAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.CertificateService.GetCertificateTypeAsync(System.Guid)
  fullName: RoosterPlanner.Service.CertificateService.GetCertificateTypeAsync(System.Guid)
  nameWithType: CertificateService.GetCertificateTypeAsync(Guid)
- uid: RoosterPlanner.Service.CertificateService.GetCertificateTypeAsync*
  name: GetCertificateTypeAsync
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_GetCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Service.CertificateService.GetCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.CertificateService.GetCertificateTypeAsync
  nameWithType: CertificateService.GetCertificateTypeAsync
- uid: RoosterPlanner.Service.CertificateService.RemoveCertificateAsync(RoosterPlanner.Models.Certificate)
  name: RemoveCertificateAsync(Certificate)
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_RemoveCertificateAsync_RoosterPlanner_Models_Certificate_
  commentId: M:RoosterPlanner.Service.CertificateService.RemoveCertificateAsync(RoosterPlanner.Models.Certificate)
  fullName: RoosterPlanner.Service.CertificateService.RemoveCertificateAsync(RoosterPlanner.Models.Certificate)
  nameWithType: CertificateService.RemoveCertificateAsync(Certificate)
- uid: RoosterPlanner.Service.CertificateService.RemoveCertificateAsync*
  name: RemoveCertificateAsync
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_RemoveCertificateAsync_
  commentId: Overload:RoosterPlanner.Service.CertificateService.RemoveCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.CertificateService.RemoveCertificateAsync
  nameWithType: CertificateService.RemoveCertificateAsync
- uid: RoosterPlanner.Service.CertificateService.RemoveCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  name: RemoveCertificateTypeAsync(CertificateType)
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_RemoveCertificateTypeAsync_RoosterPlanner_Models_CertificateType_
  commentId: M:RoosterPlanner.Service.CertificateService.RemoveCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  fullName: RoosterPlanner.Service.CertificateService.RemoveCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  nameWithType: CertificateService.RemoveCertificateTypeAsync(CertificateType)
- uid: RoosterPlanner.Service.CertificateService.RemoveCertificateTypeAsync*
  name: RemoveCertificateTypeAsync
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_RemoveCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Service.CertificateService.RemoveCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.CertificateService.RemoveCertificateTypeAsync
  nameWithType: CertificateService.RemoveCertificateTypeAsync
- uid: RoosterPlanner.Service.CertificateService.UpdateCertificateAsync(RoosterPlanner.Models.Certificate)
  name: UpdateCertificateAsync(Certificate)
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_UpdateCertificateAsync_RoosterPlanner_Models_Certificate_
  commentId: M:RoosterPlanner.Service.CertificateService.UpdateCertificateAsync(RoosterPlanner.Models.Certificate)
  fullName: RoosterPlanner.Service.CertificateService.UpdateCertificateAsync(RoosterPlanner.Models.Certificate)
  nameWithType: CertificateService.UpdateCertificateAsync(Certificate)
- uid: RoosterPlanner.Service.CertificateService.UpdateCertificateAsync*
  name: UpdateCertificateAsync
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_UpdateCertificateAsync_
  commentId: Overload:RoosterPlanner.Service.CertificateService.UpdateCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.CertificateService.UpdateCertificateAsync
  nameWithType: CertificateService.UpdateCertificateAsync
- uid: RoosterPlanner.Service.CertificateService.UpdateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  name: UpdateCertificateTypeAsync(CertificateType)
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_UpdateCertificateTypeAsync_RoosterPlanner_Models_CertificateType_
  commentId: M:RoosterPlanner.Service.CertificateService.UpdateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  fullName: RoosterPlanner.Service.CertificateService.UpdateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  nameWithType: CertificateService.UpdateCertificateTypeAsync(CertificateType)
- uid: RoosterPlanner.Service.CertificateService.UpdateCertificateTypeAsync*
  name: UpdateCertificateTypeAsync
  href: api/RoosterPlanner.Service.CertificateService.html#RoosterPlanner_Service_CertificateService_UpdateCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Service.CertificateService.UpdateCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.CertificateService.UpdateCertificateTypeAsync
  nameWithType: CertificateService.UpdateCertificateTypeAsync
- uid: RoosterPlanner.Service.Config
  name: RoosterPlanner.Service.Config
  href: api/RoosterPlanner.Service.Config.html
  commentId: N:RoosterPlanner.Service.Config
  fullName: RoosterPlanner.Service.Config
  nameWithType: RoosterPlanner.Service.Config
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig
  name: AzureAuthenticationConfig
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html
  commentId: T:RoosterPlanner.Service.Config.AzureAuthenticationConfig
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig
  nameWithType: AzureAuthenticationConfig
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.AzureTenantName
  name: AzureTenantName
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_AzureTenantName
  commentId: P:RoosterPlanner.Service.Config.AzureAuthenticationConfig.AzureTenantName
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.AzureTenantName
  nameWithType: AzureAuthenticationConfig.AzureTenantName
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.AzureTenantName*
  name: AzureTenantName
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_AzureTenantName_
  commentId: Overload:RoosterPlanner.Service.Config.AzureAuthenticationConfig.AzureTenantName
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.AzureTenantName
  nameWithType: AzureAuthenticationConfig.AzureTenantName
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.B2CExtentionApplicationId
  name: B2CExtentionApplicationId
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_B2CExtentionApplicationId
  commentId: P:RoosterPlanner.Service.Config.AzureAuthenticationConfig.B2CExtentionApplicationId
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.B2CExtentionApplicationId
  nameWithType: AzureAuthenticationConfig.B2CExtentionApplicationId
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.B2CExtentionApplicationId*
  name: B2CExtentionApplicationId
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_B2CExtentionApplicationId_
  commentId: Overload:RoosterPlanner.Service.Config.AzureAuthenticationConfig.B2CExtentionApplicationId
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.B2CExtentionApplicationId
  nameWithType: AzureAuthenticationConfig.B2CExtentionApplicationId
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientId
  name: ClientId
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_ClientId
  commentId: P:RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientId
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientId
  nameWithType: AzureAuthenticationConfig.ClientId
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientId*
  name: ClientId
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_ClientId_
  commentId: Overload:RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientId
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientId
  nameWithType: AzureAuthenticationConfig.ClientId
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientSecret
  name: ClientSecret
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_ClientSecret
  commentId: P:RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientSecret
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientSecret
  nameWithType: AzureAuthenticationConfig.ClientSecret
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientSecret*
  name: ClientSecret
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_ClientSecret_
  commentId: Overload:RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientSecret
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ClientSecret
  nameWithType: AzureAuthenticationConfig.ClientSecret
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ConfigSectionName
  name: ConfigSectionName
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_ConfigSectionName
  commentId: P:RoosterPlanner.Service.Config.AzureAuthenticationConfig.ConfigSectionName
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ConfigSectionName
  nameWithType: AzureAuthenticationConfig.ConfigSectionName
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ConfigSectionName*
  name: ConfigSectionName
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_ConfigSectionName_
  commentId: Overload:RoosterPlanner.Service.Config.AzureAuthenticationConfig.ConfigSectionName
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.ConfigSectionName
  nameWithType: AzureAuthenticationConfig.ConfigSectionName
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.GraphApiScopes
  name: GraphApiScopes
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_GraphApiScopes
  commentId: P:RoosterPlanner.Service.Config.AzureAuthenticationConfig.GraphApiScopes
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.GraphApiScopes
  nameWithType: AzureAuthenticationConfig.GraphApiScopes
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.GraphApiScopes*
  name: GraphApiScopes
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_GraphApiScopes_
  commentId: Overload:RoosterPlanner.Service.Config.AzureAuthenticationConfig.GraphApiScopes
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.GraphApiScopes
  nameWithType: AzureAuthenticationConfig.GraphApiScopes
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.TenantId
  name: TenantId
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_TenantId
  commentId: P:RoosterPlanner.Service.Config.AzureAuthenticationConfig.TenantId
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.TenantId
  nameWithType: AzureAuthenticationConfig.TenantId
- uid: RoosterPlanner.Service.Config.AzureAuthenticationConfig.TenantId*
  name: TenantId
  href: api/RoosterPlanner.Service.Config.AzureAuthenticationConfig.html#RoosterPlanner_Service_Config_AzureAuthenticationConfig_TenantId_
  commentId: Overload:RoosterPlanner.Service.Config.AzureAuthenticationConfig.TenantId
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.AzureAuthenticationConfig.TenantId
  nameWithType: AzureAuthenticationConfig.TenantId
- uid: RoosterPlanner.Service.Config.AzureBlobConfig
  name: AzureBlobConfig
  href: api/RoosterPlanner.Service.Config.AzureBlobConfig.html
  commentId: T:RoosterPlanner.Service.Config.AzureBlobConfig
  fullName: RoosterPlanner.Service.Config.AzureBlobConfig
  nameWithType: AzureBlobConfig
- uid: RoosterPlanner.Service.Config.AzureBlobConfig.AzureBlobConnectionstring
  name: AzureBlobConnectionstring
  href: api/RoosterPlanner.Service.Config.AzureBlobConfig.html#RoosterPlanner_Service_Config_AzureBlobConfig_AzureBlobConnectionstring
  commentId: P:RoosterPlanner.Service.Config.AzureBlobConfig.AzureBlobConnectionstring
  fullName: RoosterPlanner.Service.Config.AzureBlobConfig.AzureBlobConnectionstring
  nameWithType: AzureBlobConfig.AzureBlobConnectionstring
- uid: RoosterPlanner.Service.Config.AzureBlobConfig.AzureBlobConnectionstring*
  name: AzureBlobConnectionstring
  href: api/RoosterPlanner.Service.Config.AzureBlobConfig.html#RoosterPlanner_Service_Config_AzureBlobConfig_AzureBlobConnectionstring_
  commentId: Overload:RoosterPlanner.Service.Config.AzureBlobConfig.AzureBlobConnectionstring
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.AzureBlobConfig.AzureBlobConnectionstring
  nameWithType: AzureBlobConfig.AzureBlobConnectionstring
- uid: RoosterPlanner.Service.Config.AzureBlobConfig.ConfigSectionName
  name: ConfigSectionName
  href: api/RoosterPlanner.Service.Config.AzureBlobConfig.html#RoosterPlanner_Service_Config_AzureBlobConfig_ConfigSectionName
  commentId: P:RoosterPlanner.Service.Config.AzureBlobConfig.ConfigSectionName
  fullName: RoosterPlanner.Service.Config.AzureBlobConfig.ConfigSectionName
  nameWithType: AzureBlobConfig.ConfigSectionName
- uid: RoosterPlanner.Service.Config.AzureBlobConfig.ConfigSectionName*
  name: ConfigSectionName
  href: api/RoosterPlanner.Service.Config.AzureBlobConfig.html#RoosterPlanner_Service_Config_AzureBlobConfig_ConfigSectionName_
  commentId: Overload:RoosterPlanner.Service.Config.AzureBlobConfig.ConfigSectionName
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.AzureBlobConfig.ConfigSectionName
  nameWithType: AzureBlobConfig.ConfigSectionName
- uid: RoosterPlanner.Service.Config.EmailConfig
  name: EmailConfig
  href: api/RoosterPlanner.Service.Config.EmailConfig.html
  commentId: T:RoosterPlanner.Service.Config.EmailConfig
  fullName: RoosterPlanner.Service.Config.EmailConfig
  nameWithType: EmailConfig
- uid: RoosterPlanner.Service.Config.EmailConfig.ConfigSectionName
  name: ConfigSectionName
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_ConfigSectionName
  commentId: P:RoosterPlanner.Service.Config.EmailConfig.ConfigSectionName
  fullName: RoosterPlanner.Service.Config.EmailConfig.ConfigSectionName
  nameWithType: EmailConfig.ConfigSectionName
- uid: RoosterPlanner.Service.Config.EmailConfig.ConfigSectionName*
  name: ConfigSectionName
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_ConfigSectionName_
  commentId: Overload:RoosterPlanner.Service.Config.EmailConfig.ConfigSectionName
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.EmailConfig.ConfigSectionName
  nameWithType: EmailConfig.ConfigSectionName
- uid: RoosterPlanner.Service.Config.EmailConfig.Emailadres
  name: Emailadres
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_Emailadres
  commentId: P:RoosterPlanner.Service.Config.EmailConfig.Emailadres
  fullName: RoosterPlanner.Service.Config.EmailConfig.Emailadres
  nameWithType: EmailConfig.Emailadres
- uid: RoosterPlanner.Service.Config.EmailConfig.Emailadres*
  name: Emailadres
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_Emailadres_
  commentId: Overload:RoosterPlanner.Service.Config.EmailConfig.Emailadres
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.EmailConfig.Emailadres
  nameWithType: EmailConfig.Emailadres
- uid: RoosterPlanner.Service.Config.EmailConfig.EnableSsl
  name: EnableSsl
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_EnableSsl
  commentId: P:RoosterPlanner.Service.Config.EmailConfig.EnableSsl
  fullName: RoosterPlanner.Service.Config.EmailConfig.EnableSsl
  nameWithType: EmailConfig.EnableSsl
- uid: RoosterPlanner.Service.Config.EmailConfig.EnableSsl*
  name: EnableSsl
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_EnableSsl_
  commentId: Overload:RoosterPlanner.Service.Config.EmailConfig.EnableSsl
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.EmailConfig.EnableSsl
  nameWithType: EmailConfig.EnableSsl
- uid: RoosterPlanner.Service.Config.EmailConfig.Password
  name: Password
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_Password
  commentId: P:RoosterPlanner.Service.Config.EmailConfig.Password
  fullName: RoosterPlanner.Service.Config.EmailConfig.Password
  nameWithType: EmailConfig.Password
- uid: RoosterPlanner.Service.Config.EmailConfig.Password*
  name: Password
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_Password_
  commentId: Overload:RoosterPlanner.Service.Config.EmailConfig.Password
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.EmailConfig.Password
  nameWithType: EmailConfig.Password
- uid: RoosterPlanner.Service.Config.EmailConfig.Port
  name: Port
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_Port
  commentId: P:RoosterPlanner.Service.Config.EmailConfig.Port
  fullName: RoosterPlanner.Service.Config.EmailConfig.Port
  nameWithType: EmailConfig.Port
- uid: RoosterPlanner.Service.Config.EmailConfig.Port*
  name: Port
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_Port_
  commentId: Overload:RoosterPlanner.Service.Config.EmailConfig.Port
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.EmailConfig.Port
  nameWithType: EmailConfig.Port
- uid: RoosterPlanner.Service.Config.EmailConfig.SMTPadres
  name: SMTPadres
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_SMTPadres
  commentId: P:RoosterPlanner.Service.Config.EmailConfig.SMTPadres
  fullName: RoosterPlanner.Service.Config.EmailConfig.SMTPadres
  nameWithType: EmailConfig.SMTPadres
- uid: RoosterPlanner.Service.Config.EmailConfig.SMTPadres*
  name: SMTPadres
  href: api/RoosterPlanner.Service.Config.EmailConfig.html#RoosterPlanner_Service_Config_EmailConfig_SMTPadres_
  commentId: Overload:RoosterPlanner.Service.Config.EmailConfig.SMTPadres
  isSpec: "True"
  fullName: RoosterPlanner.Service.Config.EmailConfig.SMTPadres
  nameWithType: EmailConfig.SMTPadres
- uid: RoosterPlanner.Service.DataModels
  name: RoosterPlanner.Service.DataModels
  href: api/RoosterPlanner.Service.DataModels.html
  commentId: N:RoosterPlanner.Service.DataModels
  fullName: RoosterPlanner.Service.DataModels
  nameWithType: RoosterPlanner.Service.DataModels
- uid: RoosterPlanner.Service.DataModels.ITaskResult
  name: ITaskResult
  href: api/RoosterPlanner.Service.DataModels.ITaskResult.html
  commentId: T:RoosterPlanner.Service.DataModels.ITaskResult
  fullName: RoosterPlanner.Service.DataModels.ITaskResult
  nameWithType: ITaskResult
- uid: RoosterPlanner.Service.DataModels.ITaskResult.Error
  name: Error
  href: api/RoosterPlanner.Service.DataModels.ITaskResult.html#RoosterPlanner_Service_DataModels_ITaskResult_Error
  commentId: P:RoosterPlanner.Service.DataModels.ITaskResult.Error
  fullName: RoosterPlanner.Service.DataModels.ITaskResult.Error
  nameWithType: ITaskResult.Error
- uid: RoosterPlanner.Service.DataModels.ITaskResult.Error*
  name: Error
  href: api/RoosterPlanner.Service.DataModels.ITaskResult.html#RoosterPlanner_Service_DataModels_ITaskResult_Error_
  commentId: Overload:RoosterPlanner.Service.DataModels.ITaskResult.Error
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.ITaskResult.Error
  nameWithType: ITaskResult.Error
- uid: RoosterPlanner.Service.DataModels.ITaskResult.Message
  name: Message
  href: api/RoosterPlanner.Service.DataModels.ITaskResult.html#RoosterPlanner_Service_DataModels_ITaskResult_Message
  commentId: P:RoosterPlanner.Service.DataModels.ITaskResult.Message
  fullName: RoosterPlanner.Service.DataModels.ITaskResult.Message
  nameWithType: ITaskResult.Message
- uid: RoosterPlanner.Service.DataModels.ITaskResult.Message*
  name: Message
  href: api/RoosterPlanner.Service.DataModels.ITaskResult.html#RoosterPlanner_Service_DataModels_ITaskResult_Message_
  commentId: Overload:RoosterPlanner.Service.DataModels.ITaskResult.Message
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.ITaskResult.Message
  nameWithType: ITaskResult.Message
- uid: RoosterPlanner.Service.DataModels.ITaskResult.StatusCode
  name: StatusCode
  href: api/RoosterPlanner.Service.DataModels.ITaskResult.html#RoosterPlanner_Service_DataModels_ITaskResult_StatusCode
  commentId: P:RoosterPlanner.Service.DataModels.ITaskResult.StatusCode
  fullName: RoosterPlanner.Service.DataModels.ITaskResult.StatusCode
  nameWithType: ITaskResult.StatusCode
- uid: RoosterPlanner.Service.DataModels.ITaskResult.StatusCode*
  name: StatusCode
  href: api/RoosterPlanner.Service.DataModels.ITaskResult.html#RoosterPlanner_Service_DataModels_ITaskResult_StatusCode_
  commentId: Overload:RoosterPlanner.Service.DataModels.ITaskResult.StatusCode
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.ITaskResult.StatusCode
  nameWithType: ITaskResult.StatusCode
- uid: RoosterPlanner.Service.DataModels.ITaskResult.Succeeded
  name: Succeeded
  href: api/RoosterPlanner.Service.DataModels.ITaskResult.html#RoosterPlanner_Service_DataModels_ITaskResult_Succeeded
  commentId: P:RoosterPlanner.Service.DataModels.ITaskResult.Succeeded
  fullName: RoosterPlanner.Service.DataModels.ITaskResult.Succeeded
  nameWithType: ITaskResult.Succeeded
- uid: RoosterPlanner.Service.DataModels.ITaskResult.Succeeded*
  name: Succeeded
  href: api/RoosterPlanner.Service.DataModels.ITaskResult.html#RoosterPlanner_Service_DataModels_ITaskResult_Succeeded_
  commentId: Overload:RoosterPlanner.Service.DataModels.ITaskResult.Succeeded
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.ITaskResult.Succeeded
  nameWithType: ITaskResult.Succeeded
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1
  name: TaskListResult<T>
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html
  commentId: T:RoosterPlanner.Service.DataModels.TaskListResult`1
  name.vb: TaskListResult(Of T)
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T)
  nameWithType: TaskListResult<T>
  nameWithType.vb: TaskListResult(Of T)
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.#ctor
  name: TaskListResult()
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1__ctor
  commentId: M:RoosterPlanner.Service.DataModels.TaskListResult`1.#ctor
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.TaskListResult()
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).TaskListResult()
  nameWithType: TaskListResult<T>.TaskListResult()
  nameWithType.vb: TaskListResult(Of T).TaskListResult()
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.#ctor(System.Net.HttpStatusCode,System.String)
  name: TaskListResult(HttpStatusCode, String)
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1__ctor_System_Net_HttpStatusCode_System_String_
  commentId: M:RoosterPlanner.Service.DataModels.TaskListResult`1.#ctor(System.Net.HttpStatusCode,System.String)
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.TaskListResult(System.Net.HttpStatusCode, System.String)
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).TaskListResult(System.Net.HttpStatusCode, System.String)
  nameWithType: TaskListResult<T>.TaskListResult(HttpStatusCode, String)
  nameWithType.vb: TaskListResult(Of T).TaskListResult(HttpStatusCode, String)
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.#ctor*
  name: TaskListResult
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1__ctor_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskListResult`1.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.TaskListResult
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).TaskListResult
  nameWithType: TaskListResult<T>.TaskListResult
  nameWithType.vb: TaskListResult(Of T).TaskListResult
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.CreateDefault(System.String)
  name: CreateDefault(String)
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_CreateDefault_System_String_
  commentId: M:RoosterPlanner.Service.DataModels.TaskListResult`1.CreateDefault(System.String)
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.CreateDefault(System.String)
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).CreateDefault(System.String)
  nameWithType: TaskListResult<T>.CreateDefault(String)
  nameWithType.vb: TaskListResult(Of T).CreateDefault(String)
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.CreateDefault*
  name: CreateDefault
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_CreateDefault_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskListResult`1.CreateDefault
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.CreateDefault
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).CreateDefault
  nameWithType: TaskListResult<T>.CreateDefault
  nameWithType.vb: TaskListResult(Of T).CreateDefault
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.Data
  name: Data
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_Data
  commentId: P:RoosterPlanner.Service.DataModels.TaskListResult`1.Data
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.Data
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).Data
  nameWithType: TaskListResult<T>.Data
  nameWithType.vb: TaskListResult(Of T).Data
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.Data*
  name: Data
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_Data_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskListResult`1.Data
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.Data
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).Data
  nameWithType: TaskListResult<T>.Data
  nameWithType.vb: TaskListResult(Of T).Data
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.Error
  name: Error
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_Error
  commentId: P:RoosterPlanner.Service.DataModels.TaskListResult`1.Error
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.Error
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).Error
  nameWithType: TaskListResult<T>.Error
  nameWithType.vb: TaskListResult(Of T).Error
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.Error*
  name: Error
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_Error_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskListResult`1.Error
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.Error
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).Error
  nameWithType: TaskListResult<T>.Error
  nameWithType.vb: TaskListResult(Of T).Error
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.Message
  name: Message
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_Message
  commentId: P:RoosterPlanner.Service.DataModels.TaskListResult`1.Message
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.Message
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).Message
  nameWithType: TaskListResult<T>.Message
  nameWithType.vb: TaskListResult(Of T).Message
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.Message*
  name: Message
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_Message_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskListResult`1.Message
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.Message
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).Message
  nameWithType: TaskListResult<T>.Message
  nameWithType.vb: TaskListResult(Of T).Message
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.StatusCode
  name: StatusCode
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_StatusCode
  commentId: P:RoosterPlanner.Service.DataModels.TaskListResult`1.StatusCode
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.StatusCode
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).StatusCode
  nameWithType: TaskListResult<T>.StatusCode
  nameWithType.vb: TaskListResult(Of T).StatusCode
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.StatusCode*
  name: StatusCode
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_StatusCode_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskListResult`1.StatusCode
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.StatusCode
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).StatusCode
  nameWithType: TaskListResult<T>.StatusCode
  nameWithType.vb: TaskListResult(Of T).StatusCode
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.Succeeded
  name: Succeeded
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_Succeeded
  commentId: P:RoosterPlanner.Service.DataModels.TaskListResult`1.Succeeded
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.Succeeded
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).Succeeded
  nameWithType: TaskListResult<T>.Succeeded
  nameWithType.vb: TaskListResult(Of T).Succeeded
- uid: RoosterPlanner.Service.DataModels.TaskListResult`1.Succeeded*
  name: Succeeded
  href: api/RoosterPlanner.Service.DataModels.TaskListResult-1.html#RoosterPlanner_Service_DataModels_TaskListResult_1_Succeeded_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskListResult`1.Succeeded
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskListResult<T>.Succeeded
  fullName.vb: RoosterPlanner.Service.DataModels.TaskListResult(Of T).Succeeded
  nameWithType: TaskListResult<T>.Succeeded
  nameWithType.vb: TaskListResult(Of T).Succeeded
- uid: RoosterPlanner.Service.DataModels.TaskResult
  name: TaskResult
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html
  commentId: T:RoosterPlanner.Service.DataModels.TaskResult
  fullName: RoosterPlanner.Service.DataModels.TaskResult
  nameWithType: TaskResult
- uid: RoosterPlanner.Service.DataModels.TaskResult.#ctor
  name: TaskResult()
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult__ctor
  commentId: M:RoosterPlanner.Service.DataModels.TaskResult.#ctor
  fullName: RoosterPlanner.Service.DataModels.TaskResult.TaskResult()
  nameWithType: TaskResult.TaskResult()
- uid: RoosterPlanner.Service.DataModels.TaskResult.#ctor(System.Net.HttpStatusCode,System.String)
  name: TaskResult(HttpStatusCode, String)
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult__ctor_System_Net_HttpStatusCode_System_String_
  commentId: M:RoosterPlanner.Service.DataModels.TaskResult.#ctor(System.Net.HttpStatusCode,System.String)
  fullName: RoosterPlanner.Service.DataModels.TaskResult.TaskResult(System.Net.HttpStatusCode, System.String)
  nameWithType: TaskResult.TaskResult(HttpStatusCode, String)
- uid: RoosterPlanner.Service.DataModels.TaskResult.#ctor*
  name: TaskResult
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult__ctor_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult.TaskResult
  nameWithType: TaskResult.TaskResult
- uid: RoosterPlanner.Service.DataModels.TaskResult.Error
  name: Error
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult_Error
  commentId: P:RoosterPlanner.Service.DataModels.TaskResult.Error
  fullName: RoosterPlanner.Service.DataModels.TaskResult.Error
  nameWithType: TaskResult.Error
- uid: RoosterPlanner.Service.DataModels.TaskResult.Error*
  name: Error
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult_Error_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult.Error
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult.Error
  nameWithType: TaskResult.Error
- uid: RoosterPlanner.Service.DataModels.TaskResult.Message
  name: Message
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult_Message
  commentId: P:RoosterPlanner.Service.DataModels.TaskResult.Message
  fullName: RoosterPlanner.Service.DataModels.TaskResult.Message
  nameWithType: TaskResult.Message
- uid: RoosterPlanner.Service.DataModels.TaskResult.Message*
  name: Message
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult_Message_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult.Message
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult.Message
  nameWithType: TaskResult.Message
- uid: RoosterPlanner.Service.DataModels.TaskResult.StatusCode
  name: StatusCode
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult_StatusCode
  commentId: P:RoosterPlanner.Service.DataModels.TaskResult.StatusCode
  fullName: RoosterPlanner.Service.DataModels.TaskResult.StatusCode
  nameWithType: TaskResult.StatusCode
- uid: RoosterPlanner.Service.DataModels.TaskResult.StatusCode*
  name: StatusCode
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult_StatusCode_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult.StatusCode
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult.StatusCode
  nameWithType: TaskResult.StatusCode
- uid: RoosterPlanner.Service.DataModels.TaskResult.Succeeded
  name: Succeeded
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult_Succeeded
  commentId: P:RoosterPlanner.Service.DataModels.TaskResult.Succeeded
  fullName: RoosterPlanner.Service.DataModels.TaskResult.Succeeded
  nameWithType: TaskResult.Succeeded
- uid: RoosterPlanner.Service.DataModels.TaskResult.Succeeded*
  name: Succeeded
  href: api/RoosterPlanner.Service.DataModels.TaskResult.html#RoosterPlanner_Service_DataModels_TaskResult_Succeeded_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult.Succeeded
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult.Succeeded
  nameWithType: TaskResult.Succeeded
- uid: RoosterPlanner.Service.DataModels.TaskResult`1
  name: TaskResult<T>
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html
  commentId: T:RoosterPlanner.Service.DataModels.TaskResult`1
  name.vb: TaskResult(Of T)
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T)
  nameWithType: TaskResult<T>
  nameWithType.vb: TaskResult(Of T)
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.#ctor
  name: TaskResult()
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1__ctor
  commentId: M:RoosterPlanner.Service.DataModels.TaskResult`1.#ctor
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.TaskResult()
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).TaskResult()
  nameWithType: TaskResult<T>.TaskResult()
  nameWithType.vb: TaskResult(Of T).TaskResult()
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.#ctor(System.Net.HttpStatusCode,System.String)
  name: TaskResult(HttpStatusCode, String)
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1__ctor_System_Net_HttpStatusCode_System_String_
  commentId: M:RoosterPlanner.Service.DataModels.TaskResult`1.#ctor(System.Net.HttpStatusCode,System.String)
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.TaskResult(System.Net.HttpStatusCode, System.String)
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).TaskResult(System.Net.HttpStatusCode, System.String)
  nameWithType: TaskResult<T>.TaskResult(HttpStatusCode, String)
  nameWithType.vb: TaskResult(Of T).TaskResult(HttpStatusCode, String)
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.#ctor*
  name: TaskResult
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1__ctor_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult`1.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.TaskResult
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).TaskResult
  nameWithType: TaskResult<T>.TaskResult
  nameWithType.vb: TaskResult(Of T).TaskResult
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.CreateForSuccessResult(`0)
  name: CreateForSuccessResult(T)
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_CreateForSuccessResult__0_
  commentId: M:RoosterPlanner.Service.DataModels.TaskResult`1.CreateForSuccessResult(`0)
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.CreateForSuccessResult(T)
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).CreateForSuccessResult(T)
  nameWithType: TaskResult<T>.CreateForSuccessResult(T)
  nameWithType.vb: TaskResult(Of T).CreateForSuccessResult(T)
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.CreateForSuccessResult*
  name: CreateForSuccessResult
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_CreateForSuccessResult_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult`1.CreateForSuccessResult
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.CreateForSuccessResult
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).CreateForSuccessResult
  nameWithType: TaskResult<T>.CreateForSuccessResult
  nameWithType.vb: TaskResult(Of T).CreateForSuccessResult
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.Data
  name: Data
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_Data
  commentId: P:RoosterPlanner.Service.DataModels.TaskResult`1.Data
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.Data
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).Data
  nameWithType: TaskResult<T>.Data
  nameWithType.vb: TaskResult(Of T).Data
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.Data*
  name: Data
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_Data_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult`1.Data
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.Data
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).Data
  nameWithType: TaskResult<T>.Data
  nameWithType.vb: TaskResult(Of T).Data
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.Error
  name: Error
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_Error
  commentId: P:RoosterPlanner.Service.DataModels.TaskResult`1.Error
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.Error
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).Error
  nameWithType: TaskResult<T>.Error
  nameWithType.vb: TaskResult(Of T).Error
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.Error*
  name: Error
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_Error_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult`1.Error
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.Error
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).Error
  nameWithType: TaskResult<T>.Error
  nameWithType.vb: TaskResult(Of T).Error
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.Message
  name: Message
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_Message
  commentId: P:RoosterPlanner.Service.DataModels.TaskResult`1.Message
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.Message
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).Message
  nameWithType: TaskResult<T>.Message
  nameWithType.vb: TaskResult(Of T).Message
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.Message*
  name: Message
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_Message_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult`1.Message
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.Message
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).Message
  nameWithType: TaskResult<T>.Message
  nameWithType.vb: TaskResult(Of T).Message
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.StatusCode
  name: StatusCode
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_StatusCode
  commentId: P:RoosterPlanner.Service.DataModels.TaskResult`1.StatusCode
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.StatusCode
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).StatusCode
  nameWithType: TaskResult<T>.StatusCode
  nameWithType.vb: TaskResult(Of T).StatusCode
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.StatusCode*
  name: StatusCode
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_StatusCode_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult`1.StatusCode
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.StatusCode
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).StatusCode
  nameWithType: TaskResult<T>.StatusCode
  nameWithType.vb: TaskResult(Of T).StatusCode
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.Succeeded
  name: Succeeded
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_Succeeded
  commentId: P:RoosterPlanner.Service.DataModels.TaskResult`1.Succeeded
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.Succeeded
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).Succeeded
  nameWithType: TaskResult<T>.Succeeded
  nameWithType.vb: TaskResult(Of T).Succeeded
- uid: RoosterPlanner.Service.DataModels.TaskResult`1.Succeeded*
  name: Succeeded
  href: api/RoosterPlanner.Service.DataModels.TaskResult-1.html#RoosterPlanner_Service_DataModels_TaskResult_1_Succeeded_
  commentId: Overload:RoosterPlanner.Service.DataModels.TaskResult`1.Succeeded
  isSpec: "True"
  fullName: RoosterPlanner.Service.DataModels.TaskResult<T>.Succeeded
  fullName.vb: RoosterPlanner.Service.DataModels.TaskResult(Of T).Succeeded
  nameWithType: TaskResult<T>.Succeeded
  nameWithType.vb: TaskResult(Of T).Succeeded
- uid: RoosterPlanner.Service.DocumentService
  name: DocumentService
  href: api/RoosterPlanner.Service.DocumentService.html
  commentId: T:RoosterPlanner.Service.DocumentService
  fullName: RoosterPlanner.Service.DocumentService
  nameWithType: DocumentService
- uid: RoosterPlanner.Service.DocumentService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.DocumentService},RoosterPlanner.Service.IBlobService)
  name: DocumentService(IUnitOfWork, ILogger<DocumentService>, IBlobService)
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService__ctor_RoosterPlanner_Data_Common_IUnitOfWork_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Service_DocumentService__RoosterPlanner_Service_IBlobService_
  commentId: M:RoosterPlanner.Service.DocumentService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.DocumentService},RoosterPlanner.Service.IBlobService)
  name.vb: DocumentService(IUnitOfWork, ILogger(Of DocumentService), IBlobService)
  fullName: RoosterPlanner.Service.DocumentService.DocumentService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Service.DocumentService>, RoosterPlanner.Service.IBlobService)
  fullName.vb: RoosterPlanner.Service.DocumentService.DocumentService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Service.DocumentService), RoosterPlanner.Service.IBlobService)
  nameWithType: DocumentService.DocumentService(IUnitOfWork, ILogger<DocumentService>, IBlobService)
  nameWithType.vb: DocumentService.DocumentService(IUnitOfWork, ILogger(Of DocumentService), IBlobService)
- uid: RoosterPlanner.Service.DocumentService.#ctor*
  name: DocumentService
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService__ctor_
  commentId: Overload:RoosterPlanner.Service.DocumentService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.DocumentService.DocumentService
  nameWithType: DocumentService.DocumentService
- uid: RoosterPlanner.Service.DocumentService.CreateDocumentAsync(RoosterPlanner.Models.Document)
  name: CreateDocumentAsync(Document)
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService_CreateDocumentAsync_RoosterPlanner_Models_Document_
  commentId: M:RoosterPlanner.Service.DocumentService.CreateDocumentAsync(RoosterPlanner.Models.Document)
  fullName: RoosterPlanner.Service.DocumentService.CreateDocumentAsync(RoosterPlanner.Models.Document)
  nameWithType: DocumentService.CreateDocumentAsync(Document)
- uid: RoosterPlanner.Service.DocumentService.CreateDocumentAsync*
  name: CreateDocumentAsync
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService_CreateDocumentAsync_
  commentId: Overload:RoosterPlanner.Service.DocumentService.CreateDocumentAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.DocumentService.CreateDocumentAsync
  nameWithType: DocumentService.CreateDocumentAsync
- uid: RoosterPlanner.Service.DocumentService.DeleteDocumentAsync(RoosterPlanner.Models.Document)
  name: DeleteDocumentAsync(Document)
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService_DeleteDocumentAsync_RoosterPlanner_Models_Document_
  commentId: M:RoosterPlanner.Service.DocumentService.DeleteDocumentAsync(RoosterPlanner.Models.Document)
  fullName: RoosterPlanner.Service.DocumentService.DeleteDocumentAsync(RoosterPlanner.Models.Document)
  nameWithType: DocumentService.DeleteDocumentAsync(Document)
- uid: RoosterPlanner.Service.DocumentService.DeleteDocumentAsync*
  name: DeleteDocumentAsync
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService_DeleteDocumentAsync_
  commentId: Overload:RoosterPlanner.Service.DocumentService.DeleteDocumentAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.DocumentService.DeleteDocumentAsync
  nameWithType: DocumentService.DeleteDocumentAsync
- uid: RoosterPlanner.Service.DocumentService.GetDocumentAsync(System.Guid)
  name: GetDocumentAsync(Guid)
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService_GetDocumentAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.DocumentService.GetDocumentAsync(System.Guid)
  fullName: RoosterPlanner.Service.DocumentService.GetDocumentAsync(System.Guid)
  nameWithType: DocumentService.GetDocumentAsync(Guid)
- uid: RoosterPlanner.Service.DocumentService.GetDocumentAsync*
  name: GetDocumentAsync
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService_GetDocumentAsync_
  commentId: Overload:RoosterPlanner.Service.DocumentService.GetDocumentAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.DocumentService.GetDocumentAsync
  nameWithType: DocumentService.GetDocumentAsync
- uid: RoosterPlanner.Service.DocumentService.GetPPAsync
  name: GetPPAsync()
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService_GetPPAsync
  commentId: M:RoosterPlanner.Service.DocumentService.GetPPAsync
  fullName: RoosterPlanner.Service.DocumentService.GetPPAsync()
  nameWithType: DocumentService.GetPPAsync()
- uid: RoosterPlanner.Service.DocumentService.GetPPAsync*
  name: GetPPAsync
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService_GetPPAsync_
  commentId: Overload:RoosterPlanner.Service.DocumentService.GetPPAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.DocumentService.GetPPAsync
  nameWithType: DocumentService.GetPPAsync
- uid: RoosterPlanner.Service.DocumentService.UpdateDocumentAsync(RoosterPlanner.Models.Document)
  name: UpdateDocumentAsync(Document)
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService_UpdateDocumentAsync_RoosterPlanner_Models_Document_
  commentId: M:RoosterPlanner.Service.DocumentService.UpdateDocumentAsync(RoosterPlanner.Models.Document)
  fullName: RoosterPlanner.Service.DocumentService.UpdateDocumentAsync(RoosterPlanner.Models.Document)
  nameWithType: DocumentService.UpdateDocumentAsync(Document)
- uid: RoosterPlanner.Service.DocumentService.UpdateDocumentAsync*
  name: UpdateDocumentAsync
  href: api/RoosterPlanner.Service.DocumentService.html#RoosterPlanner_Service_DocumentService_UpdateDocumentAsync_
  commentId: Overload:RoosterPlanner.Service.DocumentService.UpdateDocumentAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.DocumentService.UpdateDocumentAsync
  nameWithType: DocumentService.UpdateDocumentAsync
- uid: RoosterPlanner.Service.Helpers
  name: RoosterPlanner.Service.Helpers
  href: api/RoosterPlanner.Service.Helpers.html
  commentId: N:RoosterPlanner.Service.Helpers
  fullName: RoosterPlanner.Service.Helpers
  nameWithType: RoosterPlanner.Service.Helpers
- uid: RoosterPlanner.Service.Helpers.IdentityHelper
  name: IdentityHelper
  href: api/RoosterPlanner.Service.Helpers.IdentityHelper.html
  commentId: T:RoosterPlanner.Service.Helpers.IdentityHelper
  fullName: RoosterPlanner.Service.Helpers.IdentityHelper
  nameWithType: IdentityHelper
- uid: RoosterPlanner.Service.Helpers.IdentityHelper.GetOid(System.Security.Claims.ClaimsIdentity)
  name: GetOid(ClaimsIdentity)
  href: api/RoosterPlanner.Service.Helpers.IdentityHelper.html#RoosterPlanner_Service_Helpers_IdentityHelper_GetOid_System_Security_Claims_ClaimsIdentity_
  commentId: M:RoosterPlanner.Service.Helpers.IdentityHelper.GetOid(System.Security.Claims.ClaimsIdentity)
  fullName: RoosterPlanner.Service.Helpers.IdentityHelper.GetOid(System.Security.Claims.ClaimsIdentity)
  nameWithType: IdentityHelper.GetOid(ClaimsIdentity)
- uid: RoosterPlanner.Service.Helpers.IdentityHelper.GetOid*
  name: GetOid
  href: api/RoosterPlanner.Service.Helpers.IdentityHelper.html#RoosterPlanner_Service_Helpers_IdentityHelper_GetOid_
  commentId: Overload:RoosterPlanner.Service.Helpers.IdentityHelper.GetOid
  isSpec: "True"
  fullName: RoosterPlanner.Service.Helpers.IdentityHelper.GetOid
  nameWithType: IdentityHelper.GetOid
- uid: RoosterPlanner.Service.Helpers.RecordNotFoundException
  name: RecordNotFoundException
  href: api/RoosterPlanner.Service.Helpers.RecordNotFoundException.html
  commentId: T:RoosterPlanner.Service.Helpers.RecordNotFoundException
  fullName: RoosterPlanner.Service.Helpers.RecordNotFoundException
  nameWithType: RecordNotFoundException
- uid: RoosterPlanner.Service.Helpers.RecordNotFoundException.#ctor
  name: RecordNotFoundException()
  href: api/RoosterPlanner.Service.Helpers.RecordNotFoundException.html#RoosterPlanner_Service_Helpers_RecordNotFoundException__ctor
  commentId: M:RoosterPlanner.Service.Helpers.RecordNotFoundException.#ctor
  fullName: RoosterPlanner.Service.Helpers.RecordNotFoundException.RecordNotFoundException()
  nameWithType: RecordNotFoundException.RecordNotFoundException()
- uid: RoosterPlanner.Service.Helpers.RecordNotFoundException.#ctor(System.String)
  name: RecordNotFoundException(String)
  href: api/RoosterPlanner.Service.Helpers.RecordNotFoundException.html#RoosterPlanner_Service_Helpers_RecordNotFoundException__ctor_System_String_
  commentId: M:RoosterPlanner.Service.Helpers.RecordNotFoundException.#ctor(System.String)
  fullName: RoosterPlanner.Service.Helpers.RecordNotFoundException.RecordNotFoundException(System.String)
  nameWithType: RecordNotFoundException.RecordNotFoundException(String)
- uid: RoosterPlanner.Service.Helpers.RecordNotFoundException.#ctor(System.String,System.String)
  name: RecordNotFoundException(String, String)
  href: api/RoosterPlanner.Service.Helpers.RecordNotFoundException.html#RoosterPlanner_Service_Helpers_RecordNotFoundException__ctor_System_String_System_String_
  commentId: M:RoosterPlanner.Service.Helpers.RecordNotFoundException.#ctor(System.String,System.String)
  fullName: RoosterPlanner.Service.Helpers.RecordNotFoundException.RecordNotFoundException(System.String, System.String)
  nameWithType: RecordNotFoundException.RecordNotFoundException(String, String)
- uid: RoosterPlanner.Service.Helpers.RecordNotFoundException.#ctor*
  name: RecordNotFoundException
  href: api/RoosterPlanner.Service.Helpers.RecordNotFoundException.html#RoosterPlanner_Service_Helpers_RecordNotFoundException__ctor_
  commentId: Overload:RoosterPlanner.Service.Helpers.RecordNotFoundException.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.Helpers.RecordNotFoundException.RecordNotFoundException
  nameWithType: RecordNotFoundException.RecordNotFoundException
- uid: RoosterPlanner.Service.Helpers.RecordNotFoundException.RecordId
  name: RecordId
  href: api/RoosterPlanner.Service.Helpers.RecordNotFoundException.html#RoosterPlanner_Service_Helpers_RecordNotFoundException_RecordId
  commentId: P:RoosterPlanner.Service.Helpers.RecordNotFoundException.RecordId
  fullName: RoosterPlanner.Service.Helpers.RecordNotFoundException.RecordId
  nameWithType: RecordNotFoundException.RecordId
- uid: RoosterPlanner.Service.Helpers.RecordNotFoundException.RecordId*
  name: RecordId
  href: api/RoosterPlanner.Service.Helpers.RecordNotFoundException.html#RoosterPlanner_Service_Helpers_RecordNotFoundException_RecordId_
  commentId: Overload:RoosterPlanner.Service.Helpers.RecordNotFoundException.RecordId
  isSpec: "True"
  fullName: RoosterPlanner.Service.Helpers.RecordNotFoundException.RecordId
  nameWithType: RecordNotFoundException.RecordId
- uid: RoosterPlanner.Service.IAvailabilityService
  name: IAvailabilityService
  href: api/RoosterPlanner.Service.IAvailabilityService.html
  commentId: T:RoosterPlanner.Service.IAvailabilityService
  fullName: RoosterPlanner.Service.IAvailabilityService
  nameWithType: IAvailabilityService
- uid: RoosterPlanner.Service.IAvailabilityService.AddAvailability(RoosterPlanner.Models.Availability)
  name: AddAvailability(Availability)
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_AddAvailability_RoosterPlanner_Models_Availability_
  commentId: M:RoosterPlanner.Service.IAvailabilityService.AddAvailability(RoosterPlanner.Models.Availability)
  fullName: RoosterPlanner.Service.IAvailabilityService.AddAvailability(RoosterPlanner.Models.Availability)
  nameWithType: IAvailabilityService.AddAvailability(Availability)
- uid: RoosterPlanner.Service.IAvailabilityService.AddAvailability*
  name: AddAvailability
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_AddAvailability_
  commentId: Overload:RoosterPlanner.Service.IAvailabilityService.AddAvailability
  isSpec: "True"
  fullName: RoosterPlanner.Service.IAvailabilityService.AddAvailability
  nameWithType: IAvailabilityService.AddAvailability
- uid: RoosterPlanner.Service.IAvailabilityService.FindAvailabilitiesAsync(System.Guid,System.Guid)
  name: FindAvailabilitiesAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_FindAvailabilitiesAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.IAvailabilityService.FindAvailabilitiesAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.IAvailabilityService.FindAvailabilitiesAsync(System.Guid, System.Guid)
  nameWithType: IAvailabilityService.FindAvailabilitiesAsync(Guid, Guid)
- uid: RoosterPlanner.Service.IAvailabilityService.FindAvailabilitiesAsync*
  name: FindAvailabilitiesAsync
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_FindAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Service.IAvailabilityService.FindAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IAvailabilityService.FindAvailabilitiesAsync
  nameWithType: IAvailabilityService.FindAvailabilitiesAsync
- uid: RoosterPlanner.Service.IAvailabilityService.GetActiveAvailabilities(System.Guid)
  name: GetActiveAvailabilities(Guid)
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_GetActiveAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Service.IAvailabilityService.GetActiveAvailabilities(System.Guid)
  fullName: RoosterPlanner.Service.IAvailabilityService.GetActiveAvailabilities(System.Guid)
  nameWithType: IAvailabilityService.GetActiveAvailabilities(Guid)
- uid: RoosterPlanner.Service.IAvailabilityService.GetActiveAvailabilities*
  name: GetActiveAvailabilities
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_GetActiveAvailabilities_
  commentId: Overload:RoosterPlanner.Service.IAvailabilityService.GetActiveAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Service.IAvailabilityService.GetActiveAvailabilities
  nameWithType: IAvailabilityService.GetActiveAvailabilities
- uid: RoosterPlanner.Service.IAvailabilityService.GetAvailability(System.Guid)
  name: GetAvailability(Guid)
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_GetAvailability_System_Guid_
  commentId: M:RoosterPlanner.Service.IAvailabilityService.GetAvailability(System.Guid)
  fullName: RoosterPlanner.Service.IAvailabilityService.GetAvailability(System.Guid)
  nameWithType: IAvailabilityService.GetAvailability(Guid)
- uid: RoosterPlanner.Service.IAvailabilityService.GetAvailability(System.Guid,System.Guid)
  name: GetAvailability(Guid, Guid)
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_GetAvailability_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.IAvailabilityService.GetAvailability(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.IAvailabilityService.GetAvailability(System.Guid, System.Guid)
  nameWithType: IAvailabilityService.GetAvailability(Guid, Guid)
- uid: RoosterPlanner.Service.IAvailabilityService.GetAvailability*
  name: GetAvailability
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_GetAvailability_
  commentId: Overload:RoosterPlanner.Service.IAvailabilityService.GetAvailability
  isSpec: "True"
  fullName: RoosterPlanner.Service.IAvailabilityService.GetAvailability
  nameWithType: IAvailabilityService.GetAvailability
- uid: RoosterPlanner.Service.IAvailabilityService.GetScheduledAvailabilities(System.Guid)
  name: GetScheduledAvailabilities(Guid)
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_GetScheduledAvailabilities_System_Guid_
  commentId: M:RoosterPlanner.Service.IAvailabilityService.GetScheduledAvailabilities(System.Guid)
  fullName: RoosterPlanner.Service.IAvailabilityService.GetScheduledAvailabilities(System.Guid)
  nameWithType: IAvailabilityService.GetScheduledAvailabilities(Guid)
- uid: RoosterPlanner.Service.IAvailabilityService.GetScheduledAvailabilities(System.Guid,System.DateTime)
  name: GetScheduledAvailabilities(Guid, DateTime)
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_GetScheduledAvailabilities_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Service.IAvailabilityService.GetScheduledAvailabilities(System.Guid,System.DateTime)
  fullName: RoosterPlanner.Service.IAvailabilityService.GetScheduledAvailabilities(System.Guid, System.DateTime)
  nameWithType: IAvailabilityService.GetScheduledAvailabilities(Guid, DateTime)
- uid: RoosterPlanner.Service.IAvailabilityService.GetScheduledAvailabilities*
  name: GetScheduledAvailabilities
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_GetScheduledAvailabilities_
  commentId: Overload:RoosterPlanner.Service.IAvailabilityService.GetScheduledAvailabilities
  isSpec: "True"
  fullName: RoosterPlanner.Service.IAvailabilityService.GetScheduledAvailabilities
  nameWithType: IAvailabilityService.GetScheduledAvailabilities
- uid: RoosterPlanner.Service.IAvailabilityService.UpdateAvailability(RoosterPlanner.Models.Availability)
  name: UpdateAvailability(Availability)
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_UpdateAvailability_RoosterPlanner_Models_Availability_
  commentId: M:RoosterPlanner.Service.IAvailabilityService.UpdateAvailability(RoosterPlanner.Models.Availability)
  fullName: RoosterPlanner.Service.IAvailabilityService.UpdateAvailability(RoosterPlanner.Models.Availability)
  nameWithType: IAvailabilityService.UpdateAvailability(Availability)
- uid: RoosterPlanner.Service.IAvailabilityService.UpdateAvailability*
  name: UpdateAvailability
  href: api/RoosterPlanner.Service.IAvailabilityService.html#RoosterPlanner_Service_IAvailabilityService_UpdateAvailability_
  commentId: Overload:RoosterPlanner.Service.IAvailabilityService.UpdateAvailability
  isSpec: "True"
  fullName: RoosterPlanner.Service.IAvailabilityService.UpdateAvailability
  nameWithType: IAvailabilityService.UpdateAvailability
- uid: RoosterPlanner.Service.IAzureB2CService
  name: IAzureB2CService
  href: api/RoosterPlanner.Service.IAzureB2CService.html
  commentId: T:RoosterPlanner.Service.IAzureB2CService
  fullName: RoosterPlanner.Service.IAzureB2CService
  nameWithType: IAzureB2CService
- uid: RoosterPlanner.Service.IAzureB2CService.GetAllUsersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  name: GetAllUsersAsync(PersonFilter)
  href: api/RoosterPlanner.Service.IAzureB2CService.html#RoosterPlanner_Service_IAzureB2CService_GetAllUsersAsync_RoosterPlanner_Models_FilterModels_PersonFilter_
  commentId: M:RoosterPlanner.Service.IAzureB2CService.GetAllUsersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  fullName: RoosterPlanner.Service.IAzureB2CService.GetAllUsersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  nameWithType: IAzureB2CService.GetAllUsersAsync(PersonFilter)
- uid: RoosterPlanner.Service.IAzureB2CService.GetAllUsersAsync*
  name: GetAllUsersAsync
  href: api/RoosterPlanner.Service.IAzureB2CService.html#RoosterPlanner_Service_IAzureB2CService_GetAllUsersAsync_
  commentId: Overload:RoosterPlanner.Service.IAzureB2CService.GetAllUsersAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IAzureB2CService.GetAllUsersAsync
  nameWithType: IAzureB2CService.GetAllUsersAsync
- uid: RoosterPlanner.Service.IAzureB2CService.GetUserAsync(System.Guid)
  name: GetUserAsync(Guid)
  href: api/RoosterPlanner.Service.IAzureB2CService.html#RoosterPlanner_Service_IAzureB2CService_GetUserAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IAzureB2CService.GetUserAsync(System.Guid)
  fullName: RoosterPlanner.Service.IAzureB2CService.GetUserAsync(System.Guid)
  nameWithType: IAzureB2CService.GetUserAsync(Guid)
- uid: RoosterPlanner.Service.IAzureB2CService.GetUserAsync*
  name: GetUserAsync
  href: api/RoosterPlanner.Service.IAzureB2CService.html#RoosterPlanner_Service_IAzureB2CService_GetUserAsync_
  commentId: Overload:RoosterPlanner.Service.IAzureB2CService.GetUserAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IAzureB2CService.GetUserAsync
  nameWithType: IAzureB2CService.GetUserAsync
- uid: RoosterPlanner.Service.IAzureB2CService.UpdateUserAsync(Microsoft.Graph.User)
  name: UpdateUserAsync(User)
  href: api/RoosterPlanner.Service.IAzureB2CService.html#RoosterPlanner_Service_IAzureB2CService_UpdateUserAsync_Microsoft_Graph_User_
  commentId: M:RoosterPlanner.Service.IAzureB2CService.UpdateUserAsync(Microsoft.Graph.User)
  fullName: RoosterPlanner.Service.IAzureB2CService.UpdateUserAsync(Microsoft.Graph.User)
  nameWithType: IAzureB2CService.UpdateUserAsync(User)
- uid: RoosterPlanner.Service.IAzureB2CService.UpdateUserAsync*
  name: UpdateUserAsync
  href: api/RoosterPlanner.Service.IAzureB2CService.html#RoosterPlanner_Service_IAzureB2CService_UpdateUserAsync_
  commentId: Overload:RoosterPlanner.Service.IAzureB2CService.UpdateUserAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IAzureB2CService.UpdateUserAsync
  nameWithType: IAzureB2CService.UpdateUserAsync
- uid: RoosterPlanner.Service.IBlobService
  name: IBlobService
  href: api/RoosterPlanner.Service.IBlobService.html
  commentId: T:RoosterPlanner.Service.IBlobService
  fullName: RoosterPlanner.Service.IBlobService
  nameWithType: IBlobService
- uid: RoosterPlanner.Service.IBlobService.DeleteFileBlobAsync(System.String,System.String)
  name: DeleteFileBlobAsync(String, String)
  href: api/RoosterPlanner.Service.IBlobService.html#RoosterPlanner_Service_IBlobService_DeleteFileBlobAsync_System_String_System_String_
  commentId: M:RoosterPlanner.Service.IBlobService.DeleteFileBlobAsync(System.String,System.String)
  fullName: RoosterPlanner.Service.IBlobService.DeleteFileBlobAsync(System.String, System.String)
  nameWithType: IBlobService.DeleteFileBlobAsync(String, String)
- uid: RoosterPlanner.Service.IBlobService.DeleteFileBlobAsync*
  name: DeleteFileBlobAsync
  href: api/RoosterPlanner.Service.IBlobService.html#RoosterPlanner_Service_IBlobService_DeleteFileBlobAsync_
  commentId: Overload:RoosterPlanner.Service.IBlobService.DeleteFileBlobAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IBlobService.DeleteFileBlobAsync
  nameWithType: IBlobService.DeleteFileBlobAsync
- uid: RoosterPlanner.Service.IBlobService.UploadFileBlobAsync(System.String,System.String,System.IO.Stream,System.String)
  name: UploadFileBlobAsync(String, String, Stream, String)
  href: api/RoosterPlanner.Service.IBlobService.html#RoosterPlanner_Service_IBlobService_UploadFileBlobAsync_System_String_System_String_System_IO_Stream_System_String_
  commentId: M:RoosterPlanner.Service.IBlobService.UploadFileBlobAsync(System.String,System.String,System.IO.Stream,System.String)
  fullName: RoosterPlanner.Service.IBlobService.UploadFileBlobAsync(System.String, System.String, System.IO.Stream, System.String)
  nameWithType: IBlobService.UploadFileBlobAsync(String, String, Stream, String)
- uid: RoosterPlanner.Service.IBlobService.UploadFileBlobAsync*
  name: UploadFileBlobAsync
  href: api/RoosterPlanner.Service.IBlobService.html#RoosterPlanner_Service_IBlobService_UploadFileBlobAsync_
  commentId: Overload:RoosterPlanner.Service.IBlobService.UploadFileBlobAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IBlobService.UploadFileBlobAsync
  nameWithType: IBlobService.UploadFileBlobAsync
- uid: RoosterPlanner.Service.ICertificateService
  name: ICertificateService
  href: api/RoosterPlanner.Service.ICertificateService.html
  commentId: T:RoosterPlanner.Service.ICertificateService
  fullName: RoosterPlanner.Service.ICertificateService
  nameWithType: ICertificateService
- uid: RoosterPlanner.Service.ICertificateService.CreateCertificateAsync(RoosterPlanner.Models.Certificate)
  name: CreateCertificateAsync(Certificate)
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_CreateCertificateAsync_RoosterPlanner_Models_Certificate_
  commentId: M:RoosterPlanner.Service.ICertificateService.CreateCertificateAsync(RoosterPlanner.Models.Certificate)
  fullName: RoosterPlanner.Service.ICertificateService.CreateCertificateAsync(RoosterPlanner.Models.Certificate)
  nameWithType: ICertificateService.CreateCertificateAsync(Certificate)
- uid: RoosterPlanner.Service.ICertificateService.CreateCertificateAsync*
  name: CreateCertificateAsync
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_CreateCertificateAsync_
  commentId: Overload:RoosterPlanner.Service.ICertificateService.CreateCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ICertificateService.CreateCertificateAsync
  nameWithType: ICertificateService.CreateCertificateAsync
- uid: RoosterPlanner.Service.ICertificateService.CreateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  name: CreateCertificateTypeAsync(CertificateType)
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_CreateCertificateTypeAsync_RoosterPlanner_Models_CertificateType_
  commentId: M:RoosterPlanner.Service.ICertificateService.CreateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  fullName: RoosterPlanner.Service.ICertificateService.CreateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  nameWithType: ICertificateService.CreateCertificateTypeAsync(CertificateType)
- uid: RoosterPlanner.Service.ICertificateService.CreateCertificateTypeAsync*
  name: CreateCertificateTypeAsync
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_CreateCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Service.ICertificateService.CreateCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ICertificateService.CreateCertificateTypeAsync
  nameWithType: ICertificateService.CreateCertificateTypeAsync
- uid: RoosterPlanner.Service.ICertificateService.GetAllCertificateTypesAsync
  name: GetAllCertificateTypesAsync()
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_GetAllCertificateTypesAsync
  commentId: M:RoosterPlanner.Service.ICertificateService.GetAllCertificateTypesAsync
  fullName: RoosterPlanner.Service.ICertificateService.GetAllCertificateTypesAsync()
  nameWithType: ICertificateService.GetAllCertificateTypesAsync()
- uid: RoosterPlanner.Service.ICertificateService.GetAllCertificateTypesAsync*
  name: GetAllCertificateTypesAsync
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_GetAllCertificateTypesAsync_
  commentId: Overload:RoosterPlanner.Service.ICertificateService.GetAllCertificateTypesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ICertificateService.GetAllCertificateTypesAsync
  nameWithType: ICertificateService.GetAllCertificateTypesAsync
- uid: RoosterPlanner.Service.ICertificateService.GetCertificateAsync(System.Guid)
  name: GetCertificateAsync(Guid)
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_GetCertificateAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ICertificateService.GetCertificateAsync(System.Guid)
  fullName: RoosterPlanner.Service.ICertificateService.GetCertificateAsync(System.Guid)
  nameWithType: ICertificateService.GetCertificateAsync(Guid)
- uid: RoosterPlanner.Service.ICertificateService.GetCertificateAsync*
  name: GetCertificateAsync
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_GetCertificateAsync_
  commentId: Overload:RoosterPlanner.Service.ICertificateService.GetCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ICertificateService.GetCertificateAsync
  nameWithType: ICertificateService.GetCertificateAsync
- uid: RoosterPlanner.Service.ICertificateService.GetCertificateTypeAsync(System.Guid)
  name: GetCertificateTypeAsync(Guid)
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_GetCertificateTypeAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ICertificateService.GetCertificateTypeAsync(System.Guid)
  fullName: RoosterPlanner.Service.ICertificateService.GetCertificateTypeAsync(System.Guid)
  nameWithType: ICertificateService.GetCertificateTypeAsync(Guid)
- uid: RoosterPlanner.Service.ICertificateService.GetCertificateTypeAsync*
  name: GetCertificateTypeAsync
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_GetCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Service.ICertificateService.GetCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ICertificateService.GetCertificateTypeAsync
  nameWithType: ICertificateService.GetCertificateTypeAsync
- uid: RoosterPlanner.Service.ICertificateService.RemoveCertificateAsync(RoosterPlanner.Models.Certificate)
  name: RemoveCertificateAsync(Certificate)
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_RemoveCertificateAsync_RoosterPlanner_Models_Certificate_
  commentId: M:RoosterPlanner.Service.ICertificateService.RemoveCertificateAsync(RoosterPlanner.Models.Certificate)
  fullName: RoosterPlanner.Service.ICertificateService.RemoveCertificateAsync(RoosterPlanner.Models.Certificate)
  nameWithType: ICertificateService.RemoveCertificateAsync(Certificate)
- uid: RoosterPlanner.Service.ICertificateService.RemoveCertificateAsync*
  name: RemoveCertificateAsync
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_RemoveCertificateAsync_
  commentId: Overload:RoosterPlanner.Service.ICertificateService.RemoveCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ICertificateService.RemoveCertificateAsync
  nameWithType: ICertificateService.RemoveCertificateAsync
- uid: RoosterPlanner.Service.ICertificateService.RemoveCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  name: RemoveCertificateTypeAsync(CertificateType)
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_RemoveCertificateTypeAsync_RoosterPlanner_Models_CertificateType_
  commentId: M:RoosterPlanner.Service.ICertificateService.RemoveCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  fullName: RoosterPlanner.Service.ICertificateService.RemoveCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  nameWithType: ICertificateService.RemoveCertificateTypeAsync(CertificateType)
- uid: RoosterPlanner.Service.ICertificateService.RemoveCertificateTypeAsync*
  name: RemoveCertificateTypeAsync
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_RemoveCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Service.ICertificateService.RemoveCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ICertificateService.RemoveCertificateTypeAsync
  nameWithType: ICertificateService.RemoveCertificateTypeAsync
- uid: RoosterPlanner.Service.ICertificateService.UpdateCertificateAsync(RoosterPlanner.Models.Certificate)
  name: UpdateCertificateAsync(Certificate)
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_UpdateCertificateAsync_RoosterPlanner_Models_Certificate_
  commentId: M:RoosterPlanner.Service.ICertificateService.UpdateCertificateAsync(RoosterPlanner.Models.Certificate)
  fullName: RoosterPlanner.Service.ICertificateService.UpdateCertificateAsync(RoosterPlanner.Models.Certificate)
  nameWithType: ICertificateService.UpdateCertificateAsync(Certificate)
- uid: RoosterPlanner.Service.ICertificateService.UpdateCertificateAsync*
  name: UpdateCertificateAsync
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_UpdateCertificateAsync_
  commentId: Overload:RoosterPlanner.Service.ICertificateService.UpdateCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ICertificateService.UpdateCertificateAsync
  nameWithType: ICertificateService.UpdateCertificateAsync
- uid: RoosterPlanner.Service.ICertificateService.UpdateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  name: UpdateCertificateTypeAsync(CertificateType)
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_UpdateCertificateTypeAsync_RoosterPlanner_Models_CertificateType_
  commentId: M:RoosterPlanner.Service.ICertificateService.UpdateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  fullName: RoosterPlanner.Service.ICertificateService.UpdateCertificateTypeAsync(RoosterPlanner.Models.CertificateType)
  nameWithType: ICertificateService.UpdateCertificateTypeAsync(CertificateType)
- uid: RoosterPlanner.Service.ICertificateService.UpdateCertificateTypeAsync*
  name: UpdateCertificateTypeAsync
  href: api/RoosterPlanner.Service.ICertificateService.html#RoosterPlanner_Service_ICertificateService_UpdateCertificateTypeAsync_
  commentId: Overload:RoosterPlanner.Service.ICertificateService.UpdateCertificateTypeAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ICertificateService.UpdateCertificateTypeAsync
  nameWithType: ICertificateService.UpdateCertificateTypeAsync
- uid: RoosterPlanner.Service.IDocumentService
  name: IDocumentService
  href: api/RoosterPlanner.Service.IDocumentService.html
  commentId: T:RoosterPlanner.Service.IDocumentService
  fullName: RoosterPlanner.Service.IDocumentService
  nameWithType: IDocumentService
- uid: RoosterPlanner.Service.IDocumentService.CreateDocumentAsync(RoosterPlanner.Models.Document)
  name: CreateDocumentAsync(Document)
  href: api/RoosterPlanner.Service.IDocumentService.html#RoosterPlanner_Service_IDocumentService_CreateDocumentAsync_RoosterPlanner_Models_Document_
  commentId: M:RoosterPlanner.Service.IDocumentService.CreateDocumentAsync(RoosterPlanner.Models.Document)
  fullName: RoosterPlanner.Service.IDocumentService.CreateDocumentAsync(RoosterPlanner.Models.Document)
  nameWithType: IDocumentService.CreateDocumentAsync(Document)
- uid: RoosterPlanner.Service.IDocumentService.CreateDocumentAsync*
  name: CreateDocumentAsync
  href: api/RoosterPlanner.Service.IDocumentService.html#RoosterPlanner_Service_IDocumentService_CreateDocumentAsync_
  commentId: Overload:RoosterPlanner.Service.IDocumentService.CreateDocumentAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IDocumentService.CreateDocumentAsync
  nameWithType: IDocumentService.CreateDocumentAsync
- uid: RoosterPlanner.Service.IDocumentService.DeleteDocumentAsync(RoosterPlanner.Models.Document)
  name: DeleteDocumentAsync(Document)
  href: api/RoosterPlanner.Service.IDocumentService.html#RoosterPlanner_Service_IDocumentService_DeleteDocumentAsync_RoosterPlanner_Models_Document_
  commentId: M:RoosterPlanner.Service.IDocumentService.DeleteDocumentAsync(RoosterPlanner.Models.Document)
  fullName: RoosterPlanner.Service.IDocumentService.DeleteDocumentAsync(RoosterPlanner.Models.Document)
  nameWithType: IDocumentService.DeleteDocumentAsync(Document)
- uid: RoosterPlanner.Service.IDocumentService.DeleteDocumentAsync*
  name: DeleteDocumentAsync
  href: api/RoosterPlanner.Service.IDocumentService.html#RoosterPlanner_Service_IDocumentService_DeleteDocumentAsync_
  commentId: Overload:RoosterPlanner.Service.IDocumentService.DeleteDocumentAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IDocumentService.DeleteDocumentAsync
  nameWithType: IDocumentService.DeleteDocumentAsync
- uid: RoosterPlanner.Service.IDocumentService.GetDocumentAsync(System.Guid)
  name: GetDocumentAsync(Guid)
  href: api/RoosterPlanner.Service.IDocumentService.html#RoosterPlanner_Service_IDocumentService_GetDocumentAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IDocumentService.GetDocumentAsync(System.Guid)
  fullName: RoosterPlanner.Service.IDocumentService.GetDocumentAsync(System.Guid)
  nameWithType: IDocumentService.GetDocumentAsync(Guid)
- uid: RoosterPlanner.Service.IDocumentService.GetDocumentAsync*
  name: GetDocumentAsync
  href: api/RoosterPlanner.Service.IDocumentService.html#RoosterPlanner_Service_IDocumentService_GetDocumentAsync_
  commentId: Overload:RoosterPlanner.Service.IDocumentService.GetDocumentAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IDocumentService.GetDocumentAsync
  nameWithType: IDocumentService.GetDocumentAsync
- uid: RoosterPlanner.Service.IDocumentService.GetPPAsync
  name: GetPPAsync()
  href: api/RoosterPlanner.Service.IDocumentService.html#RoosterPlanner_Service_IDocumentService_GetPPAsync
  commentId: M:RoosterPlanner.Service.IDocumentService.GetPPAsync
  fullName: RoosterPlanner.Service.IDocumentService.GetPPAsync()
  nameWithType: IDocumentService.GetPPAsync()
- uid: RoosterPlanner.Service.IDocumentService.GetPPAsync*
  name: GetPPAsync
  href: api/RoosterPlanner.Service.IDocumentService.html#RoosterPlanner_Service_IDocumentService_GetPPAsync_
  commentId: Overload:RoosterPlanner.Service.IDocumentService.GetPPAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IDocumentService.GetPPAsync
  nameWithType: IDocumentService.GetPPAsync
- uid: RoosterPlanner.Service.IDocumentService.UpdateDocumentAsync(RoosterPlanner.Models.Document)
  name: UpdateDocumentAsync(Document)
  href: api/RoosterPlanner.Service.IDocumentService.html#RoosterPlanner_Service_IDocumentService_UpdateDocumentAsync_RoosterPlanner_Models_Document_
  commentId: M:RoosterPlanner.Service.IDocumentService.UpdateDocumentAsync(RoosterPlanner.Models.Document)
  fullName: RoosterPlanner.Service.IDocumentService.UpdateDocumentAsync(RoosterPlanner.Models.Document)
  nameWithType: IDocumentService.UpdateDocumentAsync(Document)
- uid: RoosterPlanner.Service.IDocumentService.UpdateDocumentAsync*
  name: UpdateDocumentAsync
  href: api/RoosterPlanner.Service.IDocumentService.html#RoosterPlanner_Service_IDocumentService_UpdateDocumentAsync_
  commentId: Overload:RoosterPlanner.Service.IDocumentService.UpdateDocumentAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IDocumentService.UpdateDocumentAsync
  nameWithType: IDocumentService.UpdateDocumentAsync
- uid: RoosterPlanner.Service.IParticipationService
  name: IParticipationService
  href: api/RoosterPlanner.Service.IParticipationService.html
  commentId: T:RoosterPlanner.Service.IParticipationService
  fullName: RoosterPlanner.Service.IParticipationService
  nameWithType: IParticipationService
- uid: RoosterPlanner.Service.IParticipationService.AddParticipationAsync(RoosterPlanner.Models.Participation)
  name: AddParticipationAsync(Participation)
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_AddParticipationAsync_RoosterPlanner_Models_Participation_
  commentId: M:RoosterPlanner.Service.IParticipationService.AddParticipationAsync(RoosterPlanner.Models.Participation)
  fullName: RoosterPlanner.Service.IParticipationService.AddParticipationAsync(RoosterPlanner.Models.Participation)
  nameWithType: IParticipationService.AddParticipationAsync(Participation)
- uid: RoosterPlanner.Service.IParticipationService.AddParticipationAsync*
  name: AddParticipationAsync
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_AddParticipationAsync_
  commentId: Overload:RoosterPlanner.Service.IParticipationService.AddParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IParticipationService.AddParticipationAsync
  nameWithType: IParticipationService.AddParticipationAsync
- uid: RoosterPlanner.Service.IParticipationService.GetParticipationAsync(System.Guid)
  name: GetParticipationAsync(Guid)
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_GetParticipationAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IParticipationService.GetParticipationAsync(System.Guid)
  fullName: RoosterPlanner.Service.IParticipationService.GetParticipationAsync(System.Guid)
  nameWithType: IParticipationService.GetParticipationAsync(Guid)
- uid: RoosterPlanner.Service.IParticipationService.GetParticipationAsync(System.Guid,System.Guid)
  name: GetParticipationAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_GetParticipationAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.IParticipationService.GetParticipationAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.IParticipationService.GetParticipationAsync(System.Guid, System.Guid)
  nameWithType: IParticipationService.GetParticipationAsync(Guid, Guid)
- uid: RoosterPlanner.Service.IParticipationService.GetParticipationAsync*
  name: GetParticipationAsync
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_GetParticipationAsync_
  commentId: Overload:RoosterPlanner.Service.IParticipationService.GetParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IParticipationService.GetParticipationAsync
  nameWithType: IParticipationService.GetParticipationAsync
- uid: RoosterPlanner.Service.IParticipationService.GetParticipationsAsync(System.Guid)
  name: GetParticipationsAsync(Guid)
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_GetParticipationsAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IParticipationService.GetParticipationsAsync(System.Guid)
  fullName: RoosterPlanner.Service.IParticipationService.GetParticipationsAsync(System.Guid)
  nameWithType: IParticipationService.GetParticipationsAsync(Guid)
- uid: RoosterPlanner.Service.IParticipationService.GetParticipationsAsync*
  name: GetParticipationsAsync
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_GetParticipationsAsync_
  commentId: Overload:RoosterPlanner.Service.IParticipationService.GetParticipationsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IParticipationService.GetParticipationsAsync
  nameWithType: IParticipationService.GetParticipationsAsync
- uid: RoosterPlanner.Service.IParticipationService.GetParticipationsWithAvailabilitiesAsync(System.Guid)
  name: GetParticipationsWithAvailabilitiesAsync(Guid)
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_GetParticipationsWithAvailabilitiesAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IParticipationService.GetParticipationsWithAvailabilitiesAsync(System.Guid)
  fullName: RoosterPlanner.Service.IParticipationService.GetParticipationsWithAvailabilitiesAsync(System.Guid)
  nameWithType: IParticipationService.GetParticipationsWithAvailabilitiesAsync(Guid)
- uid: RoosterPlanner.Service.IParticipationService.GetParticipationsWithAvailabilitiesAsync*
  name: GetParticipationsWithAvailabilitiesAsync
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_GetParticipationsWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Service.IParticipationService.GetParticipationsWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IParticipationService.GetParticipationsWithAvailabilitiesAsync
  nameWithType: IParticipationService.GetParticipationsWithAvailabilitiesAsync
- uid: RoosterPlanner.Service.IParticipationService.GetUserParticipationsAsync(System.Guid)
  name: GetUserParticipationsAsync(Guid)
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_GetUserParticipationsAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IParticipationService.GetUserParticipationsAsync(System.Guid)
  fullName: RoosterPlanner.Service.IParticipationService.GetUserParticipationsAsync(System.Guid)
  nameWithType: IParticipationService.GetUserParticipationsAsync(Guid)
- uid: RoosterPlanner.Service.IParticipationService.GetUserParticipationsAsync*
  name: GetUserParticipationsAsync
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_GetUserParticipationsAsync_
  commentId: Overload:RoosterPlanner.Service.IParticipationService.GetUserParticipationsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IParticipationService.GetUserParticipationsAsync
  nameWithType: IParticipationService.GetUserParticipationsAsync
- uid: RoosterPlanner.Service.IParticipationService.SendEmail(System.String,System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  name: SendEmail(String, String, String, Boolean, String, Attachment)
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_SendEmail_System_String_System_String_System_String_System_Boolean_System_String_System_Net_Mail_Attachment_
  commentId: M:RoosterPlanner.Service.IParticipationService.SendEmail(System.String,System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  fullName: RoosterPlanner.Service.IParticipationService.SendEmail(System.String, System.String, System.String, System.Boolean, System.String, System.Net.Mail.Attachment)
  nameWithType: IParticipationService.SendEmail(String, String, String, Boolean, String, Attachment)
- uid: RoosterPlanner.Service.IParticipationService.SendEmail*
  name: SendEmail
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_SendEmail_
  commentId: Overload:RoosterPlanner.Service.IParticipationService.SendEmail
  isSpec: "True"
  fullName: RoosterPlanner.Service.IParticipationService.SendEmail
  nameWithType: IParticipationService.SendEmail
- uid: RoosterPlanner.Service.IParticipationService.UpdateParticipationAsync(RoosterPlanner.Models.Participation)
  name: UpdateParticipationAsync(Participation)
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_UpdateParticipationAsync_RoosterPlanner_Models_Participation_
  commentId: M:RoosterPlanner.Service.IParticipationService.UpdateParticipationAsync(RoosterPlanner.Models.Participation)
  fullName: RoosterPlanner.Service.IParticipationService.UpdateParticipationAsync(RoosterPlanner.Models.Participation)
  nameWithType: IParticipationService.UpdateParticipationAsync(Participation)
- uid: RoosterPlanner.Service.IParticipationService.UpdateParticipationAsync*
  name: UpdateParticipationAsync
  href: api/RoosterPlanner.Service.IParticipationService.html#RoosterPlanner_Service_IParticipationService_UpdateParticipationAsync_
  commentId: Overload:RoosterPlanner.Service.IParticipationService.UpdateParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IParticipationService.UpdateParticipationAsync
  nameWithType: IParticipationService.UpdateParticipationAsync
- uid: RoosterPlanner.Service.IPersonService
  name: IPersonService
  href: api/RoosterPlanner.Service.IPersonService.html
  commentId: T:RoosterPlanner.Service.IPersonService
  fullName: RoosterPlanner.Service.IPersonService
  nameWithType: IPersonService
- uid: RoosterPlanner.Service.IPersonService.GetB2CMembersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  name: GetB2CMembersAsync(PersonFilter)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetB2CMembersAsync_RoosterPlanner_Models_FilterModels_PersonFilter_
  commentId: M:RoosterPlanner.Service.IPersonService.GetB2CMembersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  fullName: RoosterPlanner.Service.IPersonService.GetB2CMembersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  nameWithType: IPersonService.GetB2CMembersAsync(PersonFilter)
- uid: RoosterPlanner.Service.IPersonService.GetB2CMembersAsync*
  name: GetB2CMembersAsync
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetB2CMembersAsync_
  commentId: Overload:RoosterPlanner.Service.IPersonService.GetB2CMembersAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IPersonService.GetB2CMembersAsync
  nameWithType: IPersonService.GetB2CMembersAsync
- uid: RoosterPlanner.Service.IPersonService.GetManagerAsync(System.Guid,System.Guid)
  name: GetManagerAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetManagerAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.IPersonService.GetManagerAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.IPersonService.GetManagerAsync(System.Guid, System.Guid)
  nameWithType: IPersonService.GetManagerAsync(Guid, Guid)
- uid: RoosterPlanner.Service.IPersonService.GetManagerAsync*
  name: GetManagerAsync
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetManagerAsync_
  commentId: Overload:RoosterPlanner.Service.IPersonService.GetManagerAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IPersonService.GetManagerAsync
  nameWithType: IPersonService.GetManagerAsync
- uid: RoosterPlanner.Service.IPersonService.GetManagersAsync(System.Guid)
  name: GetManagersAsync(Guid)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetManagersAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IPersonService.GetManagersAsync(System.Guid)
  fullName: RoosterPlanner.Service.IPersonService.GetManagersAsync(System.Guid)
  nameWithType: IPersonService.GetManagersAsync(Guid)
- uid: RoosterPlanner.Service.IPersonService.GetManagersAsync*
  name: GetManagersAsync
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetManagersAsync_
  commentId: Overload:RoosterPlanner.Service.IPersonService.GetManagersAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IPersonService.GetManagersAsync
  nameWithType: IPersonService.GetManagersAsync
- uid: RoosterPlanner.Service.IPersonService.GetPersonAsync(System.Guid)
  name: GetPersonAsync(Guid)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetPersonAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IPersonService.GetPersonAsync(System.Guid)
  fullName: RoosterPlanner.Service.IPersonService.GetPersonAsync(System.Guid)
  nameWithType: IPersonService.GetPersonAsync(Guid)
- uid: RoosterPlanner.Service.IPersonService.GetPersonAsync*
  name: GetPersonAsync
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetPersonAsync_
  commentId: Overload:RoosterPlanner.Service.IPersonService.GetPersonAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IPersonService.GetPersonAsync
  nameWithType: IPersonService.GetPersonAsync
- uid: RoosterPlanner.Service.IPersonService.GetProjectsManagedByAsync(System.Guid)
  name: GetProjectsManagedByAsync(Guid)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetProjectsManagedByAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IPersonService.GetProjectsManagedByAsync(System.Guid)
  fullName: RoosterPlanner.Service.IPersonService.GetProjectsManagedByAsync(System.Guid)
  nameWithType: IPersonService.GetProjectsManagedByAsync(Guid)
- uid: RoosterPlanner.Service.IPersonService.GetProjectsManagedByAsync*
  name: GetProjectsManagedByAsync
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetProjectsManagedByAsync_
  commentId: Overload:RoosterPlanner.Service.IPersonService.GetProjectsManagedByAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IPersonService.GetProjectsManagedByAsync
  nameWithType: IPersonService.GetProjectsManagedByAsync
- uid: RoosterPlanner.Service.IPersonService.GetUserAsync(System.Guid)
  name: GetUserAsync(Guid)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetUserAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IPersonService.GetUserAsync(System.Guid)
  fullName: RoosterPlanner.Service.IPersonService.GetUserAsync(System.Guid)
  nameWithType: IPersonService.GetUserAsync(Guid)
- uid: RoosterPlanner.Service.IPersonService.GetUserAsync*
  name: GetUserAsync
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_GetUserAsync_
  commentId: Overload:RoosterPlanner.Service.IPersonService.GetUserAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IPersonService.GetUserAsync
  nameWithType: IPersonService.GetUserAsync
- uid: RoosterPlanner.Service.IPersonService.MakeManagerAsync(RoosterPlanner.Models.Manager)
  name: MakeManagerAsync(Manager)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_MakeManagerAsync_RoosterPlanner_Models_Manager_
  commentId: M:RoosterPlanner.Service.IPersonService.MakeManagerAsync(RoosterPlanner.Models.Manager)
  fullName: RoosterPlanner.Service.IPersonService.MakeManagerAsync(RoosterPlanner.Models.Manager)
  nameWithType: IPersonService.MakeManagerAsync(Manager)
- uid: RoosterPlanner.Service.IPersonService.MakeManagerAsync*
  name: MakeManagerAsync
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_MakeManagerAsync_
  commentId: Overload:RoosterPlanner.Service.IPersonService.MakeManagerAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IPersonService.MakeManagerAsync
  nameWithType: IPersonService.MakeManagerAsync
- uid: RoosterPlanner.Service.IPersonService.RemoveManagerAsync(RoosterPlanner.Models.Manager)
  name: RemoveManagerAsync(Manager)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_RemoveManagerAsync_RoosterPlanner_Models_Manager_
  commentId: M:RoosterPlanner.Service.IPersonService.RemoveManagerAsync(RoosterPlanner.Models.Manager)
  fullName: RoosterPlanner.Service.IPersonService.RemoveManagerAsync(RoosterPlanner.Models.Manager)
  nameWithType: IPersonService.RemoveManagerAsync(Manager)
- uid: RoosterPlanner.Service.IPersonService.RemoveManagerAsync*
  name: RemoveManagerAsync
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_RemoveManagerAsync_
  commentId: Overload:RoosterPlanner.Service.IPersonService.RemoveManagerAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IPersonService.RemoveManagerAsync
  nameWithType: IPersonService.RemoveManagerAsync
- uid: RoosterPlanner.Service.IPersonService.UpdatePersonAsync(Microsoft.Graph.User)
  name: UpdatePersonAsync(User)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_UpdatePersonAsync_Microsoft_Graph_User_
  commentId: M:RoosterPlanner.Service.IPersonService.UpdatePersonAsync(Microsoft.Graph.User)
  fullName: RoosterPlanner.Service.IPersonService.UpdatePersonAsync(Microsoft.Graph.User)
  nameWithType: IPersonService.UpdatePersonAsync(User)
- uid: RoosterPlanner.Service.IPersonService.UpdatePersonAsync(RoosterPlanner.Models.Person)
  name: UpdatePersonAsync(Person)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_UpdatePersonAsync_RoosterPlanner_Models_Person_
  commentId: M:RoosterPlanner.Service.IPersonService.UpdatePersonAsync(RoosterPlanner.Models.Person)
  fullName: RoosterPlanner.Service.IPersonService.UpdatePersonAsync(RoosterPlanner.Models.Person)
  nameWithType: IPersonService.UpdatePersonAsync(Person)
- uid: RoosterPlanner.Service.IPersonService.UpdatePersonAsync*
  name: UpdatePersonAsync
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_UpdatePersonAsync_
  commentId: Overload:RoosterPlanner.Service.IPersonService.UpdatePersonAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IPersonService.UpdatePersonAsync
  nameWithType: IPersonService.UpdatePersonAsync
- uid: RoosterPlanner.Service.IPersonService.UserManagesOtherProjectsAsync(System.Guid)
  name: UserManagesOtherProjectsAsync(Guid)
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_UserManagesOtherProjectsAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IPersonService.UserManagesOtherProjectsAsync(System.Guid)
  fullName: RoosterPlanner.Service.IPersonService.UserManagesOtherProjectsAsync(System.Guid)
  nameWithType: IPersonService.UserManagesOtherProjectsAsync(Guid)
- uid: RoosterPlanner.Service.IPersonService.UserManagesOtherProjectsAsync*
  name: UserManagesOtherProjectsAsync
  href: api/RoosterPlanner.Service.IPersonService.html#RoosterPlanner_Service_IPersonService_UserManagesOtherProjectsAsync_
  commentId: Overload:RoosterPlanner.Service.IPersonService.UserManagesOtherProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IPersonService.UserManagesOtherProjectsAsync
  nameWithType: IPersonService.UserManagesOtherProjectsAsync
- uid: RoosterPlanner.Service.IProjectService
  name: IProjectService
  href: api/RoosterPlanner.Service.IProjectService.html
  commentId: T:RoosterPlanner.Service.IProjectService
  fullName: RoosterPlanner.Service.IProjectService
  nameWithType: IProjectService
- uid: RoosterPlanner.Service.IProjectService.CreateProjectAsync(RoosterPlanner.Models.Project)
  name: CreateProjectAsync(Project)
  href: api/RoosterPlanner.Service.IProjectService.html#RoosterPlanner_Service_IProjectService_CreateProjectAsync_RoosterPlanner_Models_Project_
  commentId: M:RoosterPlanner.Service.IProjectService.CreateProjectAsync(RoosterPlanner.Models.Project)
  fullName: RoosterPlanner.Service.IProjectService.CreateProjectAsync(RoosterPlanner.Models.Project)
  nameWithType: IProjectService.CreateProjectAsync(Project)
- uid: RoosterPlanner.Service.IProjectService.CreateProjectAsync*
  name: CreateProjectAsync
  href: api/RoosterPlanner.Service.IProjectService.html#RoosterPlanner_Service_IProjectService_CreateProjectAsync_
  commentId: Overload:RoosterPlanner.Service.IProjectService.CreateProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IProjectService.CreateProjectAsync
  nameWithType: IProjectService.CreateProjectAsync
- uid: RoosterPlanner.Service.IProjectService.GetProjectDetailsAsync(System.Guid)
  name: GetProjectDetailsAsync(Guid)
  href: api/RoosterPlanner.Service.IProjectService.html#RoosterPlanner_Service_IProjectService_GetProjectDetailsAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IProjectService.GetProjectDetailsAsync(System.Guid)
  fullName: RoosterPlanner.Service.IProjectService.GetProjectDetailsAsync(System.Guid)
  nameWithType: IProjectService.GetProjectDetailsAsync(Guid)
- uid: RoosterPlanner.Service.IProjectService.GetProjectDetailsAsync*
  name: GetProjectDetailsAsync
  href: api/RoosterPlanner.Service.IProjectService.html#RoosterPlanner_Service_IProjectService_GetProjectDetailsAsync_
  commentId: Overload:RoosterPlanner.Service.IProjectService.GetProjectDetailsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IProjectService.GetProjectDetailsAsync
  nameWithType: IProjectService.GetProjectDetailsAsync
- uid: RoosterPlanner.Service.IProjectService.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  name: SearchProjectsAsync(ProjectFilter)
  href: api/RoosterPlanner.Service.IProjectService.html#RoosterPlanner_Service_IProjectService_SearchProjectsAsync_RoosterPlanner_Models_FilterModels_ProjectFilter_
  commentId: M:RoosterPlanner.Service.IProjectService.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  fullName: RoosterPlanner.Service.IProjectService.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  nameWithType: IProjectService.SearchProjectsAsync(ProjectFilter)
- uid: RoosterPlanner.Service.IProjectService.SearchProjectsAsync*
  name: SearchProjectsAsync
  href: api/RoosterPlanner.Service.IProjectService.html#RoosterPlanner_Service_IProjectService_SearchProjectsAsync_
  commentId: Overload:RoosterPlanner.Service.IProjectService.SearchProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IProjectService.SearchProjectsAsync
  nameWithType: IProjectService.SearchProjectsAsync
- uid: RoosterPlanner.Service.IProjectService.UpdateProjectAsync(RoosterPlanner.Models.Project)
  name: UpdateProjectAsync(Project)
  href: api/RoosterPlanner.Service.IProjectService.html#RoosterPlanner_Service_IProjectService_UpdateProjectAsync_RoosterPlanner_Models_Project_
  commentId: M:RoosterPlanner.Service.IProjectService.UpdateProjectAsync(RoosterPlanner.Models.Project)
  fullName: RoosterPlanner.Service.IProjectService.UpdateProjectAsync(RoosterPlanner.Models.Project)
  nameWithType: IProjectService.UpdateProjectAsync(Project)
- uid: RoosterPlanner.Service.IProjectService.UpdateProjectAsync*
  name: UpdateProjectAsync
  href: api/RoosterPlanner.Service.IProjectService.html#RoosterPlanner_Service_IProjectService_UpdateProjectAsync_
  commentId: Overload:RoosterPlanner.Service.IProjectService.UpdateProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IProjectService.UpdateProjectAsync
  nameWithType: IProjectService.UpdateProjectAsync
- uid: RoosterPlanner.Service.IRequirementService
  name: IRequirementService
  href: api/RoosterPlanner.Service.IRequirementService.html
  commentId: T:RoosterPlanner.Service.IRequirementService
  fullName: RoosterPlanner.Service.IRequirementService
  nameWithType: IRequirementService
- uid: RoosterPlanner.Service.IRequirementService.CreateRequirement(RoosterPlanner.Models.Requirement)
  name: CreateRequirement(Requirement)
  href: api/RoosterPlanner.Service.IRequirementService.html#RoosterPlanner_Service_IRequirementService_CreateRequirement_RoosterPlanner_Models_Requirement_
  commentId: M:RoosterPlanner.Service.IRequirementService.CreateRequirement(RoosterPlanner.Models.Requirement)
  fullName: RoosterPlanner.Service.IRequirementService.CreateRequirement(RoosterPlanner.Models.Requirement)
  nameWithType: IRequirementService.CreateRequirement(Requirement)
- uid: RoosterPlanner.Service.IRequirementService.CreateRequirement*
  name: CreateRequirement
  href: api/RoosterPlanner.Service.IRequirementService.html#RoosterPlanner_Service_IRequirementService_CreateRequirement_
  commentId: Overload:RoosterPlanner.Service.IRequirementService.CreateRequirement
  isSpec: "True"
  fullName: RoosterPlanner.Service.IRequirementService.CreateRequirement
  nameWithType: IRequirementService.CreateRequirement
- uid: RoosterPlanner.Service.IRequirementService.GetRequirementAsync(System.Guid)
  name: GetRequirementAsync(Guid)
  href: api/RoosterPlanner.Service.IRequirementService.html#RoosterPlanner_Service_IRequirementService_GetRequirementAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IRequirementService.GetRequirementAsync(System.Guid)
  fullName: RoosterPlanner.Service.IRequirementService.GetRequirementAsync(System.Guid)
  nameWithType: IRequirementService.GetRequirementAsync(Guid)
- uid: RoosterPlanner.Service.IRequirementService.GetRequirementAsync(System.Guid,System.Guid)
  name: GetRequirementAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.IRequirementService.html#RoosterPlanner_Service_IRequirementService_GetRequirementAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.IRequirementService.GetRequirementAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.IRequirementService.GetRequirementAsync(System.Guid, System.Guid)
  nameWithType: IRequirementService.GetRequirementAsync(Guid, Guid)
- uid: RoosterPlanner.Service.IRequirementService.GetRequirementAsync*
  name: GetRequirementAsync
  href: api/RoosterPlanner.Service.IRequirementService.html#RoosterPlanner_Service_IRequirementService_GetRequirementAsync_
  commentId: Overload:RoosterPlanner.Service.IRequirementService.GetRequirementAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IRequirementService.GetRequirementAsync
  nameWithType: IRequirementService.GetRequirementAsync
- uid: RoosterPlanner.Service.IRequirementService.RemoveCertificateAsync(RoosterPlanner.Models.Requirement)
  name: RemoveCertificateAsync(Requirement)
  href: api/RoosterPlanner.Service.IRequirementService.html#RoosterPlanner_Service_IRequirementService_RemoveCertificateAsync_RoosterPlanner_Models_Requirement_
  commentId: M:RoosterPlanner.Service.IRequirementService.RemoveCertificateAsync(RoosterPlanner.Models.Requirement)
  fullName: RoosterPlanner.Service.IRequirementService.RemoveCertificateAsync(RoosterPlanner.Models.Requirement)
  nameWithType: IRequirementService.RemoveCertificateAsync(Requirement)
- uid: RoosterPlanner.Service.IRequirementService.RemoveCertificateAsync*
  name: RemoveCertificateAsync
  href: api/RoosterPlanner.Service.IRequirementService.html#RoosterPlanner_Service_IRequirementService_RemoveCertificateAsync_
  commentId: Overload:RoosterPlanner.Service.IRequirementService.RemoveCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IRequirementService.RemoveCertificateAsync
  nameWithType: IRequirementService.RemoveCertificateAsync
- uid: RoosterPlanner.Service.IRequirementService.UpdateRequirementAsync(RoosterPlanner.Models.Requirement)
  name: UpdateRequirementAsync(Requirement)
  href: api/RoosterPlanner.Service.IRequirementService.html#RoosterPlanner_Service_IRequirementService_UpdateRequirementAsync_RoosterPlanner_Models_Requirement_
  commentId: M:RoosterPlanner.Service.IRequirementService.UpdateRequirementAsync(RoosterPlanner.Models.Requirement)
  fullName: RoosterPlanner.Service.IRequirementService.UpdateRequirementAsync(RoosterPlanner.Models.Requirement)
  nameWithType: IRequirementService.UpdateRequirementAsync(Requirement)
- uid: RoosterPlanner.Service.IRequirementService.UpdateRequirementAsync*
  name: UpdateRequirementAsync
  href: api/RoosterPlanner.Service.IRequirementService.html#RoosterPlanner_Service_IRequirementService_UpdateRequirementAsync_
  commentId: Overload:RoosterPlanner.Service.IRequirementService.UpdateRequirementAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IRequirementService.UpdateRequirementAsync
  nameWithType: IRequirementService.UpdateRequirementAsync
- uid: RoosterPlanner.Service.IShiftService
  name: IShiftService
  href: api/RoosterPlanner.Service.IShiftService.html
  commentId: T:RoosterPlanner.Service.IShiftService
  fullName: RoosterPlanner.Service.IShiftService
  nameWithType: IShiftService
- uid: RoosterPlanner.Service.IShiftService.CreateShiftsAsync(System.Collections.Generic.List{RoosterPlanner.Models.Shift})
  name: CreateShiftsAsync(List<Shift>)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_CreateShiftsAsync_System_Collections_Generic_List_RoosterPlanner_Models_Shift__
  commentId: M:RoosterPlanner.Service.IShiftService.CreateShiftsAsync(System.Collections.Generic.List{RoosterPlanner.Models.Shift})
  name.vb: CreateShiftsAsync(List(Of Shift))
  fullName: RoosterPlanner.Service.IShiftService.CreateShiftsAsync(System.Collections.Generic.List<RoosterPlanner.Models.Shift>)
  fullName.vb: RoosterPlanner.Service.IShiftService.CreateShiftsAsync(System.Collections.Generic.List(Of RoosterPlanner.Models.Shift))
  nameWithType: IShiftService.CreateShiftsAsync(List<Shift>)
  nameWithType.vb: IShiftService.CreateShiftsAsync(List(Of Shift))
- uid: RoosterPlanner.Service.IShiftService.CreateShiftsAsync*
  name: CreateShiftsAsync
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_CreateShiftsAsync_
  commentId: Overload:RoosterPlanner.Service.IShiftService.CreateShiftsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IShiftService.CreateShiftsAsync
  nameWithType: IShiftService.CreateShiftsAsync
- uid: RoosterPlanner.Service.IShiftService.ExportDataAsync(System.Guid)
  name: ExportDataAsync(Guid)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_ExportDataAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IShiftService.ExportDataAsync(System.Guid)
  fullName: RoosterPlanner.Service.IShiftService.ExportDataAsync(System.Guid)
  nameWithType: IShiftService.ExportDataAsync(Guid)
- uid: RoosterPlanner.Service.IShiftService.ExportDataAsync*
  name: ExportDataAsync
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_ExportDataAsync_
  commentId: Overload:RoosterPlanner.Service.IShiftService.ExportDataAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IShiftService.ExportDataAsync
  nameWithType: IShiftService.ExportDataAsync
- uid: RoosterPlanner.Service.IShiftService.GetShiftAsync(System.Guid)
  name: GetShiftAsync(Guid)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IShiftService.GetShiftAsync(System.Guid)
  fullName: RoosterPlanner.Service.IShiftService.GetShiftAsync(System.Guid)
  nameWithType: IShiftService.GetShiftAsync(Guid)
- uid: RoosterPlanner.Service.IShiftService.GetShiftAsync*
  name: GetShiftAsync
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftAsync_
  commentId: Overload:RoosterPlanner.Service.IShiftService.GetShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IShiftService.GetShiftAsync
  nameWithType: IShiftService.GetShiftAsync
- uid: RoosterPlanner.Service.IShiftService.GetShiftsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  name: GetShiftsAsync(ShiftFilter)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftsAsync_RoosterPlanner_Models_FilterModels_ShiftFilter_
  commentId: M:RoosterPlanner.Service.IShiftService.GetShiftsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  fullName: RoosterPlanner.Service.IShiftService.GetShiftsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  nameWithType: IShiftService.GetShiftsAsync(ShiftFilter)
- uid: RoosterPlanner.Service.IShiftService.GetShiftsAsync(System.Guid,System.DateTime)
  name: GetShiftsAsync(Guid, DateTime)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftsAsync_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Service.IShiftService.GetShiftsAsync(System.Guid,System.DateTime)
  fullName: RoosterPlanner.Service.IShiftService.GetShiftsAsync(System.Guid, System.DateTime)
  nameWithType: IShiftService.GetShiftsAsync(Guid, DateTime)
- uid: RoosterPlanner.Service.IShiftService.GetShiftsAsync(System.Guid,System.Guid,System.DateTime)
  name: GetShiftsAsync(Guid, Guid, DateTime)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftsAsync_System_Guid_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Service.IShiftService.GetShiftsAsync(System.Guid,System.Guid,System.DateTime)
  fullName: RoosterPlanner.Service.IShiftService.GetShiftsAsync(System.Guid, System.Guid, System.DateTime)
  nameWithType: IShiftService.GetShiftsAsync(Guid, Guid, DateTime)
- uid: RoosterPlanner.Service.IShiftService.GetShiftsAsync*
  name: GetShiftsAsync
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftsAsync_
  commentId: Overload:RoosterPlanner.Service.IShiftService.GetShiftsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IShiftService.GetShiftsAsync
  nameWithType: IShiftService.GetShiftsAsync
- uid: RoosterPlanner.Service.IShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid)
  name: GetShiftsWithAvailabilitiesAsync(Guid)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftsWithAvailabilitiesAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid)
  fullName: RoosterPlanner.Service.IShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid)
  nameWithType: IShiftService.GetShiftsWithAvailabilitiesAsync(Guid)
- uid: RoosterPlanner.Service.IShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid,System.Guid)
  name: GetShiftsWithAvailabilitiesAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftsWithAvailabilitiesAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.IShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.IShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid, System.Guid)
  nameWithType: IShiftService.GetShiftsWithAvailabilitiesAsync(Guid, Guid)
- uid: RoosterPlanner.Service.IShiftService.GetShiftsWithAvailabilitiesAsync*
  name: GetShiftsWithAvailabilitiesAsync
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftsWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Service.IShiftService.GetShiftsWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IShiftService.GetShiftsWithAvailabilitiesAsync
  nameWithType: IShiftService.GetShiftsWithAvailabilitiesAsync
- uid: RoosterPlanner.Service.IShiftService.GetShiftWithAvailabilitiesAsync(System.Guid)
  name: GetShiftWithAvailabilitiesAsync(Guid)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftWithAvailabilitiesAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IShiftService.GetShiftWithAvailabilitiesAsync(System.Guid)
  fullName: RoosterPlanner.Service.IShiftService.GetShiftWithAvailabilitiesAsync(System.Guid)
  nameWithType: IShiftService.GetShiftWithAvailabilitiesAsync(Guid)
- uid: RoosterPlanner.Service.IShiftService.GetShiftWithAvailabilitiesAsync*
  name: GetShiftWithAvailabilitiesAsync
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetShiftWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Service.IShiftService.GetShiftWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IShiftService.GetShiftWithAvailabilitiesAsync
  nameWithType: IShiftService.GetShiftWithAvailabilitiesAsync
- uid: RoosterPlanner.Service.IShiftService.GetUniqueDataAsync(System.Guid)
  name: GetUniqueDataAsync(Guid)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetUniqueDataAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.IShiftService.GetUniqueDataAsync(System.Guid)
  fullName: RoosterPlanner.Service.IShiftService.GetUniqueDataAsync(System.Guid)
  nameWithType: IShiftService.GetUniqueDataAsync(Guid)
- uid: RoosterPlanner.Service.IShiftService.GetUniqueDataAsync*
  name: GetUniqueDataAsync
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_GetUniqueDataAsync_
  commentId: Overload:RoosterPlanner.Service.IShiftService.GetUniqueDataAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IShiftService.GetUniqueDataAsync
  nameWithType: IShiftService.GetUniqueDataAsync
- uid: RoosterPlanner.Service.IShiftService.RemoveShiftAsync(RoosterPlanner.Models.Shift)
  name: RemoveShiftAsync(Shift)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_RemoveShiftAsync_RoosterPlanner_Models_Shift_
  commentId: M:RoosterPlanner.Service.IShiftService.RemoveShiftAsync(RoosterPlanner.Models.Shift)
  fullName: RoosterPlanner.Service.IShiftService.RemoveShiftAsync(RoosterPlanner.Models.Shift)
  nameWithType: IShiftService.RemoveShiftAsync(Shift)
- uid: RoosterPlanner.Service.IShiftService.RemoveShiftAsync*
  name: RemoveShiftAsync
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_RemoveShiftAsync_
  commentId: Overload:RoosterPlanner.Service.IShiftService.RemoveShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IShiftService.RemoveShiftAsync
  nameWithType: IShiftService.RemoveShiftAsync
- uid: RoosterPlanner.Service.IShiftService.UpdateShiftAsync(RoosterPlanner.Models.Shift)
  name: UpdateShiftAsync(Shift)
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_UpdateShiftAsync_RoosterPlanner_Models_Shift_
  commentId: M:RoosterPlanner.Service.IShiftService.UpdateShiftAsync(RoosterPlanner.Models.Shift)
  fullName: RoosterPlanner.Service.IShiftService.UpdateShiftAsync(RoosterPlanner.Models.Shift)
  nameWithType: IShiftService.UpdateShiftAsync(Shift)
- uid: RoosterPlanner.Service.IShiftService.UpdateShiftAsync*
  name: UpdateShiftAsync
  href: api/RoosterPlanner.Service.IShiftService.html#RoosterPlanner_Service_IShiftService_UpdateShiftAsync_
  commentId: Overload:RoosterPlanner.Service.IShiftService.UpdateShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.IShiftService.UpdateShiftAsync
  nameWithType: IShiftService.UpdateShiftAsync
- uid: RoosterPlanner.Service.ITaskService
  name: ITaskService
  href: api/RoosterPlanner.Service.ITaskService.html
  commentId: T:RoosterPlanner.Service.ITaskService
  fullName: RoosterPlanner.Service.ITaskService
  nameWithType: ITaskService
- uid: RoosterPlanner.Service.ITaskService.AddTaskToProjectAsync(RoosterPlanner.Models.ProjectTask)
  name: AddTaskToProjectAsync(ProjectTask)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_AddTaskToProjectAsync_RoosterPlanner_Models_ProjectTask_
  commentId: M:RoosterPlanner.Service.ITaskService.AddTaskToProjectAsync(RoosterPlanner.Models.ProjectTask)
  fullName: RoosterPlanner.Service.ITaskService.AddTaskToProjectAsync(RoosterPlanner.Models.ProjectTask)
  nameWithType: ITaskService.AddTaskToProjectAsync(ProjectTask)
- uid: RoosterPlanner.Service.ITaskService.AddTaskToProjectAsync*
  name: AddTaskToProjectAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_AddTaskToProjectAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.AddTaskToProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.AddTaskToProjectAsync
  nameWithType: ITaskService.AddTaskToProjectAsync
- uid: RoosterPlanner.Service.ITaskService.CreateCategoryAsync(RoosterPlanner.Models.Category)
  name: CreateCategoryAsync(Category)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_CreateCategoryAsync_RoosterPlanner_Models_Category_
  commentId: M:RoosterPlanner.Service.ITaskService.CreateCategoryAsync(RoosterPlanner.Models.Category)
  fullName: RoosterPlanner.Service.ITaskService.CreateCategoryAsync(RoosterPlanner.Models.Category)
  nameWithType: ITaskService.CreateCategoryAsync(Category)
- uid: RoosterPlanner.Service.ITaskService.CreateCategoryAsync*
  name: CreateCategoryAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_CreateCategoryAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.CreateCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.CreateCategoryAsync
  nameWithType: ITaskService.CreateCategoryAsync
- uid: RoosterPlanner.Service.ITaskService.CreateTaskAsync(RoosterPlanner.Models.Task)
  name: CreateTaskAsync(Task)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_CreateTaskAsync_RoosterPlanner_Models_Task_
  commentId: M:RoosterPlanner.Service.ITaskService.CreateTaskAsync(RoosterPlanner.Models.Task)
  fullName: RoosterPlanner.Service.ITaskService.CreateTaskAsync(RoosterPlanner.Models.Task)
  nameWithType: ITaskService.CreateTaskAsync(Task)
- uid: RoosterPlanner.Service.ITaskService.CreateTaskAsync*
  name: CreateTaskAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_CreateTaskAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.CreateTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.CreateTaskAsync
  nameWithType: ITaskService.CreateTaskAsync
- uid: RoosterPlanner.Service.ITaskService.GetAllCategoriesAsync
  name: GetAllCategoriesAsync()
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetAllCategoriesAsync
  commentId: M:RoosterPlanner.Service.ITaskService.GetAllCategoriesAsync
  fullName: RoosterPlanner.Service.ITaskService.GetAllCategoriesAsync()
  nameWithType: ITaskService.GetAllCategoriesAsync()
- uid: RoosterPlanner.Service.ITaskService.GetAllCategoriesAsync*
  name: GetAllCategoriesAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetAllCategoriesAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.GetAllCategoriesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.GetAllCategoriesAsync
  nameWithType: ITaskService.GetAllCategoriesAsync
- uid: RoosterPlanner.Service.ITaskService.GetAllProjectTasksAsync(System.Guid)
  name: GetAllProjectTasksAsync(Guid)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetAllProjectTasksAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ITaskService.GetAllProjectTasksAsync(System.Guid)
  fullName: RoosterPlanner.Service.ITaskService.GetAllProjectTasksAsync(System.Guid)
  nameWithType: ITaskService.GetAllProjectTasksAsync(Guid)
- uid: RoosterPlanner.Service.ITaskService.GetAllProjectTasksAsync*
  name: GetAllProjectTasksAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetAllProjectTasksAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.GetAllProjectTasksAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.GetAllProjectTasksAsync
  nameWithType: ITaskService.GetAllProjectTasksAsync
- uid: RoosterPlanner.Service.ITaskService.GetCategoryAsync(System.Guid)
  name: GetCategoryAsync(Guid)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetCategoryAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ITaskService.GetCategoryAsync(System.Guid)
  fullName: RoosterPlanner.Service.ITaskService.GetCategoryAsync(System.Guid)
  nameWithType: ITaskService.GetCategoryAsync(Guid)
- uid: RoosterPlanner.Service.ITaskService.GetCategoryAsync*
  name: GetCategoryAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetCategoryAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.GetCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.GetCategoryAsync
  nameWithType: ITaskService.GetCategoryAsync
- uid: RoosterPlanner.Service.ITaskService.GetProjectTaskAsync(System.Guid)
  name: GetProjectTaskAsync(Guid)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetProjectTaskAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ITaskService.GetProjectTaskAsync(System.Guid)
  fullName: RoosterPlanner.Service.ITaskService.GetProjectTaskAsync(System.Guid)
  nameWithType: ITaskService.GetProjectTaskAsync(Guid)
- uid: RoosterPlanner.Service.ITaskService.GetProjectTaskAsync(System.Guid,System.Guid)
  name: GetProjectTaskAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetProjectTaskAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.ITaskService.GetProjectTaskAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.ITaskService.GetProjectTaskAsync(System.Guid, System.Guid)
  nameWithType: ITaskService.GetProjectTaskAsync(Guid, Guid)
- uid: RoosterPlanner.Service.ITaskService.GetProjectTaskAsync*
  name: GetProjectTaskAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetProjectTaskAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.GetProjectTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.GetProjectTaskAsync
  nameWithType: ITaskService.GetProjectTaskAsync
- uid: RoosterPlanner.Service.ITaskService.GetTaskAsync(System.Guid)
  name: GetTaskAsync(Guid)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetTaskAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ITaskService.GetTaskAsync(System.Guid)
  fullName: RoosterPlanner.Service.ITaskService.GetTaskAsync(System.Guid)
  nameWithType: ITaskService.GetTaskAsync(Guid)
- uid: RoosterPlanner.Service.ITaskService.GetTaskAsync*
  name: GetTaskAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_GetTaskAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.GetTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.GetTaskAsync
  nameWithType: ITaskService.GetTaskAsync
- uid: RoosterPlanner.Service.ITaskService.RemoveCategoryAsync(RoosterPlanner.Models.Category)
  name: RemoveCategoryAsync(Category)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_RemoveCategoryAsync_RoosterPlanner_Models_Category_
  commentId: M:RoosterPlanner.Service.ITaskService.RemoveCategoryAsync(RoosterPlanner.Models.Category)
  fullName: RoosterPlanner.Service.ITaskService.RemoveCategoryAsync(RoosterPlanner.Models.Category)
  nameWithType: ITaskService.RemoveCategoryAsync(Category)
- uid: RoosterPlanner.Service.ITaskService.RemoveCategoryAsync*
  name: RemoveCategoryAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_RemoveCategoryAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.RemoveCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.RemoveCategoryAsync
  nameWithType: ITaskService.RemoveCategoryAsync
- uid: RoosterPlanner.Service.ITaskService.RemoveProjectTaskAsync(RoosterPlanner.Models.ProjectTask)
  name: RemoveProjectTaskAsync(ProjectTask)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_RemoveProjectTaskAsync_RoosterPlanner_Models_ProjectTask_
  commentId: M:RoosterPlanner.Service.ITaskService.RemoveProjectTaskAsync(RoosterPlanner.Models.ProjectTask)
  fullName: RoosterPlanner.Service.ITaskService.RemoveProjectTaskAsync(RoosterPlanner.Models.ProjectTask)
  nameWithType: ITaskService.RemoveProjectTaskAsync(ProjectTask)
- uid: RoosterPlanner.Service.ITaskService.RemoveProjectTaskAsync*
  name: RemoveProjectTaskAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_RemoveProjectTaskAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.RemoveProjectTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.RemoveProjectTaskAsync
  nameWithType: ITaskService.RemoveProjectTaskAsync
- uid: RoosterPlanner.Service.ITaskService.RemoveTaskAsync(RoosterPlanner.Models.Task)
  name: RemoveTaskAsync(Task)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_RemoveTaskAsync_RoosterPlanner_Models_Task_
  commentId: M:RoosterPlanner.Service.ITaskService.RemoveTaskAsync(RoosterPlanner.Models.Task)
  fullName: RoosterPlanner.Service.ITaskService.RemoveTaskAsync(RoosterPlanner.Models.Task)
  nameWithType: ITaskService.RemoveTaskAsync(Task)
- uid: RoosterPlanner.Service.ITaskService.RemoveTaskAsync*
  name: RemoveTaskAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_RemoveTaskAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.RemoveTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.RemoveTaskAsync
  nameWithType: ITaskService.RemoveTaskAsync
- uid: RoosterPlanner.Service.ITaskService.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  name: SearchTasksAsync(TaskFilter)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_SearchTasksAsync_RoosterPlanner_Models_FilterModels_TaskFilter_
  commentId: M:RoosterPlanner.Service.ITaskService.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  fullName: RoosterPlanner.Service.ITaskService.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  nameWithType: ITaskService.SearchTasksAsync(TaskFilter)
- uid: RoosterPlanner.Service.ITaskService.SearchTasksAsync*
  name: SearchTasksAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_SearchTasksAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.SearchTasksAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.SearchTasksAsync
  nameWithType: ITaskService.SearchTasksAsync
- uid: RoosterPlanner.Service.ITaskService.UpdateCategoryAsync(RoosterPlanner.Models.Category)
  name: UpdateCategoryAsync(Category)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_UpdateCategoryAsync_RoosterPlanner_Models_Category_
  commentId: M:RoosterPlanner.Service.ITaskService.UpdateCategoryAsync(RoosterPlanner.Models.Category)
  fullName: RoosterPlanner.Service.ITaskService.UpdateCategoryAsync(RoosterPlanner.Models.Category)
  nameWithType: ITaskService.UpdateCategoryAsync(Category)
- uid: RoosterPlanner.Service.ITaskService.UpdateCategoryAsync*
  name: UpdateCategoryAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_UpdateCategoryAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.UpdateCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.UpdateCategoryAsync
  nameWithType: ITaskService.UpdateCategoryAsync
- uid: RoosterPlanner.Service.ITaskService.UpdateTaskAsync(RoosterPlanner.Models.Task)
  name: UpdateTaskAsync(Task)
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_UpdateTaskAsync_RoosterPlanner_Models_Task_
  commentId: M:RoosterPlanner.Service.ITaskService.UpdateTaskAsync(RoosterPlanner.Models.Task)
  fullName: RoosterPlanner.Service.ITaskService.UpdateTaskAsync(RoosterPlanner.Models.Task)
  nameWithType: ITaskService.UpdateTaskAsync(Task)
- uid: RoosterPlanner.Service.ITaskService.UpdateTaskAsync*
  name: UpdateTaskAsync
  href: api/RoosterPlanner.Service.ITaskService.html#RoosterPlanner_Service_ITaskService_UpdateTaskAsync_
  commentId: Overload:RoosterPlanner.Service.ITaskService.UpdateTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ITaskService.UpdateTaskAsync
  nameWithType: ITaskService.UpdateTaskAsync
- uid: RoosterPlanner.Service.ParticipationService
  name: ParticipationService
  href: api/RoosterPlanner.Service.ParticipationService.html
  commentId: T:RoosterPlanner.Service.ParticipationService
  fullName: RoosterPlanner.Service.ParticipationService
  nameWithType: ParticipationService
- uid: RoosterPlanner.Service.ParticipationService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.ParticipationService},RoosterPlanner.Service.IAzureB2CService,RoosterPlanner.Service.IPersonService,RoosterPlanner.Email.IEmailService)
  name: ParticipationService(IUnitOfWork, ILogger<ParticipationService>, IAzureB2CService, IPersonService, IEmailService)
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService__ctor_RoosterPlanner_Data_Common_IUnitOfWork_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Service_ParticipationService__RoosterPlanner_Service_IAzureB2CService_RoosterPlanner_Service_IPersonService_RoosterPlanner_Email_IEmailService_
  commentId: M:RoosterPlanner.Service.ParticipationService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.ParticipationService},RoosterPlanner.Service.IAzureB2CService,RoosterPlanner.Service.IPersonService,RoosterPlanner.Email.IEmailService)
  name.vb: ParticipationService(IUnitOfWork, ILogger(Of ParticipationService), IAzureB2CService, IPersonService, IEmailService)
  fullName: RoosterPlanner.Service.ParticipationService.ParticipationService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Service.ParticipationService>, RoosterPlanner.Service.IAzureB2CService, RoosterPlanner.Service.IPersonService, RoosterPlanner.Email.IEmailService)
  fullName.vb: RoosterPlanner.Service.ParticipationService.ParticipationService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Service.ParticipationService), RoosterPlanner.Service.IAzureB2CService, RoosterPlanner.Service.IPersonService, RoosterPlanner.Email.IEmailService)
  nameWithType: ParticipationService.ParticipationService(IUnitOfWork, ILogger<ParticipationService>, IAzureB2CService, IPersonService, IEmailService)
  nameWithType.vb: ParticipationService.ParticipationService(IUnitOfWork, ILogger(Of ParticipationService), IAzureB2CService, IPersonService, IEmailService)
- uid: RoosterPlanner.Service.ParticipationService.#ctor*
  name: ParticipationService
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService__ctor_
  commentId: Overload:RoosterPlanner.Service.ParticipationService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.ParticipationService.ParticipationService
  nameWithType: ParticipationService.ParticipationService
- uid: RoosterPlanner.Service.ParticipationService.AddParticipationAsync(RoosterPlanner.Models.Participation)
  name: AddParticipationAsync(Participation)
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_AddParticipationAsync_RoosterPlanner_Models_Participation_
  commentId: M:RoosterPlanner.Service.ParticipationService.AddParticipationAsync(RoosterPlanner.Models.Participation)
  fullName: RoosterPlanner.Service.ParticipationService.AddParticipationAsync(RoosterPlanner.Models.Participation)
  nameWithType: ParticipationService.AddParticipationAsync(Participation)
- uid: RoosterPlanner.Service.ParticipationService.AddParticipationAsync*
  name: AddParticipationAsync
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_AddParticipationAsync_
  commentId: Overload:RoosterPlanner.Service.ParticipationService.AddParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ParticipationService.AddParticipationAsync
  nameWithType: ParticipationService.AddParticipationAsync
- uid: RoosterPlanner.Service.ParticipationService.GetParticipationAsync(System.Guid)
  name: GetParticipationAsync(Guid)
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_GetParticipationAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ParticipationService.GetParticipationAsync(System.Guid)
  fullName: RoosterPlanner.Service.ParticipationService.GetParticipationAsync(System.Guid)
  nameWithType: ParticipationService.GetParticipationAsync(Guid)
- uid: RoosterPlanner.Service.ParticipationService.GetParticipationAsync(System.Guid,System.Guid)
  name: GetParticipationAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_GetParticipationAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.ParticipationService.GetParticipationAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.ParticipationService.GetParticipationAsync(System.Guid, System.Guid)
  nameWithType: ParticipationService.GetParticipationAsync(Guid, Guid)
- uid: RoosterPlanner.Service.ParticipationService.GetParticipationAsync*
  name: GetParticipationAsync
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_GetParticipationAsync_
  commentId: Overload:RoosterPlanner.Service.ParticipationService.GetParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ParticipationService.GetParticipationAsync
  nameWithType: ParticipationService.GetParticipationAsync
- uid: RoosterPlanner.Service.ParticipationService.GetParticipationsAsync(System.Guid)
  name: GetParticipationsAsync(Guid)
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_GetParticipationsAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ParticipationService.GetParticipationsAsync(System.Guid)
  fullName: RoosterPlanner.Service.ParticipationService.GetParticipationsAsync(System.Guid)
  nameWithType: ParticipationService.GetParticipationsAsync(Guid)
- uid: RoosterPlanner.Service.ParticipationService.GetParticipationsAsync*
  name: GetParticipationsAsync
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_GetParticipationsAsync_
  commentId: Overload:RoosterPlanner.Service.ParticipationService.GetParticipationsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ParticipationService.GetParticipationsAsync
  nameWithType: ParticipationService.GetParticipationsAsync
- uid: RoosterPlanner.Service.ParticipationService.GetParticipationsWithAvailabilitiesAsync(System.Guid)
  name: GetParticipationsWithAvailabilitiesAsync(Guid)
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_GetParticipationsWithAvailabilitiesAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ParticipationService.GetParticipationsWithAvailabilitiesAsync(System.Guid)
  fullName: RoosterPlanner.Service.ParticipationService.GetParticipationsWithAvailabilitiesAsync(System.Guid)
  nameWithType: ParticipationService.GetParticipationsWithAvailabilitiesAsync(Guid)
- uid: RoosterPlanner.Service.ParticipationService.GetParticipationsWithAvailabilitiesAsync*
  name: GetParticipationsWithAvailabilitiesAsync
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_GetParticipationsWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Service.ParticipationService.GetParticipationsWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ParticipationService.GetParticipationsWithAvailabilitiesAsync
  nameWithType: ParticipationService.GetParticipationsWithAvailabilitiesAsync
- uid: RoosterPlanner.Service.ParticipationService.GetUserParticipationsAsync(System.Guid)
  name: GetUserParticipationsAsync(Guid)
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_GetUserParticipationsAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ParticipationService.GetUserParticipationsAsync(System.Guid)
  fullName: RoosterPlanner.Service.ParticipationService.GetUserParticipationsAsync(System.Guid)
  nameWithType: ParticipationService.GetUserParticipationsAsync(Guid)
- uid: RoosterPlanner.Service.ParticipationService.GetUserParticipationsAsync*
  name: GetUserParticipationsAsync
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_GetUserParticipationsAsync_
  commentId: Overload:RoosterPlanner.Service.ParticipationService.GetUserParticipationsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ParticipationService.GetUserParticipationsAsync
  nameWithType: ParticipationService.GetUserParticipationsAsync
- uid: RoosterPlanner.Service.ParticipationService.SendEmail(System.String,System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  name: SendEmail(String, String, String, Boolean, String, Attachment)
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_SendEmail_System_String_System_String_System_String_System_Boolean_System_String_System_Net_Mail_Attachment_
  commentId: M:RoosterPlanner.Service.ParticipationService.SendEmail(System.String,System.String,System.String,System.Boolean,System.String,System.Net.Mail.Attachment)
  fullName: RoosterPlanner.Service.ParticipationService.SendEmail(System.String, System.String, System.String, System.Boolean, System.String, System.Net.Mail.Attachment)
  nameWithType: ParticipationService.SendEmail(String, String, String, Boolean, String, Attachment)
- uid: RoosterPlanner.Service.ParticipationService.SendEmail*
  name: SendEmail
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_SendEmail_
  commentId: Overload:RoosterPlanner.Service.ParticipationService.SendEmail
  isSpec: "True"
  fullName: RoosterPlanner.Service.ParticipationService.SendEmail
  nameWithType: ParticipationService.SendEmail
- uid: RoosterPlanner.Service.ParticipationService.UpdateParticipationAsync(RoosterPlanner.Models.Participation)
  name: UpdateParticipationAsync(Participation)
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_UpdateParticipationAsync_RoosterPlanner_Models_Participation_
  commentId: M:RoosterPlanner.Service.ParticipationService.UpdateParticipationAsync(RoosterPlanner.Models.Participation)
  fullName: RoosterPlanner.Service.ParticipationService.UpdateParticipationAsync(RoosterPlanner.Models.Participation)
  nameWithType: ParticipationService.UpdateParticipationAsync(Participation)
- uid: RoosterPlanner.Service.ParticipationService.UpdateParticipationAsync*
  name: UpdateParticipationAsync
  href: api/RoosterPlanner.Service.ParticipationService.html#RoosterPlanner_Service_ParticipationService_UpdateParticipationAsync_
  commentId: Overload:RoosterPlanner.Service.ParticipationService.UpdateParticipationAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ParticipationService.UpdateParticipationAsync
  nameWithType: ParticipationService.UpdateParticipationAsync
- uid: RoosterPlanner.Service.PersonService
  name: PersonService
  href: api/RoosterPlanner.Service.PersonService.html
  commentId: T:RoosterPlanner.Service.PersonService
  fullName: RoosterPlanner.Service.PersonService
  nameWithType: PersonService
- uid: RoosterPlanner.Service.PersonService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,RoosterPlanner.Service.IAzureB2CService,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.PersonService})
  name: PersonService(IUnitOfWork, IAzureB2CService, ILogger<PersonService>)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService__ctor_RoosterPlanner_Data_Common_IUnitOfWork_RoosterPlanner_Service_IAzureB2CService_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Service_PersonService__
  commentId: M:RoosterPlanner.Service.PersonService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,RoosterPlanner.Service.IAzureB2CService,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.PersonService})
  name.vb: PersonService(IUnitOfWork, IAzureB2CService, ILogger(Of PersonService))
  fullName: RoosterPlanner.Service.PersonService.PersonService(RoosterPlanner.Data.Common.IUnitOfWork, RoosterPlanner.Service.IAzureB2CService, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Service.PersonService>)
  fullName.vb: RoosterPlanner.Service.PersonService.PersonService(RoosterPlanner.Data.Common.IUnitOfWork, RoosterPlanner.Service.IAzureB2CService, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Service.PersonService))
  nameWithType: PersonService.PersonService(IUnitOfWork, IAzureB2CService, ILogger<PersonService>)
  nameWithType.vb: PersonService.PersonService(IUnitOfWork, IAzureB2CService, ILogger(Of PersonService))
- uid: RoosterPlanner.Service.PersonService.#ctor*
  name: PersonService
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService__ctor_
  commentId: Overload:RoosterPlanner.Service.PersonService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.PersonService
  nameWithType: PersonService.PersonService
- uid: RoosterPlanner.Service.PersonService.GetB2CMembersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  name: GetB2CMembersAsync(PersonFilter)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetB2CMembersAsync_RoosterPlanner_Models_FilterModels_PersonFilter_
  commentId: M:RoosterPlanner.Service.PersonService.GetB2CMembersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  fullName: RoosterPlanner.Service.PersonService.GetB2CMembersAsync(RoosterPlanner.Models.FilterModels.PersonFilter)
  nameWithType: PersonService.GetB2CMembersAsync(PersonFilter)
- uid: RoosterPlanner.Service.PersonService.GetB2CMembersAsync*
  name: GetB2CMembersAsync
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetB2CMembersAsync_
  commentId: Overload:RoosterPlanner.Service.PersonService.GetB2CMembersAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.GetB2CMembersAsync
  nameWithType: PersonService.GetB2CMembersAsync
- uid: RoosterPlanner.Service.PersonService.GetManagerAsync(System.Guid,System.Guid)
  name: GetManagerAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetManagerAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.PersonService.GetManagerAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.PersonService.GetManagerAsync(System.Guid, System.Guid)
  nameWithType: PersonService.GetManagerAsync(Guid, Guid)
- uid: RoosterPlanner.Service.PersonService.GetManagerAsync*
  name: GetManagerAsync
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetManagerAsync_
  commentId: Overload:RoosterPlanner.Service.PersonService.GetManagerAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.GetManagerAsync
  nameWithType: PersonService.GetManagerAsync
- uid: RoosterPlanner.Service.PersonService.GetManagersAsync(System.Guid)
  name: GetManagersAsync(Guid)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetManagersAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.PersonService.GetManagersAsync(System.Guid)
  fullName: RoosterPlanner.Service.PersonService.GetManagersAsync(System.Guid)
  nameWithType: PersonService.GetManagersAsync(Guid)
- uid: RoosterPlanner.Service.PersonService.GetManagersAsync*
  name: GetManagersAsync
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetManagersAsync_
  commentId: Overload:RoosterPlanner.Service.PersonService.GetManagersAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.GetManagersAsync
  nameWithType: PersonService.GetManagersAsync
- uid: RoosterPlanner.Service.PersonService.GetPersonAsync(System.Guid)
  name: GetPersonAsync(Guid)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetPersonAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.PersonService.GetPersonAsync(System.Guid)
  fullName: RoosterPlanner.Service.PersonService.GetPersonAsync(System.Guid)
  nameWithType: PersonService.GetPersonAsync(Guid)
- uid: RoosterPlanner.Service.PersonService.GetPersonAsync*
  name: GetPersonAsync
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetPersonAsync_
  commentId: Overload:RoosterPlanner.Service.PersonService.GetPersonAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.GetPersonAsync
  nameWithType: PersonService.GetPersonAsync
- uid: RoosterPlanner.Service.PersonService.GetProjectsManagedByAsync(System.Guid)
  name: GetProjectsManagedByAsync(Guid)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetProjectsManagedByAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.PersonService.GetProjectsManagedByAsync(System.Guid)
  fullName: RoosterPlanner.Service.PersonService.GetProjectsManagedByAsync(System.Guid)
  nameWithType: PersonService.GetProjectsManagedByAsync(Guid)
- uid: RoosterPlanner.Service.PersonService.GetProjectsManagedByAsync*
  name: GetProjectsManagedByAsync
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetProjectsManagedByAsync_
  commentId: Overload:RoosterPlanner.Service.PersonService.GetProjectsManagedByAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.GetProjectsManagedByAsync
  nameWithType: PersonService.GetProjectsManagedByAsync
- uid: RoosterPlanner.Service.PersonService.GetUserAsync(System.Guid)
  name: GetUserAsync(Guid)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetUserAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.PersonService.GetUserAsync(System.Guid)
  fullName: RoosterPlanner.Service.PersonService.GetUserAsync(System.Guid)
  nameWithType: PersonService.GetUserAsync(Guid)
- uid: RoosterPlanner.Service.PersonService.GetUserAsync*
  name: GetUserAsync
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_GetUserAsync_
  commentId: Overload:RoosterPlanner.Service.PersonService.GetUserAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.GetUserAsync
  nameWithType: PersonService.GetUserAsync
- uid: RoosterPlanner.Service.PersonService.MakeManagerAsync(RoosterPlanner.Models.Manager)
  name: MakeManagerAsync(Manager)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_MakeManagerAsync_RoosterPlanner_Models_Manager_
  commentId: M:RoosterPlanner.Service.PersonService.MakeManagerAsync(RoosterPlanner.Models.Manager)
  fullName: RoosterPlanner.Service.PersonService.MakeManagerAsync(RoosterPlanner.Models.Manager)
  nameWithType: PersonService.MakeManagerAsync(Manager)
- uid: RoosterPlanner.Service.PersonService.MakeManagerAsync*
  name: MakeManagerAsync
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_MakeManagerAsync_
  commentId: Overload:RoosterPlanner.Service.PersonService.MakeManagerAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.MakeManagerAsync
  nameWithType: PersonService.MakeManagerAsync
- uid: RoosterPlanner.Service.PersonService.RemoveManagerAsync(RoosterPlanner.Models.Manager)
  name: RemoveManagerAsync(Manager)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_RemoveManagerAsync_RoosterPlanner_Models_Manager_
  commentId: M:RoosterPlanner.Service.PersonService.RemoveManagerAsync(RoosterPlanner.Models.Manager)
  fullName: RoosterPlanner.Service.PersonService.RemoveManagerAsync(RoosterPlanner.Models.Manager)
  nameWithType: PersonService.RemoveManagerAsync(Manager)
- uid: RoosterPlanner.Service.PersonService.RemoveManagerAsync*
  name: RemoveManagerAsync
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_RemoveManagerAsync_
  commentId: Overload:RoosterPlanner.Service.PersonService.RemoveManagerAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.RemoveManagerAsync
  nameWithType: PersonService.RemoveManagerAsync
- uid: RoosterPlanner.Service.PersonService.UpdatePersonAsync(Microsoft.Graph.User)
  name: UpdatePersonAsync(User)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_UpdatePersonAsync_Microsoft_Graph_User_
  commentId: M:RoosterPlanner.Service.PersonService.UpdatePersonAsync(Microsoft.Graph.User)
  fullName: RoosterPlanner.Service.PersonService.UpdatePersonAsync(Microsoft.Graph.User)
  nameWithType: PersonService.UpdatePersonAsync(User)
- uid: RoosterPlanner.Service.PersonService.UpdatePersonAsync(RoosterPlanner.Models.Person)
  name: UpdatePersonAsync(Person)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_UpdatePersonAsync_RoosterPlanner_Models_Person_
  commentId: M:RoosterPlanner.Service.PersonService.UpdatePersonAsync(RoosterPlanner.Models.Person)
  fullName: RoosterPlanner.Service.PersonService.UpdatePersonAsync(RoosterPlanner.Models.Person)
  nameWithType: PersonService.UpdatePersonAsync(Person)
- uid: RoosterPlanner.Service.PersonService.UpdatePersonAsync*
  name: UpdatePersonAsync
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_UpdatePersonAsync_
  commentId: Overload:RoosterPlanner.Service.PersonService.UpdatePersonAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.UpdatePersonAsync
  nameWithType: PersonService.UpdatePersonAsync
- uid: RoosterPlanner.Service.PersonService.UserManagesOtherProjectsAsync(System.Guid)
  name: UserManagesOtherProjectsAsync(Guid)
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_UserManagesOtherProjectsAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.PersonService.UserManagesOtherProjectsAsync(System.Guid)
  fullName: RoosterPlanner.Service.PersonService.UserManagesOtherProjectsAsync(System.Guid)
  nameWithType: PersonService.UserManagesOtherProjectsAsync(Guid)
- uid: RoosterPlanner.Service.PersonService.UserManagesOtherProjectsAsync*
  name: UserManagesOtherProjectsAsync
  href: api/RoosterPlanner.Service.PersonService.html#RoosterPlanner_Service_PersonService_UserManagesOtherProjectsAsync_
  commentId: Overload:RoosterPlanner.Service.PersonService.UserManagesOtherProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.PersonService.UserManagesOtherProjectsAsync
  nameWithType: PersonService.UserManagesOtherProjectsAsync
- uid: RoosterPlanner.Service.ProjectService
  name: ProjectService
  href: api/RoosterPlanner.Service.ProjectService.html
  commentId: T:RoosterPlanner.Service.ProjectService
  fullName: RoosterPlanner.Service.ProjectService
  nameWithType: ProjectService
- uid: RoosterPlanner.Service.ProjectService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.ProjectService})
  name: ProjectService(IUnitOfWork, ILogger<ProjectService>)
  href: api/RoosterPlanner.Service.ProjectService.html#RoosterPlanner_Service_ProjectService__ctor_RoosterPlanner_Data_Common_IUnitOfWork_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Service_ProjectService__
  commentId: M:RoosterPlanner.Service.ProjectService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.ProjectService})
  name.vb: ProjectService(IUnitOfWork, ILogger(Of ProjectService))
  fullName: RoosterPlanner.Service.ProjectService.ProjectService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Service.ProjectService>)
  fullName.vb: RoosterPlanner.Service.ProjectService.ProjectService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Service.ProjectService))
  nameWithType: ProjectService.ProjectService(IUnitOfWork, ILogger<ProjectService>)
  nameWithType.vb: ProjectService.ProjectService(IUnitOfWork, ILogger(Of ProjectService))
- uid: RoosterPlanner.Service.ProjectService.#ctor*
  name: ProjectService
  href: api/RoosterPlanner.Service.ProjectService.html#RoosterPlanner_Service_ProjectService__ctor_
  commentId: Overload:RoosterPlanner.Service.ProjectService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.ProjectService.ProjectService
  nameWithType: ProjectService.ProjectService
- uid: RoosterPlanner.Service.ProjectService.CreateProjectAsync(RoosterPlanner.Models.Project)
  name: CreateProjectAsync(Project)
  href: api/RoosterPlanner.Service.ProjectService.html#RoosterPlanner_Service_ProjectService_CreateProjectAsync_RoosterPlanner_Models_Project_
  commentId: M:RoosterPlanner.Service.ProjectService.CreateProjectAsync(RoosterPlanner.Models.Project)
  fullName: RoosterPlanner.Service.ProjectService.CreateProjectAsync(RoosterPlanner.Models.Project)
  nameWithType: ProjectService.CreateProjectAsync(Project)
- uid: RoosterPlanner.Service.ProjectService.CreateProjectAsync*
  name: CreateProjectAsync
  href: api/RoosterPlanner.Service.ProjectService.html#RoosterPlanner_Service_ProjectService_CreateProjectAsync_
  commentId: Overload:RoosterPlanner.Service.ProjectService.CreateProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ProjectService.CreateProjectAsync
  nameWithType: ProjectService.CreateProjectAsync
- uid: RoosterPlanner.Service.ProjectService.GetProjectDetailsAsync(System.Guid)
  name: GetProjectDetailsAsync(Guid)
  href: api/RoosterPlanner.Service.ProjectService.html#RoosterPlanner_Service_ProjectService_GetProjectDetailsAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ProjectService.GetProjectDetailsAsync(System.Guid)
  fullName: RoosterPlanner.Service.ProjectService.GetProjectDetailsAsync(System.Guid)
  nameWithType: ProjectService.GetProjectDetailsAsync(Guid)
- uid: RoosterPlanner.Service.ProjectService.GetProjectDetailsAsync*
  name: GetProjectDetailsAsync
  href: api/RoosterPlanner.Service.ProjectService.html#RoosterPlanner_Service_ProjectService_GetProjectDetailsAsync_
  commentId: Overload:RoosterPlanner.Service.ProjectService.GetProjectDetailsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ProjectService.GetProjectDetailsAsync
  nameWithType: ProjectService.GetProjectDetailsAsync
- uid: RoosterPlanner.Service.ProjectService.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  name: SearchProjectsAsync(ProjectFilter)
  href: api/RoosterPlanner.Service.ProjectService.html#RoosterPlanner_Service_ProjectService_SearchProjectsAsync_RoosterPlanner_Models_FilterModels_ProjectFilter_
  commentId: M:RoosterPlanner.Service.ProjectService.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  fullName: RoosterPlanner.Service.ProjectService.SearchProjectsAsync(RoosterPlanner.Models.FilterModels.ProjectFilter)
  nameWithType: ProjectService.SearchProjectsAsync(ProjectFilter)
- uid: RoosterPlanner.Service.ProjectService.SearchProjectsAsync*
  name: SearchProjectsAsync
  href: api/RoosterPlanner.Service.ProjectService.html#RoosterPlanner_Service_ProjectService_SearchProjectsAsync_
  commentId: Overload:RoosterPlanner.Service.ProjectService.SearchProjectsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ProjectService.SearchProjectsAsync
  nameWithType: ProjectService.SearchProjectsAsync
- uid: RoosterPlanner.Service.ProjectService.UpdateProjectAsync(RoosterPlanner.Models.Project)
  name: UpdateProjectAsync(Project)
  href: api/RoosterPlanner.Service.ProjectService.html#RoosterPlanner_Service_ProjectService_UpdateProjectAsync_RoosterPlanner_Models_Project_
  commentId: M:RoosterPlanner.Service.ProjectService.UpdateProjectAsync(RoosterPlanner.Models.Project)
  fullName: RoosterPlanner.Service.ProjectService.UpdateProjectAsync(RoosterPlanner.Models.Project)
  nameWithType: ProjectService.UpdateProjectAsync(Project)
- uid: RoosterPlanner.Service.ProjectService.UpdateProjectAsync*
  name: UpdateProjectAsync
  href: api/RoosterPlanner.Service.ProjectService.html#RoosterPlanner_Service_ProjectService_UpdateProjectAsync_
  commentId: Overload:RoosterPlanner.Service.ProjectService.UpdateProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ProjectService.UpdateProjectAsync
  nameWithType: ProjectService.UpdateProjectAsync
- uid: RoosterPlanner.Service.RequirementService
  name: RequirementService
  href: api/RoosterPlanner.Service.RequirementService.html
  commentId: T:RoosterPlanner.Service.RequirementService
  fullName: RoosterPlanner.Service.RequirementService
  nameWithType: RequirementService
- uid: RoosterPlanner.Service.RequirementService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.AvailabilityService})
  name: RequirementService(IUnitOfWork, ILogger<AvailabilityService>)
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService__ctor_RoosterPlanner_Data_Common_IUnitOfWork_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Service_AvailabilityService__
  commentId: M:RoosterPlanner.Service.RequirementService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.AvailabilityService})
  name.vb: RequirementService(IUnitOfWork, ILogger(Of AvailabilityService))
  fullName: RoosterPlanner.Service.RequirementService.RequirementService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Service.AvailabilityService>)
  fullName.vb: RoosterPlanner.Service.RequirementService.RequirementService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Service.AvailabilityService))
  nameWithType: RequirementService.RequirementService(IUnitOfWork, ILogger<AvailabilityService>)
  nameWithType.vb: RequirementService.RequirementService(IUnitOfWork, ILogger(Of AvailabilityService))
- uid: RoosterPlanner.Service.RequirementService.#ctor*
  name: RequirementService
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService__ctor_
  commentId: Overload:RoosterPlanner.Service.RequirementService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.RequirementService.RequirementService
  nameWithType: RequirementService.RequirementService
- uid: RoosterPlanner.Service.RequirementService.CreateRequirement(RoosterPlanner.Models.Requirement)
  name: CreateRequirement(Requirement)
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService_CreateRequirement_RoosterPlanner_Models_Requirement_
  commentId: M:RoosterPlanner.Service.RequirementService.CreateRequirement(RoosterPlanner.Models.Requirement)
  fullName: RoosterPlanner.Service.RequirementService.CreateRequirement(RoosterPlanner.Models.Requirement)
  nameWithType: RequirementService.CreateRequirement(Requirement)
- uid: RoosterPlanner.Service.RequirementService.CreateRequirement*
  name: CreateRequirement
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService_CreateRequirement_
  commentId: Overload:RoosterPlanner.Service.RequirementService.CreateRequirement
  isSpec: "True"
  fullName: RoosterPlanner.Service.RequirementService.CreateRequirement
  nameWithType: RequirementService.CreateRequirement
- uid: RoosterPlanner.Service.RequirementService.GetRequirementAsync(System.Guid)
  name: GetRequirementAsync(Guid)
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService_GetRequirementAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.RequirementService.GetRequirementAsync(System.Guid)
  fullName: RoosterPlanner.Service.RequirementService.GetRequirementAsync(System.Guid)
  nameWithType: RequirementService.GetRequirementAsync(Guid)
- uid: RoosterPlanner.Service.RequirementService.GetRequirementAsync(System.Guid,System.Guid)
  name: GetRequirementAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService_GetRequirementAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.RequirementService.GetRequirementAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.RequirementService.GetRequirementAsync(System.Guid, System.Guid)
  nameWithType: RequirementService.GetRequirementAsync(Guid, Guid)
- uid: RoosterPlanner.Service.RequirementService.GetRequirementAsync*
  name: GetRequirementAsync
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService_GetRequirementAsync_
  commentId: Overload:RoosterPlanner.Service.RequirementService.GetRequirementAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.RequirementService.GetRequirementAsync
  nameWithType: RequirementService.GetRequirementAsync
- uid: RoosterPlanner.Service.RequirementService.RemoveCertificateAsync(RoosterPlanner.Models.Requirement)
  name: RemoveCertificateAsync(Requirement)
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService_RemoveCertificateAsync_RoosterPlanner_Models_Requirement_
  commentId: M:RoosterPlanner.Service.RequirementService.RemoveCertificateAsync(RoosterPlanner.Models.Requirement)
  fullName: RoosterPlanner.Service.RequirementService.RemoveCertificateAsync(RoosterPlanner.Models.Requirement)
  nameWithType: RequirementService.RemoveCertificateAsync(Requirement)
- uid: RoosterPlanner.Service.RequirementService.RemoveCertificateAsync*
  name: RemoveCertificateAsync
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService_RemoveCertificateAsync_
  commentId: Overload:RoosterPlanner.Service.RequirementService.RemoveCertificateAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.RequirementService.RemoveCertificateAsync
  nameWithType: RequirementService.RemoveCertificateAsync
- uid: RoosterPlanner.Service.RequirementService.UpdateRequirementAsync(RoosterPlanner.Models.Requirement)
  name: UpdateRequirementAsync(Requirement)
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService_UpdateRequirementAsync_RoosterPlanner_Models_Requirement_
  commentId: M:RoosterPlanner.Service.RequirementService.UpdateRequirementAsync(RoosterPlanner.Models.Requirement)
  fullName: RoosterPlanner.Service.RequirementService.UpdateRequirementAsync(RoosterPlanner.Models.Requirement)
  nameWithType: RequirementService.UpdateRequirementAsync(Requirement)
- uid: RoosterPlanner.Service.RequirementService.UpdateRequirementAsync*
  name: UpdateRequirementAsync
  href: api/RoosterPlanner.Service.RequirementService.html#RoosterPlanner_Service_RequirementService_UpdateRequirementAsync_
  commentId: Overload:RoosterPlanner.Service.RequirementService.UpdateRequirementAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.RequirementService.UpdateRequirementAsync
  nameWithType: RequirementService.UpdateRequirementAsync
- uid: RoosterPlanner.Service.ServiceContainer
  name: ServiceContainer
  href: api/RoosterPlanner.Service.ServiceContainer.html
  commentId: T:RoosterPlanner.Service.ServiceContainer
  fullName: RoosterPlanner.Service.ServiceContainer
  nameWithType: ServiceContainer
- uid: RoosterPlanner.Service.ServiceContainer.Register(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  name: Register(IServiceCollection, IConfiguration)
  href: api/RoosterPlanner.Service.ServiceContainer.html#RoosterPlanner_Service_ServiceContainer_Register_Microsoft_Extensions_DependencyInjection_IServiceCollection_Microsoft_Extensions_Configuration_IConfiguration_
  commentId: M:RoosterPlanner.Service.ServiceContainer.Register(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  fullName: RoosterPlanner.Service.ServiceContainer.Register(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  nameWithType: ServiceContainer.Register(IServiceCollection, IConfiguration)
- uid: RoosterPlanner.Service.ServiceContainer.Register*
  name: Register
  href: api/RoosterPlanner.Service.ServiceContainer.html#RoosterPlanner_Service_ServiceContainer_Register_
  commentId: Overload:RoosterPlanner.Service.ServiceContainer.Register
  isSpec: "True"
  fullName: RoosterPlanner.Service.ServiceContainer.Register
  nameWithType: ServiceContainer.Register
- uid: RoosterPlanner.Service.ShiftService
  name: ShiftService
  href: api/RoosterPlanner.Service.ShiftService.html
  commentId: T:RoosterPlanner.Service.ShiftService
  fullName: RoosterPlanner.Service.ShiftService
  nameWithType: ShiftService
- uid: RoosterPlanner.Service.ShiftService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.ShiftService})
  name: ShiftService(IUnitOfWork, ILogger<ShiftService>)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService__ctor_RoosterPlanner_Data_Common_IUnitOfWork_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Service_ShiftService__
  commentId: M:RoosterPlanner.Service.ShiftService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.ShiftService})
  name.vb: ShiftService(IUnitOfWork, ILogger(Of ShiftService))
  fullName: RoosterPlanner.Service.ShiftService.ShiftService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Service.ShiftService>)
  fullName.vb: RoosterPlanner.Service.ShiftService.ShiftService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Service.ShiftService))
  nameWithType: ShiftService.ShiftService(IUnitOfWork, ILogger<ShiftService>)
  nameWithType.vb: ShiftService.ShiftService(IUnitOfWork, ILogger(Of ShiftService))
- uid: RoosterPlanner.Service.ShiftService.#ctor*
  name: ShiftService
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService__ctor_
  commentId: Overload:RoosterPlanner.Service.ShiftService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.ShiftService.ShiftService
  nameWithType: ShiftService.ShiftService
- uid: RoosterPlanner.Service.ShiftService.CreateShiftsAsync(System.Collections.Generic.List{RoosterPlanner.Models.Shift})
  name: CreateShiftsAsync(List<Shift>)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_CreateShiftsAsync_System_Collections_Generic_List_RoosterPlanner_Models_Shift__
  commentId: M:RoosterPlanner.Service.ShiftService.CreateShiftsAsync(System.Collections.Generic.List{RoosterPlanner.Models.Shift})
  name.vb: CreateShiftsAsync(List(Of Shift))
  fullName: RoosterPlanner.Service.ShiftService.CreateShiftsAsync(System.Collections.Generic.List<RoosterPlanner.Models.Shift>)
  fullName.vb: RoosterPlanner.Service.ShiftService.CreateShiftsAsync(System.Collections.Generic.List(Of RoosterPlanner.Models.Shift))
  nameWithType: ShiftService.CreateShiftsAsync(List<Shift>)
  nameWithType.vb: ShiftService.CreateShiftsAsync(List(Of Shift))
- uid: RoosterPlanner.Service.ShiftService.CreateShiftsAsync*
  name: CreateShiftsAsync
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_CreateShiftsAsync_
  commentId: Overload:RoosterPlanner.Service.ShiftService.CreateShiftsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ShiftService.CreateShiftsAsync
  nameWithType: ShiftService.CreateShiftsAsync
- uid: RoosterPlanner.Service.ShiftService.ExportDataAsync(System.Guid)
  name: ExportDataAsync(Guid)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_ExportDataAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ShiftService.ExportDataAsync(System.Guid)
  fullName: RoosterPlanner.Service.ShiftService.ExportDataAsync(System.Guid)
  nameWithType: ShiftService.ExportDataAsync(Guid)
- uid: RoosterPlanner.Service.ShiftService.ExportDataAsync*
  name: ExportDataAsync
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_ExportDataAsync_
  commentId: Overload:RoosterPlanner.Service.ShiftService.ExportDataAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ShiftService.ExportDataAsync
  nameWithType: ShiftService.ExportDataAsync
- uid: RoosterPlanner.Service.ShiftService.GetShiftAsync(System.Guid)
  name: GetShiftAsync(Guid)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ShiftService.GetShiftAsync(System.Guid)
  fullName: RoosterPlanner.Service.ShiftService.GetShiftAsync(System.Guid)
  nameWithType: ShiftService.GetShiftAsync(Guid)
- uid: RoosterPlanner.Service.ShiftService.GetShiftAsync*
  name: GetShiftAsync
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftAsync_
  commentId: Overload:RoosterPlanner.Service.ShiftService.GetShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ShiftService.GetShiftAsync
  nameWithType: ShiftService.GetShiftAsync
- uid: RoosterPlanner.Service.ShiftService.GetShiftsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  name: GetShiftsAsync(ShiftFilter)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftsAsync_RoosterPlanner_Models_FilterModels_ShiftFilter_
  commentId: M:RoosterPlanner.Service.ShiftService.GetShiftsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  fullName: RoosterPlanner.Service.ShiftService.GetShiftsAsync(RoosterPlanner.Models.FilterModels.ShiftFilter)
  nameWithType: ShiftService.GetShiftsAsync(ShiftFilter)
- uid: RoosterPlanner.Service.ShiftService.GetShiftsAsync(System.Guid,System.DateTime)
  name: GetShiftsAsync(Guid, DateTime)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftsAsync_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Service.ShiftService.GetShiftsAsync(System.Guid,System.DateTime)
  fullName: RoosterPlanner.Service.ShiftService.GetShiftsAsync(System.Guid, System.DateTime)
  nameWithType: ShiftService.GetShiftsAsync(Guid, DateTime)
- uid: RoosterPlanner.Service.ShiftService.GetShiftsAsync(System.Guid,System.Guid,System.DateTime)
  name: GetShiftsAsync(Guid, Guid, DateTime)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftsAsync_System_Guid_System_Guid_System_DateTime_
  commentId: M:RoosterPlanner.Service.ShiftService.GetShiftsAsync(System.Guid,System.Guid,System.DateTime)
  fullName: RoosterPlanner.Service.ShiftService.GetShiftsAsync(System.Guid, System.Guid, System.DateTime)
  nameWithType: ShiftService.GetShiftsAsync(Guid, Guid, DateTime)
- uid: RoosterPlanner.Service.ShiftService.GetShiftsAsync*
  name: GetShiftsAsync
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftsAsync_
  commentId: Overload:RoosterPlanner.Service.ShiftService.GetShiftsAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ShiftService.GetShiftsAsync
  nameWithType: ShiftService.GetShiftsAsync
- uid: RoosterPlanner.Service.ShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid)
  name: GetShiftsWithAvailabilitiesAsync(Guid)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftsWithAvailabilitiesAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid)
  fullName: RoosterPlanner.Service.ShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid)
  nameWithType: ShiftService.GetShiftsWithAvailabilitiesAsync(Guid)
- uid: RoosterPlanner.Service.ShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid,System.Guid)
  name: GetShiftsWithAvailabilitiesAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftsWithAvailabilitiesAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.ShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.ShiftService.GetShiftsWithAvailabilitiesAsync(System.Guid, System.Guid)
  nameWithType: ShiftService.GetShiftsWithAvailabilitiesAsync(Guid, Guid)
- uid: RoosterPlanner.Service.ShiftService.GetShiftsWithAvailabilitiesAsync*
  name: GetShiftsWithAvailabilitiesAsync
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftsWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Service.ShiftService.GetShiftsWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ShiftService.GetShiftsWithAvailabilitiesAsync
  nameWithType: ShiftService.GetShiftsWithAvailabilitiesAsync
- uid: RoosterPlanner.Service.ShiftService.GetShiftWithAvailabilitiesAsync(System.Guid)
  name: GetShiftWithAvailabilitiesAsync(Guid)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftWithAvailabilitiesAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ShiftService.GetShiftWithAvailabilitiesAsync(System.Guid)
  fullName: RoosterPlanner.Service.ShiftService.GetShiftWithAvailabilitiesAsync(System.Guid)
  nameWithType: ShiftService.GetShiftWithAvailabilitiesAsync(Guid)
- uid: RoosterPlanner.Service.ShiftService.GetShiftWithAvailabilitiesAsync*
  name: GetShiftWithAvailabilitiesAsync
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetShiftWithAvailabilitiesAsync_
  commentId: Overload:RoosterPlanner.Service.ShiftService.GetShiftWithAvailabilitiesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ShiftService.GetShiftWithAvailabilitiesAsync
  nameWithType: ShiftService.GetShiftWithAvailabilitiesAsync
- uid: RoosterPlanner.Service.ShiftService.GetUniqueDataAsync(System.Guid)
  name: GetUniqueDataAsync(Guid)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetUniqueDataAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.ShiftService.GetUniqueDataAsync(System.Guid)
  fullName: RoosterPlanner.Service.ShiftService.GetUniqueDataAsync(System.Guid)
  nameWithType: ShiftService.GetUniqueDataAsync(Guid)
- uid: RoosterPlanner.Service.ShiftService.GetUniqueDataAsync*
  name: GetUniqueDataAsync
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_GetUniqueDataAsync_
  commentId: Overload:RoosterPlanner.Service.ShiftService.GetUniqueDataAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ShiftService.GetUniqueDataAsync
  nameWithType: ShiftService.GetUniqueDataAsync
- uid: RoosterPlanner.Service.ShiftService.RemoveShiftAsync(RoosterPlanner.Models.Shift)
  name: RemoveShiftAsync(Shift)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_RemoveShiftAsync_RoosterPlanner_Models_Shift_
  commentId: M:RoosterPlanner.Service.ShiftService.RemoveShiftAsync(RoosterPlanner.Models.Shift)
  fullName: RoosterPlanner.Service.ShiftService.RemoveShiftAsync(RoosterPlanner.Models.Shift)
  nameWithType: ShiftService.RemoveShiftAsync(Shift)
- uid: RoosterPlanner.Service.ShiftService.RemoveShiftAsync*
  name: RemoveShiftAsync
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_RemoveShiftAsync_
  commentId: Overload:RoosterPlanner.Service.ShiftService.RemoveShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ShiftService.RemoveShiftAsync
  nameWithType: ShiftService.RemoveShiftAsync
- uid: RoosterPlanner.Service.ShiftService.UpdateShiftAsync(RoosterPlanner.Models.Shift)
  name: UpdateShiftAsync(Shift)
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_UpdateShiftAsync_RoosterPlanner_Models_Shift_
  commentId: M:RoosterPlanner.Service.ShiftService.UpdateShiftAsync(RoosterPlanner.Models.Shift)
  fullName: RoosterPlanner.Service.ShiftService.UpdateShiftAsync(RoosterPlanner.Models.Shift)
  nameWithType: ShiftService.UpdateShiftAsync(Shift)
- uid: RoosterPlanner.Service.ShiftService.UpdateShiftAsync*
  name: UpdateShiftAsync
  href: api/RoosterPlanner.Service.ShiftService.html#RoosterPlanner_Service_ShiftService_UpdateShiftAsync_
  commentId: Overload:RoosterPlanner.Service.ShiftService.UpdateShiftAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.ShiftService.UpdateShiftAsync
  nameWithType: ShiftService.UpdateShiftAsync
- uid: RoosterPlanner.Service.TaskService
  name: TaskService
  href: api/RoosterPlanner.Service.TaskService.html
  commentId: T:RoosterPlanner.Service.TaskService
  fullName: RoosterPlanner.Service.TaskService
  nameWithType: TaskService
- uid: RoosterPlanner.Service.TaskService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.TaskService},RoosterPlanner.Service.IDocumentService)
  name: TaskService(IUnitOfWork, ILogger<TaskService>, IDocumentService)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService__ctor_RoosterPlanner_Data_Common_IUnitOfWork_Microsoft_Extensions_Logging_ILogger_RoosterPlanner_Service_TaskService__RoosterPlanner_Service_IDocumentService_
  commentId: M:RoosterPlanner.Service.TaskService.#ctor(RoosterPlanner.Data.Common.IUnitOfWork,Microsoft.Extensions.Logging.ILogger{RoosterPlanner.Service.TaskService},RoosterPlanner.Service.IDocumentService)
  name.vb: TaskService(IUnitOfWork, ILogger(Of TaskService), IDocumentService)
  fullName: RoosterPlanner.Service.TaskService.TaskService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger<RoosterPlanner.Service.TaskService>, RoosterPlanner.Service.IDocumentService)
  fullName.vb: RoosterPlanner.Service.TaskService.TaskService(RoosterPlanner.Data.Common.IUnitOfWork, Microsoft.Extensions.Logging.ILogger(Of RoosterPlanner.Service.TaskService), RoosterPlanner.Service.IDocumentService)
  nameWithType: TaskService.TaskService(IUnitOfWork, ILogger<TaskService>, IDocumentService)
  nameWithType.vb: TaskService.TaskService(IUnitOfWork, ILogger(Of TaskService), IDocumentService)
- uid: RoosterPlanner.Service.TaskService.#ctor*
  name: TaskService
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService__ctor_
  commentId: Overload:RoosterPlanner.Service.TaskService.#ctor
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.TaskService
  nameWithType: TaskService.TaskService
- uid: RoosterPlanner.Service.TaskService.AddTaskToProjectAsync(RoosterPlanner.Models.ProjectTask)
  name: AddTaskToProjectAsync(ProjectTask)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_AddTaskToProjectAsync_RoosterPlanner_Models_ProjectTask_
  commentId: M:RoosterPlanner.Service.TaskService.AddTaskToProjectAsync(RoosterPlanner.Models.ProjectTask)
  fullName: RoosterPlanner.Service.TaskService.AddTaskToProjectAsync(RoosterPlanner.Models.ProjectTask)
  nameWithType: TaskService.AddTaskToProjectAsync(ProjectTask)
- uid: RoosterPlanner.Service.TaskService.AddTaskToProjectAsync*
  name: AddTaskToProjectAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_AddTaskToProjectAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.AddTaskToProjectAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.AddTaskToProjectAsync
  nameWithType: TaskService.AddTaskToProjectAsync
- uid: RoosterPlanner.Service.TaskService.CreateCategoryAsync(RoosterPlanner.Models.Category)
  name: CreateCategoryAsync(Category)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_CreateCategoryAsync_RoosterPlanner_Models_Category_
  commentId: M:RoosterPlanner.Service.TaskService.CreateCategoryAsync(RoosterPlanner.Models.Category)
  fullName: RoosterPlanner.Service.TaskService.CreateCategoryAsync(RoosterPlanner.Models.Category)
  nameWithType: TaskService.CreateCategoryAsync(Category)
- uid: RoosterPlanner.Service.TaskService.CreateCategoryAsync*
  name: CreateCategoryAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_CreateCategoryAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.CreateCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.CreateCategoryAsync
  nameWithType: TaskService.CreateCategoryAsync
- uid: RoosterPlanner.Service.TaskService.CreateTaskAsync(RoosterPlanner.Models.Task)
  name: CreateTaskAsync(Task)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_CreateTaskAsync_RoosterPlanner_Models_Task_
  commentId: M:RoosterPlanner.Service.TaskService.CreateTaskAsync(RoosterPlanner.Models.Task)
  fullName: RoosterPlanner.Service.TaskService.CreateTaskAsync(RoosterPlanner.Models.Task)
  nameWithType: TaskService.CreateTaskAsync(Task)
- uid: RoosterPlanner.Service.TaskService.CreateTaskAsync*
  name: CreateTaskAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_CreateTaskAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.CreateTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.CreateTaskAsync
  nameWithType: TaskService.CreateTaskAsync
- uid: RoosterPlanner.Service.TaskService.GetAllCategoriesAsync
  name: GetAllCategoriesAsync()
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetAllCategoriesAsync
  commentId: M:RoosterPlanner.Service.TaskService.GetAllCategoriesAsync
  fullName: RoosterPlanner.Service.TaskService.GetAllCategoriesAsync()
  nameWithType: TaskService.GetAllCategoriesAsync()
- uid: RoosterPlanner.Service.TaskService.GetAllCategoriesAsync*
  name: GetAllCategoriesAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetAllCategoriesAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.GetAllCategoriesAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.GetAllCategoriesAsync
  nameWithType: TaskService.GetAllCategoriesAsync
- uid: RoosterPlanner.Service.TaskService.GetAllProjectTasksAsync(System.Guid)
  name: GetAllProjectTasksAsync(Guid)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetAllProjectTasksAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.TaskService.GetAllProjectTasksAsync(System.Guid)
  fullName: RoosterPlanner.Service.TaskService.GetAllProjectTasksAsync(System.Guid)
  nameWithType: TaskService.GetAllProjectTasksAsync(Guid)
- uid: RoosterPlanner.Service.TaskService.GetAllProjectTasksAsync*
  name: GetAllProjectTasksAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetAllProjectTasksAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.GetAllProjectTasksAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.GetAllProjectTasksAsync
  nameWithType: TaskService.GetAllProjectTasksAsync
- uid: RoosterPlanner.Service.TaskService.GetCategoryAsync(System.Guid)
  name: GetCategoryAsync(Guid)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetCategoryAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.TaskService.GetCategoryAsync(System.Guid)
  fullName: RoosterPlanner.Service.TaskService.GetCategoryAsync(System.Guid)
  nameWithType: TaskService.GetCategoryAsync(Guid)
- uid: RoosterPlanner.Service.TaskService.GetCategoryAsync*
  name: GetCategoryAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetCategoryAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.GetCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.GetCategoryAsync
  nameWithType: TaskService.GetCategoryAsync
- uid: RoosterPlanner.Service.TaskService.GetProjectTaskAsync(System.Guid)
  name: GetProjectTaskAsync(Guid)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetProjectTaskAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.TaskService.GetProjectTaskAsync(System.Guid)
  fullName: RoosterPlanner.Service.TaskService.GetProjectTaskAsync(System.Guid)
  nameWithType: TaskService.GetProjectTaskAsync(Guid)
- uid: RoosterPlanner.Service.TaskService.GetProjectTaskAsync(System.Guid,System.Guid)
  name: GetProjectTaskAsync(Guid, Guid)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetProjectTaskAsync_System_Guid_System_Guid_
  commentId: M:RoosterPlanner.Service.TaskService.GetProjectTaskAsync(System.Guid,System.Guid)
  fullName: RoosterPlanner.Service.TaskService.GetProjectTaskAsync(System.Guid, System.Guid)
  nameWithType: TaskService.GetProjectTaskAsync(Guid, Guid)
- uid: RoosterPlanner.Service.TaskService.GetProjectTaskAsync*
  name: GetProjectTaskAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetProjectTaskAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.GetProjectTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.GetProjectTaskAsync
  nameWithType: TaskService.GetProjectTaskAsync
- uid: RoosterPlanner.Service.TaskService.GetTaskAsync(System.Guid)
  name: GetTaskAsync(Guid)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetTaskAsync_System_Guid_
  commentId: M:RoosterPlanner.Service.TaskService.GetTaskAsync(System.Guid)
  fullName: RoosterPlanner.Service.TaskService.GetTaskAsync(System.Guid)
  nameWithType: TaskService.GetTaskAsync(Guid)
- uid: RoosterPlanner.Service.TaskService.GetTaskAsync*
  name: GetTaskAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_GetTaskAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.GetTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.GetTaskAsync
  nameWithType: TaskService.GetTaskAsync
- uid: RoosterPlanner.Service.TaskService.RemoveCategoryAsync(RoosterPlanner.Models.Category)
  name: RemoveCategoryAsync(Category)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_RemoveCategoryAsync_RoosterPlanner_Models_Category_
  commentId: M:RoosterPlanner.Service.TaskService.RemoveCategoryAsync(RoosterPlanner.Models.Category)
  fullName: RoosterPlanner.Service.TaskService.RemoveCategoryAsync(RoosterPlanner.Models.Category)
  nameWithType: TaskService.RemoveCategoryAsync(Category)
- uid: RoosterPlanner.Service.TaskService.RemoveCategoryAsync*
  name: RemoveCategoryAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_RemoveCategoryAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.RemoveCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.RemoveCategoryAsync
  nameWithType: TaskService.RemoveCategoryAsync
- uid: RoosterPlanner.Service.TaskService.RemoveProjectTaskAsync(RoosterPlanner.Models.ProjectTask)
  name: RemoveProjectTaskAsync(ProjectTask)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_RemoveProjectTaskAsync_RoosterPlanner_Models_ProjectTask_
  commentId: M:RoosterPlanner.Service.TaskService.RemoveProjectTaskAsync(RoosterPlanner.Models.ProjectTask)
  fullName: RoosterPlanner.Service.TaskService.RemoveProjectTaskAsync(RoosterPlanner.Models.ProjectTask)
  nameWithType: TaskService.RemoveProjectTaskAsync(ProjectTask)
- uid: RoosterPlanner.Service.TaskService.RemoveProjectTaskAsync*
  name: RemoveProjectTaskAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_RemoveProjectTaskAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.RemoveProjectTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.RemoveProjectTaskAsync
  nameWithType: TaskService.RemoveProjectTaskAsync
- uid: RoosterPlanner.Service.TaskService.RemoveTaskAsync(RoosterPlanner.Models.Task)
  name: RemoveTaskAsync(Task)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_RemoveTaskAsync_RoosterPlanner_Models_Task_
  commentId: M:RoosterPlanner.Service.TaskService.RemoveTaskAsync(RoosterPlanner.Models.Task)
  fullName: RoosterPlanner.Service.TaskService.RemoveTaskAsync(RoosterPlanner.Models.Task)
  nameWithType: TaskService.RemoveTaskAsync(Task)
- uid: RoosterPlanner.Service.TaskService.RemoveTaskAsync*
  name: RemoveTaskAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_RemoveTaskAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.RemoveTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.RemoveTaskAsync
  nameWithType: TaskService.RemoveTaskAsync
- uid: RoosterPlanner.Service.TaskService.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  name: SearchTasksAsync(TaskFilter)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_SearchTasksAsync_RoosterPlanner_Models_FilterModels_TaskFilter_
  commentId: M:RoosterPlanner.Service.TaskService.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  fullName: RoosterPlanner.Service.TaskService.SearchTasksAsync(RoosterPlanner.Models.FilterModels.TaskFilter)
  nameWithType: TaskService.SearchTasksAsync(TaskFilter)
- uid: RoosterPlanner.Service.TaskService.SearchTasksAsync*
  name: SearchTasksAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_SearchTasksAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.SearchTasksAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.SearchTasksAsync
  nameWithType: TaskService.SearchTasksAsync
- uid: RoosterPlanner.Service.TaskService.UpdateCategoryAsync(RoosterPlanner.Models.Category)
  name: UpdateCategoryAsync(Category)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_UpdateCategoryAsync_RoosterPlanner_Models_Category_
  commentId: M:RoosterPlanner.Service.TaskService.UpdateCategoryAsync(RoosterPlanner.Models.Category)
  fullName: RoosterPlanner.Service.TaskService.UpdateCategoryAsync(RoosterPlanner.Models.Category)
  nameWithType: TaskService.UpdateCategoryAsync(Category)
- uid: RoosterPlanner.Service.TaskService.UpdateCategoryAsync*
  name: UpdateCategoryAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_UpdateCategoryAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.UpdateCategoryAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.UpdateCategoryAsync
  nameWithType: TaskService.UpdateCategoryAsync
- uid: RoosterPlanner.Service.TaskService.UpdateTaskAsync(RoosterPlanner.Models.Task)
  name: UpdateTaskAsync(Task)
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_UpdateTaskAsync_RoosterPlanner_Models_Task_
  commentId: M:RoosterPlanner.Service.TaskService.UpdateTaskAsync(RoosterPlanner.Models.Task)
  fullName: RoosterPlanner.Service.TaskService.UpdateTaskAsync(RoosterPlanner.Models.Task)
  nameWithType: TaskService.UpdateTaskAsync(Task)
- uid: RoosterPlanner.Service.TaskService.UpdateTaskAsync*
  name: UpdateTaskAsync
  href: api/RoosterPlanner.Service.TaskService.html#RoosterPlanner_Service_TaskService_UpdateTaskAsync_
  commentId: Overload:RoosterPlanner.Service.TaskService.UpdateTaskAsync
  isSpec: "True"
  fullName: RoosterPlanner.Service.TaskService.UpdateTaskAsync
  nameWithType: TaskService.UpdateTaskAsync
- uid: RoosterPlanner.UI
  name: RoosterPlanner.UI
  href: api/RoosterPlanner.UI.html
  commentId: N:RoosterPlanner.UI
  fullName: RoosterPlanner.UI
  nameWithType: RoosterPlanner.UI
- uid: RoosterPlanner.UI.Program
  name: Program
  href: api/RoosterPlanner.UI.Program.html
  commentId: T:RoosterPlanner.UI.Program
  fullName: RoosterPlanner.UI.Program
  nameWithType: Program
- uid: RoosterPlanner.UI.Program.CreateHostBuilder(System.String[])
  name: CreateHostBuilder(String[])
  href: api/RoosterPlanner.UI.Program.html#RoosterPlanner_UI_Program_CreateHostBuilder_System_String___
  commentId: M:RoosterPlanner.UI.Program.CreateHostBuilder(System.String[])
  name.vb: CreateHostBuilder(String())
  fullName: RoosterPlanner.UI.Program.CreateHostBuilder(System.String[])
  fullName.vb: RoosterPlanner.UI.Program.CreateHostBuilder(System.String())
  nameWithType: Program.CreateHostBuilder(String[])
  nameWithType.vb: Program.CreateHostBuilder(String())
- uid: RoosterPlanner.UI.Program.CreateHostBuilder*
  name: CreateHostBuilder
  href: api/RoosterPlanner.UI.Program.html#RoosterPlanner_UI_Program_CreateHostBuilder_
  commentId: Overload:RoosterPlanner.UI.Program.CreateHostBuilder
  isSpec: "True"
  fullName: RoosterPlanner.UI.Program.CreateHostBuilder
  nameWithType: Program.CreateHostBuilder
- uid: RoosterPlanner.UI.Program.Main(System.String[])
  name: Main(String[])
  href: api/RoosterPlanner.UI.Program.html#RoosterPlanner_UI_Program_Main_System_String___
  commentId: M:RoosterPlanner.UI.Program.Main(System.String[])
  name.vb: Main(String())
  fullName: RoosterPlanner.UI.Program.Main(System.String[])
  fullName.vb: RoosterPlanner.UI.Program.Main(System.String())
  nameWithType: Program.Main(String[])
  nameWithType.vb: Program.Main(String())
- uid: RoosterPlanner.UI.Program.Main*
  name: Main
  href: api/RoosterPlanner.UI.Program.html#RoosterPlanner_UI_Program_Main_
  commentId: Overload:RoosterPlanner.UI.Program.Main
  isSpec: "True"
  fullName: RoosterPlanner.UI.Program.Main
  nameWithType: Program.Main
- uid: RoosterPlanner.UI.Startup
  name: Startup
  href: api/RoosterPlanner.UI.Startup.html
  commentId: T:RoosterPlanner.UI.Startup
  fullName: RoosterPlanner.UI.Startup
  nameWithType: Startup
- uid: RoosterPlanner.UI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  name: Configure(IApplicationBuilder, IWebHostEnvironment)
  href: api/RoosterPlanner.UI.Startup.html#RoosterPlanner_UI_Startup_Configure_Microsoft_AspNetCore_Builder_IApplicationBuilder_Microsoft_AspNetCore_Hosting_IWebHostEnvironment_
  commentId: M:RoosterPlanner.UI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  fullName: RoosterPlanner.UI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder, Microsoft.AspNetCore.Hosting.IWebHostEnvironment)
  nameWithType: Startup.Configure(IApplicationBuilder, IWebHostEnvironment)
- uid: RoosterPlanner.UI.Startup.Configure*
  name: Configure
  href: api/RoosterPlanner.UI.Startup.html#RoosterPlanner_UI_Startup_Configure_
  commentId: Overload:RoosterPlanner.UI.Startup.Configure
  isSpec: "True"
  fullName: RoosterPlanner.UI.Startup.Configure
  nameWithType: Startup.Configure
- uid: RoosterPlanner.UI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  name: ConfigureServices(IServiceCollection)
  href: api/RoosterPlanner.UI.Startup.html#RoosterPlanner_UI_Startup_ConfigureServices_Microsoft_Extensions_DependencyInjection_IServiceCollection_
  commentId: M:RoosterPlanner.UI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  fullName: RoosterPlanner.UI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)
  nameWithType: Startup.ConfigureServices(IServiceCollection)
- uid: RoosterPlanner.UI.Startup.ConfigureServices*
  name: ConfigureServices
  href: api/RoosterPlanner.UI.Startup.html#RoosterPlanner_UI_Startup_ConfigureServices_
  commentId: Overload:RoosterPlanner.UI.Startup.ConfigureServices
  isSpec: "True"
  fullName: RoosterPlanner.UI.Startup.ConfigureServices
  nameWithType: Startup.ConfigureServices
